<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HSUCF.Controls</name>
    </assembly>
    <members>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem">
            <summary>
             菜单项。这个类包含了菜单项的所有必要信息。
             可以从AutocompleteItem继承出你的元素，并覆盖其虚方法，这样来扩展菜单功能。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.Tag">
            <summary>
            附加任何数据
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.toolTipTitle">
            <summary>
            工具提示标题
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.toolTipText">
            <summary>
            工具提示文本
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.menuText">
            <summary>
            显示在弹出菜单上的文本
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.GetTextForReplace">
            <summary>
            返回要插入的文本。你可以动态修改要插入的文本。例如，你可以插入当前日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.Compare(System.String)">
            <summary>
            菜单项显示与否。默认情况下，只有菜单项以给定的片段开头，才会显示该项。
            但是可以重写这个方法的行为。比如，可以用子字符串来比较，或是进行一些模糊比较。
            </summary>
            <param name="fragmentText"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.ToString">
            <summary>
            菜单文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.OnSelected(HSUCF.Controls.AutoCompleteMenu.SelectedEventArgs)">
            <summary>
            在文本插入文本框的时候调用。可以在这里对文本进行一些额外的操作。比如，可以把光标移动到某处。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.OnPaint(HSUCF.Controls.AutoCompleteMenu.PaintItemEventArgs)">
            <summary>
            绘制文本
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.Parent">
            <summary>
            自动完成菜单
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.Text">
            <summary>
            要插入文本框的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.ImageIndex">
            <summary>
            菜单项的图片索引
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.Key">
            <summary>
            插入文本框文本对应的主键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.ToolTipTitle">
            <summary>
            工具提示标题。如果ToolTipTitle为null，则不会显示工具提示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.ToolTipText">
            <summary>
            工具提示文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem.MenuText">
            <summary>
            显示在弹出菜单上的文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.MethodAutoCompleteItem">
            <summary>
            在点后面插入方法名称
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.SnippetAutoCompleteItem">
            <summary>
            用于插入代码段
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.SubstringAutoCompleteItem">
            <summary>
            用子字符串来比较文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.MulticolumnAutoCompleteItem">
            <summary>
            绘制多列菜单
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.IAutoCompleteListView.SelectedItemIndex">
            <summary>
            VisibleItems中的选中索引
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.IAutoCompleteListView.SelectedItemBackColor">
            <summary>
            选中项的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.IAutoCompleteListView.BaseColor">
            <summary>
            ListView的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.selectedItemBackColor">
            <summary>
            选中项背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.baseColor">
            <summary>
            下拉列表背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.AdjustScroll">
            <summary>
            滚轮校准
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.ScrollToSelected">
            <summary>
            滚轮选中
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制下拉项
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            滚轮事件
            </summary>
            <param name="se"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            滚轮选中项
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            单击选中项
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            双击选中项
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.OnItemSelected">
            <summary>
            选中项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.PointToItemIndex(System.Drawing.Point)">
            <summary>
            获取选中项索引
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            键盘处理
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.SelectItem(System.Int32)">
            <summary>
            选中下拉项
            </summary>
            <param name="itemIndex"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.SetItems(System.Collections.Generic.List{HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem})">
            <summary>
            设置所有项
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.SetToolTip(HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem)">
            <summary>
            设置图标显示
            </summary>
            <param name="autoCompleteItem"></param>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.ItemHeight">
            <summary>
            下拉项高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.Font">
            <summary>
            下拉字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.ImageList">
            <summary>
            图标集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.VisibleItems">
            <summary>
            下拉显示的所有项集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteListView.SelectedItemIndex">
            <summary>
            VisibleItems中的选中项索引
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsAutoCompleteMenu">
            <summary>
            自动完成菜单基本功能的主要组件。它订阅TextBox的事件，查找合适的变体，
            显示一个下拉菜单，并将新的文字插入文本框。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsAutoCompleteMenu.sourceItems">
            <summary>
            数据源所有项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ListView_ItemSelected(System.Object,System.EventArgs)">
            <summary>
            选中项事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.CreateWrapper(System.Windows.Forms.Control)">
            <summary>
            绑定输入框
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.Update">
            <summary>
            更新下拉菜单大小
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.SetAutoCompleteMenu(System.Windows.Forms.Control,HSUCF.Controls.hsAutoCompleteMenu)">
            <summary>
            对指定的输入框绑定自动完成菜单
            </summary>
            <param name="control">输入框</param>
            <param name="menu">自动完成菜单</param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            计时器
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.SubscribeForm(HSUCF.Controls.AutoCompleteMenu.ITextBoxWrapper)">
            <summary>
            订阅弹出窗口
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.UnsubscribeForm(HSUCF.Controls.AutoCompleteMenu.ITextBoxWrapper)">
            <summary>
            释放弹出窗口
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.form_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            父类窗口关闭时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.form_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            父类窗口移动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            输入框获得鼠标焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.FindWrapper(System.Windows.Forms.Control)">
            <summary>
            查找输入框
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.control_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            输入框获得键盘输入
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ResetTimer">
            <summary>
            重置计时器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ResetTimer(System.Int32)">
            <summary>
            重置计时器
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.control_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            输入框滚轮操作
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.control_LostFocus(System.Object,System.EventArgs)">
            <summary>
            输入框丢失焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.RefreshSelectedItemKey">
            <summary>
            刷新当前选中Key
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ClearText">
            <summary>
            清空输入框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.GetAutoCompleteMenu(System.Windows.Forms.Control)">
            <summary>
            获取下拉菜单
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ShowAutoComplete">
            <summary>
            显示自动下拉窗体
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ShowAutoComplete(System.Boolean)">
            <summary>
            显示自动下拉窗体
            </summary>
            <param name="forced"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ShowMenu">
            <summary>
            显示菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.BuildAutoCompleteList(System.Boolean)">
            <summary>
            创建下拉列表
            </summary>
            <param name="forced"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            打开下拉显示
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.GetFragment(System.String)">
            <summary>
            获取选中字符串
            </summary>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.Close">
            <summary>
            关闭下拉
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.SetAutoCompleteItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            设置下拉项集合
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.SetAutoCompleteItems(System.Collections.Generic.IEnumerable{HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem})">
            <summary>
            设置下拉项集合
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.AddItem(System.String)">
            <summary>
            添加下拉项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.AddItem(HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem)">
            <summary>
            添加下拉项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.Show(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            显示下拉
            </summary>
            <param name="control"></param>
            <param name="forced"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.OnSelecting">
            <summary>
            选中
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ApplyAutoComplete(HSUCF.Controls.AutoCompleteMenu.AutoCompleteItem,HSUCF.Controls.AutoCompleteMenu.Range)">
            <summary>
            请求下拉项
            </summary>
            <param name="item"></param>
            <param name="fragment"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.OnSelecting(HSUCF.Controls.AutoCompleteMenu.SelectingEventArgs)">
            <summary>
            选中事件
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.OnSelected(HSUCF.Controls.AutoCompleteMenu.SelectedEventArgs)">
            <summary>
            选中事件后
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.SelectNext(System.Int32)">
            <summary>
            选择下一项
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteMenu.ProcessKey(System.Char,System.Windows.Forms.Keys)">
            <summary>
            键盘操作
            </summary>
            <param name="c"></param>
            <param name="keyModifiers"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.VisibleItems">
            <summary>
            下拉所有项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.SelectedItemIndex">
            <summary>
            选中项索引
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.SelectedItemBackColor">
            <summary>
            选中项背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.BaseColor">
            <summary>
            下拉列表背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.SelectedSourceItem">
            <summary>
            用于选中的项目的Key的保存，可以是外部赋值（请一并维护相关Text值），当然也可以是内部选中后修改该值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.Host">
            <summary>
            从ToolStripDropDown派生的可视化组件。该控件能在不丢失窗体焦点的情况下显示菜单。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.TargetControlWrapper">
            <summary>
            输入框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.MaximumSize">
            <summary>
            弹出菜单最大尺寸
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.Font">
            <summary>
            弹出菜单字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.CaptureFocus">
            <summary>
            判断下拉菜单是否获得焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.RightToLeft">
            <summary>
            是否从右到左
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.ImageList">
            <summary>
            保存菜单项用到的图片
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.Fragment">
            <summary>
            当前文本片段
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.SearchPattern">
            <summary>
            搜索光标处片段的正则表达式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.MinFragmentLength">
            <summary>
            菜单显示的最小片段长度。只有当光标处当前片段长度不低于MinFragmentLength才会显示AutocompleteMenu。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.AllowsTabKey">
            <summary>
            允许使用TAB键选择菜单项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.IsClearText">
            <summary>
            允许使用TAB键选择菜单项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.AppearInterval">
            <summary>
            菜单显示的间隔（毫秒）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.Items">
            <summary>
            菜单项列表（AutocompleteMenu最简单的用法）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.ListView">
            <summary>
            从UserControl继承的可视化组件。使用GDI+绘制下拉菜单的菜单项。
            该控件和ListView很像，但能够高效地显示大量的元素。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteMenu.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.AutoCompleteMenuHost">
            <summary>
            从ToolStripDropDown派生的可视化组件。该控件能在不丢失窗体焦点的情况下显示菜单。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoCompleteMenu.AutoCompleteMenuHost.CalcSize">
            <summary>
            计算下拉框大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoCompleteMenu.AutoCompleteMenuHost.RightToLeft">
            <summary>
            是否从右到左显示
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoCompleteMenu.ITextBoxWrapper">
            <summary>
            文本框封装接口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.ToolStrip_Text_DefaultColor">
            <summary>
            系统工具条的字体默认颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.ToolStrip_Text_MouseEnterColor">
            <summary>
            系统工具条的字体鼠标移动上去颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.ToolStrip_Text_DropDownColor">
            <summary>
            系统工具条下拉字体前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.ToolStrip_Text_MouseEnterBgColor">
            <summary>
            系统工具条的字体鼠标移动上去背景颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.ToolStrip_Text_FontSize">
            <summary>
            系统工具条的字体大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Text_DefaultColor">
            <summary>
            系统主菜单项默认字体前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Text_DropDownColor">
            <summary>
            系统主菜单项下拉字体前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Text_MouseEnterColor">
            <summary>
            系统主菜单项进入时字体前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Bg_DefaultColor">
            <summary>
            系统主菜单项默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Bg_MouseEnterColor">
            <summary>
            系统主菜单项鼠标移动上去背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.BaseTheme.MenuStrip_Text_FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.SetStripItemColors(System.Windows.Forms.ToolStrip)">
            <summary>
            调用
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.SetStripItemColors(System.Windows.Forms.ToolStripItem)">
            <summary>
            设置项的颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.SetToolStripItem(System.Windows.Forms.ToolStripItem)">
            <summary>
            设置项的颜色
            </summary>
            <param name="toolItem"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.toolItem_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            鼠标离开
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.toolItem_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            鼠标进入
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.toolItem_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            下拉关闭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.Initialize">
            <summary>
            初始化主题数据
            </summary>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetNode(System.Xml.XmlNode,System.String)">
            <summary>
            获取节点
            </summary>
            <param name="parent"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.Init(System.Xml.XmlNode)">
            <summary>
            转换实现
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetAllTheme">
            <summary>
            获取所有主题
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetTheme(System.String)">
            <summary>
            获取指定样式
            </summary>
            <param name="Name">样式名称</param>
            <returns>指定样式的XML代码</returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetTheme">
            <summary>
            获取当前样式方案
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.SetThemeAsCurrent(System.String)">
            <summary>
            将某样式方案设置成当前方案
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.ConvertColor(System.String)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.ConvertFont(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="familyName"></param>
            <param name="emSize"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetAllFamilies">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetDefaultFontFamily">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.GetValue(System.Xml.XmlNode,System.String)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.BaseTheme.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.BaseTheme.Name">
            <summary>
            当前样式名称
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsButtonbak">
            <summary>
            按钮控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSControlBase">
            <summary>
            控件总接口
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSControlSkinBase">
            <summary>
            控件自定义样式接口。通过这个接口，第三方的控件能在呈现其控件（以及框架切换皮肤引起的控件样式刷新）前收到框架的皮肤枚举值，从而可以来接入第三方的控件。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlSkinBase.CustomTheme">
            <summary>
            该属性是指你自定义控件是否启用皮肤样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlSkinBase.HSTheme">
            <summary>
            该设置属性是框架会调用的皮肤枚举设置器(setter)。你可以在这里收到皮肤的枚举值，至此你可以根据枚举值判断当前是什么皮肤而切换你的控件。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.Enabled">
            <summary>
            控件是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.Handle">
            <summary>
            控件句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.Height">
            <summary>
            控件高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.IsHandleCreated">
            <summary>
            控件的句柄是否已创建
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSControlBase.Width">
            <summary>
            控件的宽度
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IAutoValidateRaiser">
            <summary>
            引发自动校验者
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IAutoValidateRaiser.Parent">
            <summary>
            父控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IAutoValidateRaiser.RegionalValidateContainer">
            <summary>
            目标校验容器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSSkipSupport">
            <summary>
            HS按键跳转支持，目前支持上下键，回车键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSSkipSupport.IsSkipByUp">
            <summary>
            是否通过上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSSkipSupport.IsSkipByDown">
            <summary>
            是否通过下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSSkipSupport.IsSkipByEnter">
            <summary>
            是否通过回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSSupportInitialize">
            <summary>
            该接口将在窗体或插件调用OnLoad后调用。
            增加该接口主要是为了弥补前期为使用<see cref="T:System.ComponentModel.ISupportInitialize"/>接口引起的不可弥补损失的影响，
            采用这种方式将对控件的运行时的初始化行为产生影响。而<see cref="T:System.ComponentModel.ISupportInitialize"/>接口支持设计时的查看
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsButtonbak.commandType">
            <summary>
            获取或设置按钮图片类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.GetImage(HSUCF.Controls.HSButton_CommandType)">
            <summary>
            获取图片
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.OnClick(System.EventArgs)">
            <summary>
            按钮单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.OnGotFocus(System.EventArgs)">
            <summary>
            得到焦点
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.FireAutoValidateEvent">
            <summary>
            代码引发按钮的自动校验事件，如果未启用自动校验【EnableAutoValidate=false】，则一直返回false；否则根据校验结果返回校验结果值。
            </summary>
            <returns>如果未启用自动校验【EnableAutoValidate=false】，则一直返回false；否则根据校验结果返回校验结果值。</returns>
        </member>
        <member name="M:HSUCF.Controls.hsButtonbak.HSUCF#Controls#IHSSupportInitialize#OnInitialized">
            <summary>
            窗体调用OnLoad或插件调用Onload后都能调用到这里
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.EnableAutoValidate">
            <summary>
            是否启用自动校验,默认不启用自动校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsButtonbak.AfterAutoValidate">
            <summary>
            自动校验后事件，返回校验结果是否通过
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsButtonbak.BeforeAutoValidate">
            <summary>
            自动校验前事件,可以在该事件中添加其他校验逻辑
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButtonbak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RegionalValidateContainerReferenceConverter">
            <summary>
            IRegionalValidateContainer引用转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak">
            <summary>
            按钮下拉窗体控件
            </summary>
            <summary>
            下拉按钮的分部类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSplitButtonbak.normalImage">
            <summary>
            不同状态下的Split的图片形态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSplitButtonbak.defaultSplitImages">
            <summary>
            存放Split图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.InitDefaultSplitImages(System.Boolean)">
            <summary>
            初始化Split图片
            </summary>
            <param name="refresh"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.IsInSplitImageRect">
            <summary>
            判断当前鼠标是否在Split图片范围内
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsSplitButtonbak.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.ShowHideStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.AddItem(System.String,System.EventHandler)">
            <summary>
            为下拉菜单增加选项
            </summary>
            <param name="text"></param>
            <param name="handler"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.AddItem(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="handler"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.AddItem(HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem)">
            <summary>
            为下拉菜单增加选项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.InsertItem(System.Int32,HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem)">
            <summary>
            插入下拉菜单选项
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.AddItems(HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem[])">
            <summary>
            为下拉菜单增加选项
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.RemoveItem(HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem)">
            <summary>
            删除下拉菜单选项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.RemoveItemAt(System.Int32)">
            <summary>
            删除下拉菜单选项
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetRadius">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBlockRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetOffsetBlockRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBackColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBorderColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBlockColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBlockBackPath">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBlockPath">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetBlockBorderPath">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.PaintSplit">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.NcCalcSize(System.Windows.Forms.Message@)">
            <summary>
            计算客户区域
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.IsLButtonDown">
            <summary>
            判断鼠标左键是否按下
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.GetCursorPos(System.Drawing.Point@)">
            <summary>
            获取当前光标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.ButtonStrip_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.ButtonStrip_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent,System.String)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <param name="name"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent)">
            <summary>
            
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.System#ComponentModel#IContainer#Remove(System.ComponentModel.IComponent)">
            <summary>
            
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.System#IDisposable#Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="E:HSUCF.Controls.hsSplitButtonbak.ItemClicked">
            <summary>
            下拉按钮单击事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.IsOpen">
            <summary>
            是否展开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.ButtonStrip">
            <summary>
            下拉按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.Items">
            <summary>
            下拉按钮列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.Count">
            <summary>
            下拉按钮集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.System#ComponentModel#IContainer#Components">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.#ctor(HSUCF.Controls.hsSplitButtonbak)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.#ctor(HSUCF.Controls.hsSplitButtonbak,System.ComponentModel.IContainer)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.InitStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.GetUpButtonRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.GetDownButtonRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.NcCalcSize(System.Windows.Forms.Message@)">
            <summary>
            计算客户区域
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.SetDisplayedItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.UpdateScrollButtonLocations">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.RefScrollButtonSetBounds(System.Windows.Forms.ToolStripItem,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.RefGetToolStripState(System.Int32)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.Padding">
            <summary>
            内部边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.MaximumSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.MinimumSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.ButtonItems">
            <summary>
            下拉按钮集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.MaxItemSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.ShowScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.ShowScrollButtons">
            <summary>
            显示滚动按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.ScrollButtonUp">
            <summary>
            显示滚动按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip.ScrollButtonDown">
            <summary>
            显示滚动按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem">
            <summary>
            下拉按钮项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.#ctor(System.String,System.EventHandler)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="handle"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.ForeColorDisable">
            <summary>
            禁用时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.ColorOutLine">
            <summary>
            鼠标划过时外线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.ColorInLine">
            <summary>
            鼠标划过时内线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItem.ColorFill">
            <summary>
            鼠标划过时填充颜色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer">
            <summary>
            扁平化工具项绘制类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.GetBlockColor(System.Boolean,HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.GetBlockPath(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.DrawScrollButtons(System.Drawing.Graphics,HSUCF.Controls.hsSplitButtonbak.hsSplitButtonStrip)">
            <summary>
            
            </summary>
            <param name="strip"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.FlatSplitButtonItemRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak.hsSplitButtonItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButtonbak.SplitButtonItemCollectionCodeDomSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.SplitButtonItemCollectionCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            
            </summary>
            <param name="manager"></param>
            <param name="codeObject"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButtonbak.SplitButtonItemCollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            
            </summary>
            <param name="manager"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripButton">
            <summary>
            按钮形式的工具项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripButton.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripButton.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripButton.commandType">
            <summary>
            获取或设置按钮图片类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripButton.GetImage(HSUCF.Controls.HSButton_CommandType)">
            <summary>
            获取图片
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripButton.HSUCF#Controls#IHSSupportInitialize#OnInitialized">
            <summary>
            窗体调用OnLoad或插件调用Onload后都能调用到这里
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.Handle">
            <summary>
            获取句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.IsHandleCreated">
            <summary>
            是否创建句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripButton.EnableAutoValidate">
            <summary>
            是否启用自动校验,默认不启用自动校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsToolStripButton.AfterAutoValidate">
            <summary>
            自动校验后事件，返回校验结果是否通过
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsToolStripButton.BeforeAutoValidate">
            <summary>
            自动校验前事件,可以在该事件中添加其他校验逻辑
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripDropDownButton">
            <summary>
            按钮和单击按钮显示下拉形式的工具项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripDropDownButton.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripDropDownButton.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripDropDownButton.commandType">
            <summary>
            获取或设置按钮图片类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripDropDownButton.GetImage(HSUCF.Controls.HSButton_CommandType)">
            <summary>
            获取图片
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripDropDownButton.HSUCF#Controls#IHSSupportInitialize#OnInitialized">
            <summary>
            窗体调用OnLoad或插件调用Onload后都能调用到这里
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.Handle">
            <summary>
            获取句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.IsHandleCreated">
            <summary>
            是否创建句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDownButton.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripMenuItem">
            <summary>
            下拉形式的工具项
            </summary>
            <summary>
            下拉形式的工具项的分部类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripMenuItem.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripMenuItem.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripMenuItem.commandType">
            <summary>
            获取或设置按钮图片类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripMenuItem.GetImage(HSUCF.Controls.HSButton_CommandType)">
            <summary>
            获取图片
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripMenuItem.HSUCF#Controls#IHSSupportInitialize#OnInitialized">
            <summary>
            窗体调用OnLoad或插件调用Onload后都能调用到这里
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripMenuItem.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.Handle">
            <summary>
            获取句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.IsHandleCreated">
            <summary>
            是否创建句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.EnableAutoValidate">
            <summary>
            是否启用自动校验,默认不启用自动校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsToolStripMenuItem.AfterAutoValidate">
            <summary>
            自动校验后事件，返回校验结果是否通过
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsToolStripMenuItem.BeforeAutoValidate">
            <summary>
            自动校验前事件,可以在该事件中添加其他校验逻辑
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripMenuItem.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripSplitButton">
            <summary>
            左侧按钮，右侧下拉按钮的组合形式的工具项
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripSplitButton.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripSplitButton.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripSplitButton.commandType">
            <summary>
            获取或设置按钮图片类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripSplitButton.GetImage(HSUCF.Controls.HSButton_CommandType)">
            <summary>
            获取图片
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripSplitButton.SetEnabledEvent(System.Boolean)">
            <summary>
            设置Enabled时的事件
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripSplitButton.SetEnabledStyle(System.Boolean)">
            <summary>
            设置Enabled是的样式
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:HSUCF.Controls.hsToolStripSplitButton.HSUCF#Controls#IHSSupportInitialize#OnInitialized">
            <summary>
            窗体调用OnLoad或插件调用Onload后都能调用到这里
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.Handle">
            <summary>
            获取句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.IsHandleCreated">
            <summary>
            是否创建句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripSplitButton.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AddInConfiguration">
            <summary>
            用于统一读取AddIn.Config配置文件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AddInConfiguration.xml">
            <summary>
            XML文档
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AddInConfiguration.Save">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AddInConfiguration.GetNode(System.Xml.XmlNode,System.String)">
            <summary>
            获取节点
            </summary>
            <param name="parent">父节点</param>
            <param name="name">名称</param>
            <returns>节点</returns>
        </member>
        <member name="M:HSUCF.Controls.AddInConfiguration.AppendNode(System.Xml.XmlNode,System.String)">
            <summary>
            添加一个节点到指定节点末尾  姜亮 20130912
            </summary>
            <param name="parent">父节点</param>
            <param name="name">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AddInConfiguration.AppendAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            添加一个属性到指定节点  姜亮 20130912
            </summary>
            <param name="parent">父节点</param>
            <param name="attrName">属性名称</param>
            <param name="attrValue">属性值</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AddInConfiguration.Remove(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="name">节点名称</param>
        </member>
        <member name="P:HSUCF.Controls.AddInConfiguration.Root">
            <summary>
            获取根节点
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsCollapseButton">
            <summary>
            扁平化折叠按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsButton">
            <summary>
            扁平化按钮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsButton.CNS_CLICKINTERVAL">
            <summary>
            单击间隔，单位毫秒
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsButton.CNS_DEFAULTBUTTON_BORDERDISTANCE">
            <summary>
            默认按钮的边框向内延伸距离
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionPaintTransparentBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            绘制透明背景
            </summary>
            <param name="e"></param>
            <param name="rect"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionRenderColorTransparent(System.Drawing.Color)">
            <summary>
            判断颜色是否为透明色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionIsImageTransparent(System.Drawing.Image)">
            <summary>
            判断图片是是否支持透明
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionPaintBackColor(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            绘制背景色
            </summary>
            <param name="e"></param>
            <param name="rectangle"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionDrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Color,System.Windows.Forms.ImageLayout,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.RightToLeft)">
            <summary>
            绘制背景图片
            </summary>
            <param name="g"></param>
            <param name="backgroundImage"></param>
            <param name="backColor"></param>
            <param name="backgroundImageLayout"></param>
            <param name="bounds"></param>
            <param name="clipRect"></param>
            <param name="scrollOffset"></param>
            <param name="rightToLeft"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ReflectionCreateTextFormatFlags(System.Windows.Forms.Control,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)">
            <summary>
            创建文本格式化标识，用户文本绘制
            </summary>
            <param name="ctl"></param>
            <param name="textAlign"></param>
            <param name="showEllipsis"></param>
            <param name="useMnemonic"></param>
        </member>
        <member name="F:HSUCF.Controls.hsButton.SuspendRenderCounter">
            <summary>
            是否挂起渲染
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsButton._lastClickTime">
            <summary>
            上一次单击时间
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsButton._validater">
            <summary>
            验证器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.SetValidateContainer(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置容器校验
            </summary>
            <param name="control"></param>
            <param name="validateContainer"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnCreateControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.UpdateRegion">
            <summary>
            更新有效区域
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.UpdateRegion(System.Drawing.Region)">
            <summary>
            更新有效区域
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.RegionInternal">
            <summary>
            控件有效区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制按钮背景
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.PaintBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="rectangle"></param>
            <param name="rad"></param>
            <param name="backColor"></param>
            <param name="backgroundImage"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.PaintBackgroundColor(System.Windows.Forms.PaintEventArgs,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            绘制背景颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawBorder(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Int32)">
            <summary>
            绘制边框
            </summary>
            <param name="pevent"></param>
            <param name="bound"></param>
            <param name="rad"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制按钮前景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawDefaultButtonBorder(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Int32)">
            <summary>
            绘制默认按钮边框
            </summary>
            <param name="pevent"></param>
            <param name="bound"></param>
            <param name="rad"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
            <summary>
            绘制文本
            </summary>
            <param name="g"></param>
            <param name="text"></param>
            <param name="font"></param>
            <param name="rect"></param>
            <param name="foreColor"></param>
            <param name="backColor"></param>
            <param name="align"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawCheckedImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Color,System.Windows.Forms.ImageLayout,System.Drawing.Image,System.Drawing.ContentAlignment,System.Drawing.Rectangle)">
            <summary>
            绘制Checked
            </summary>
            <param name="g">Graphics</param>
            <param name="backImage">背景图片</param>
            <param name="backColor">背景颜色</param>
            <param name="backImageLayout">背景图片布局方式</param>
            <param name="image">前景图片</param>
            <param name="imageAlign">前景图片对齐方式</param>
            <param name="clientRect">客户区域</param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            绘制图片
            </summary>
            <param name="g"></param>
            <param name="image"></param>
            <param name="backColor"></param>
            <param name="rect"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.ContentAlignment)">
            <summary>
            绘制图标
            </summary>
            <param name="g"></param>
            <param name="image"></param>
            <param name="r"></param>
            <param name="align"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CalcImageRenderBounds(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.ContentAlignment)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="r"></param>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.FillImage(System.Drawing.Image,System.Drawing.Image,System.Windows.Forms.ImageLayout)">
            <summary>
            将指向图像按指定的填充模式绘制到目标图像上
            </summary>
            <param name="sourceBmp">要控制填充模式的源图</param>
            <param name="targetBmp">要绘制到的目标图</param>
            <param name="layout">填充模式</param>
            <remarks></remarks>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CalcRenderBounds(System.Drawing.Size,System.Drawing.Rectangle,System.Drawing.ContentAlignment)">
            <summary>
            计算某一绘制块的位置
            </summary>
            <param name="size">块大小</param>
            <param name="rect">区域大小</param>
            <param name="align">对齐方式</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.PerformAutoUpdates(System.Boolean)">
            <summary>
            更新单选按钮
            </summary>
            <param name="tabbedInto"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ClientRectangleInternal">
            <summary>
            获取内部客户区域大小和位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.SystemClientRectangleInternal">
            <summary>
            获取客户区域大小和位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.RadiusInternal(System.Drawing.Rectangle)">
            <summary>
            获取实际的圆角半径
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.TextFormatInternal(System.String,System.Drawing.Font,System.Drawing.Size,System.Drawing.ContentAlignment)">
            <summary>
            获取文本格式化方式
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="size"></param>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.TextInternal">
            <summary>
            获取文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CalcAlignRectangle(System.Drawing.Rectangle,System.Windows.Forms.TextImageRelation,System.Drawing.ContentAlignment,System.Int32,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            计算图标和文本对齐后的位置
            当图标和文字对齐方式一样时，需要用此方法计算图标和文本的显示位置
            </summary>
            <param name="rect">客户区域</param>
            <param name="textImageRelation">文本和图标相对位置</param>
            <param name="align">文本和图标的对齐方式</param>
            <param name="textImageDistance">文本和图标的间距</param>
            <param name="imageRect">传入只显示图标时图标的大小和位置，返回新的大小和位置</param>
            <param name="textRect">传入只有文本时文本的大小和位置，返回新的大小和位置</param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.TextImageRelationInternal(System.Windows.Forms.TextImageRelation)">
            <summary>
            获取文本与图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.BackColorInternal">
            <summary>
            获取当前背景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ForeColorInternal">
            <summary>
            获取当前前景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.BackgroundImageInternal">
            <summary>
            获取当前背景图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ImageInternal">
            <summary>
            获取当前图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CheckedImageInternal">
            <summary>
            获取当前Checked图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CheckedBackgroundImageInternal">
            <summary>
            获取当前Checked背景图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OuterBorderColorInternal">
            <summary>
            获取当前外边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.InnerBorderColorInternal">
            <summary>
            获取当前内边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.PerformClickEx">
            <summary>
            强制触发校验，如果校验通过，则触发Click事件
            与PerformClick方法不同，PerformClick方法在控件不该触发Click时不触发Click事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.SuspendRender">
            <summary>
            挂起绘制
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ResumeRender(System.Boolean)">
            <summary>
            恢复正常绘制
            </summary>
            <param name="preformRender">若要强制执行渲染，则传入true</param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.RefreshButton">
            <summary>
            重绘控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsButton.FindFormInternal">
            <summary>
            查找按钮所在窗体
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.GetValidateFailText(System.Windows.Forms.Control)">
            <summary>
            获取校验不通过时显示的提示信息
            </summary>
            <param name="control">控件</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.GetValidateGroup(System.Windows.Forms.Control)">
            <summary>
            获取校验组名，与对应的按钮一致，当按钮按下时，如果本控件校验不通过，则不会引发Click事件
            </summary>
            <param name="control">控件</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.SetValidateFailText(System.Windows.Forms.Control,System.String)">
            <summary>
            设置校验不通过时显示的提示信息
            </summary>
            <param name="control">控件</param>
            <param name="validateFailText">校验不通过时显示的提示信息</param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.SetValidateGroup(System.Windows.Forms.Control,System.String)">
            <summary>
            设置校验组名，与对应的按钮一致，当按钮按下时，如果本控件校验不通过，则不会引发Click事件
            </summary>
            <param name="control">控件</param>
            <param name="validateGroup">校验组名，与对应的按钮一致</param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CancelClick">
            <summary>
            校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.GroupValidate">
            <summary>
            组校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ValidateReadOnly(System.Windows.Forms.Control)">
            <summary>
            校验是否是ReadOnly
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.ContainerValidate">
            <summary>
            容器校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnClick(System.EventArgs)">
            <summary>
            单击事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnDoubleClick(System.EventArgs)">
            <summary>
            双击事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标双击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsButton.CanExtend(System.Object)">
            <summary>
            
            </summary>
            <param name="extendee"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ShowToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.PaintTransparentBackground">
            <summary>
            PaintTransparentBackground方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.RenderColorTransparent">
            <summary>
            RenderColorTransparent方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.IsImageTransparent">
            <summary>
            IsImageTransparent方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.PaintBackColor">
            <summary>
            PaintBackColor方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.DrawBackgroundImage">
            <summary>
            DrawBackgroundImage方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.CreateTextFormatFlags">
            <summary>
            CreateTextFormatFlags方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ReflectionEventPaint">
            <summary>
            ReflectionEventPaint字段值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ReflectionWindow">
            <summary>
            ReflectionWindow字段值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.BackgroundImage">
            <summary>
            获取或设置在控件中显示的背景图像。
            </summary>
            <returns>
            一个 <see cref="T:System.Drawing.Image"/>，它表示在控件的背景中显示的图像。
            </returns>
            <filterpriority>1</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="P:HSUCF.Controls.hsButton.BackgroundImageLayout">
            <summary>
            获取或设置在 <see cref="T:System.Windows.Forms.ImageLayout"/> 枚举中定义的背景图像布局。
            </summary>
            <returns>
            <see cref="T:System.Windows.Forms.ImageLayout"/> 的值（<see cref="F:System.Windows.Forms.ImageLayout.Center"/>、<see cref="F:System.Windows.Forms.ImageLayout.None"/>、<see cref="F:System.Windows.Forms.ImageLayout.Stretch"/>、<see cref="F:System.Windows.Forms.ImageLayout.Tile"/> 或 <see cref="F:System.Windows.Forms.ImageLayout.Zoom"/>）之一。<see cref="F:System.Windows.Forms.ImageLayout.Tile"/> 为默认值。
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的枚举值不存在。</exception><filterpriority>1</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="P:HSUCF.Controls.hsButton.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.FlatStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ImageAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ImageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ImageKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.UseCompatibleTextRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ValidateMode">
            <summary>
            校验模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Appearance">
            <summary>
            外观样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ShowShortcut">
            <summary>
            是否在文字后显示快捷键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ShortcutKeys">
            <summary>
            获取或设置快捷键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.CanSelect">
            <summary>
            是否可以被选中
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Margin">
            <summary>
            外边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ButtonState">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.EnabledValidate">
            <summary>
            启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ValidateGroup">
            <summary>
            验证组
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.Validater">
            <summary>
            验证器
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ValidateControls">
            <summary>
            要验证的控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ShowMessageBox">
            <summary>
            是否将提示消息以弹出框方式显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ValidateContainer">
            <summary>
            验证组
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.ValidateContainerControl">
            <summary>
            要验证的控件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsButton.CheckedChanged">
            <summary>
            Checked属性发生变化触发的事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsButton.HSValidated">
            <summary>
            校验通过事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsButton.HSValidating">
            <summary>
            当控件启用校验后，点击按钮，在引发Click事件之前引发此事件，此事件的返回结果决定是否继续触发Click事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.IsSkipByDown">
            <summary>
            按下向下箭头跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsButton.IsSkipByUp">
            <summary>
            按下向上箭头跳转焦点到上一个按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.OnClick(System.EventArgs)">
            <summary>
            重写单击事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.CollapsedControl_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.SubscribeEvent">
            <summary>
            订阅事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.CancelEvent">
            <summary>
            取消订阅事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.UpdateLocation">
            <summary>
            更新位置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.CollapseExpandInternal(System.Boolean)">
            <summary>
            折叠/展开
            </summary>
            <param name="collapsed"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.UpdateText">
            <summary>
            更新显示文字
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCollapseButton.CollapseExpand">
            <summary>
            折叠/展开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.Collapsed">
            <summary>
            是否折叠
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.CollapsedAnchor">
            <summary>
            收缩锚点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.CollapsedDistance">
            <summary>
            折叠后高度/宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.CollapsedLocation">
            <summary>
            折叠后与描点边相对位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.CollapsedControl">
            <summary>
            折叠控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCollapseButton.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CollapsedAnchor">
            <summary>
            折叠锚点
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LabelButtonState">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.Normal">
            <summary>
            正常状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.Disable">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.MouseDown">
            <summary>
            左键单击状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.MouseHover">
            <summary>
            鼠标悬停状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.Checked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LabelButtonState.IsDefault">
            <summary>
            默认按钮状态
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CheckedMode">
            <summary>
            勾选模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CheckedMode.Single">
            <summary>
            单选
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CheckedMode.Multiple">
            <summary>
            多选
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidateMode.Default">
            <summary>
            校验组内显示且非只读且非禁用的控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidateMode.ReadOnly">
            <summary>
            校验组内显示且非禁用的控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidateMode.Disabled">
            <summary>
            校验组内显示且非只读的控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidateMode.ReadOnlyAndDisabled">
            <summary>
            校验组内显示的控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatButtonAppearance">
            <summary>
            描述FlatButton外观
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSAppearance`1">
            <summary>
            外观基类
            </summary>
            <typeparam name="TOwnerControl"></typeparam>
        </member>
        <member name="M:HSUCF.Controls.HSAppearance`1.#ctor(`0)">
            <summary>
            外观基类构造
            </summary>
            <param name="owner">外观所属控件</param>
        </member>
        <member name="M:HSUCF.Controls.HSAppearance`1.GetColorFromString(System.String)">
            <summary>
            通过字符串颜色值得到颜色结构
            </summary>
            <param name="colorString">字符串颜色值</param>
            <returns>颜色结构</returns>
        </member>
        <member name="P:HSUCF.Controls.HSAppearance`1.Owner">
            <summary>
            外观所属控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatButtonAppearance._propertyValues">
            <summary>
            属性值字典
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.#ctor(HSUCF.Controls.hsButton)">
            <summary>
            初始化一个外观
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.InitStyle">
            <summary>
            初始化外观样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.OnAppearanceChange">
            <summary>
            引发外观变化事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.SetPropertyValue``1(System.String,``0)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T">属性类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.GetPropertyValue``1(System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="T">属性类型</typeparam>
            <param name="propertyName">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:HSUCF.Controls.FlatButtonAppearance.RefreshOwner">
            <summary>
            重绘控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.IsDefaultVisionEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.IsDefaultBorderColor">
            <summary>
            当按钮处于默认按钮时边框颜色，与原有颜色叠加，向按钮内延伸一个像素
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.IsDefaultBorderWidth">
            <summary>
            当按钮处于默认按钮时边框颜色宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackColorDisable">
            <summary>
            禁用时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackColorMouseDown">
            <summary>
            鼠标按下时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackColorMouseHover">
            <summary>
            鼠标悬停时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ForeColorDisable">
            <summary>
            禁用时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ForeColorMouseDown">
            <summary>
            鼠标按下时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ForeColorMouseHover">
            <summary>
            鼠标悬停时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackgroundImage">
            <summary>
            背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackgroundImageDisable">
            <summary>
            控件禁用时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackgroundImageMouseDown">
            <summary>
            鼠标按下时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackgroundImageMouseHover">
            <summary>
            鼠标悬停时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BackgroundImageLayout">
            <summary>
            背景图标布局方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.Image">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ImageDisable">
            <summary>
            控件禁用时图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ImageMouseDown">
            <summary>
            鼠标按下时图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ImageMouseHover">
            <summary>
            鼠标悬停时图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ImageAlign">
            <summary>
            图标对齐方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImage">
            <summary>
            选中图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImageDisable">
            <summary>
            选中状态下，禁用时的图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImageMouseDown">
            <summary>
            选中状态下，鼠标点击时的图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImageMouseHover">
            <summary>
            选中状态下，鼠标悬停时的图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImageAlign">
            <summary>
            选中状态下，图标对齐的方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedEnabled">
            <summary>
            是否支持选中
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedMode">
            <summary>
            选中模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedGroup">
            <summary>
            所属组
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedImageOverBorder">
            <summary>
            选中状态下，图标是否覆盖边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackColor">
            <summary>
            选中状态下,背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackColorDisable">
            <summary>
            选中状态下,禁用时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackColorMouseDown">
            <summary>
            选中状态下,鼠标按下时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackColorMouseHover">
            <summary>
            选中状态下,鼠标悬停时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedForeColor">
            <summary>
            选中状态下,前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedForeColorDisable">
            <summary>
            选中状态下,禁用时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedForeColorMouseDown">
            <summary>
            选中状态下,鼠标按下时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedForeColorMouseHover">
            <summary>
            选中状态下,鼠标悬停时前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackgroundImage">
            <summary>
            选中状态下,选中图标背景
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackgroundImageDisable">
            <summary>
            选中状态下,控件禁用时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackgroundImageMouseDown">
            <summary>
            选中状态下,鼠标按下时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackgroundImageMouseHover">
            <summary>
            选中状态下,鼠标悬停时背景图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedBackgroundImageLayout">
            <summary>
            选中状态下,图标背景布局方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedOuterBorderColor">
            <summary>
            选中状态下外边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedOuterBorderColorDisable">
            <summary>
            选中状态下禁用状态下内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedOuterBorderColorMouseDown">
            <summary>
            选中状态下鼠标按下时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedOuterBorderColorMouseHover">
            <summary>
            选中状态下鼠标悬停时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedInnerBorderColor">
            <summary>
            选中状态下内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedInnerBorderColorDisable">
            <summary>
            选中状态下禁用状态下内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedInnerBorderColorMouseDown">
            <summary>
            选中状态下鼠标按下时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.CheckedInnerBorderColorMouseHover">
            <summary>
            选中状态下鼠标悬停时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.ClientRectangleIgnoreFillet">
            <summary>
            客户区域是否忽略圆角
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.OuterBorderColor">
            <summary>
            外边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.OuterBorderColorDisable">
            <summary>
            禁用状态下内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.OuterBorderColorMouseDown">
            <summary>
            鼠标按下时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.OuterBorderColorMouseHover">
            <summary>
            鼠标悬停时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.OuterBorderWidth">
            <summary>
            外边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderColor">
            <summary>
            内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderColorDisable">
            <summary>
            禁用状态下内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderColorMouseDown">
            <summary>
            鼠标按下时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderColorMouseHover">
            <summary>
            鼠标悬停时内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderEnabled">
            <summary>
            是否启用内边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.InnerBorderWidth">
            <summary>
            内边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.FilletStyle">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.Radius">
            <summary>
            圆角半径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.Padding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.Margin">
            <summary>
            外边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.TextImageRelation">
            <summary>
            当文本和图片对齐方式一致时，文本和图标的相对位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatButtonAppearance.TextImageDistance">
            <summary>
            当文本和图片对齐方式一致，且不共享绘制区域时，图标和文字间距
            </summary>
        </member>
        <member name="E:HSUCF.Controls.FlatButtonAppearance.AppearanceChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.InitStyle">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.InitRedSyle">
            <summary>
            加载红色样式按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.InitDarkGrayStyle">
            <summary>
            加载黑灰颜色按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.InitOrangeStyle">
            <summary>
            加载橘色样式按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatButton.InitLightGrey">
            <summary>
            加载浅灰样式按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatButton.Appearance">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RadioStyle">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RadioStyle.LeftRadio">
            <summary>
            左边圆角
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RadioStyle.LeftRightRadio">
            <summary>
            左右圆角
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RadioStyle.RightRadio">
            <summary>
            右边圆角
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RadioStyle.None">
            <summary>
            无圆角
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLockButton">
            <summary>
            锁定按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabel">
            <summary>
            标签控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabel.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabel.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重写OnPaint方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:HSUCF.Controls.hsLabel.BorderColor">
            <summary>
            获取或设置控件的边框色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabel.BorderStyle">
            <summary>
            获取或设置控件的边框样式。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLockButton._lastLockedControlEnabled">
            <summary>
            上一个锁定控件的启用状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLockButton._lastLockedControlReadOnly">
            <summary>
            上一个锁定控件的启用状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLockButton._isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.GetPreferredSize(System.Drawing.Size)">
            <summary>
            获取控件自动大小
            </summary>
            <param name="proposedSize"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.CreateHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.ReflectionReadReadOnly(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLockButton.ReflectionWriteReadOnly(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsLockButton.LockedProperty">
            <summary>
            锁定属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLockButton.LockState">
            <summary>
            是否锁定指定控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLockButton.LockedControl">
            <summary>
            要锁定的控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLockButton.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LockedProperty">
            <summary>
            锁定属性
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitButton">
            <summary>
            下拉按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.BlockPathGet(System.Drawing.Rectangle)">
            <summary>
            获取块绘制路径
            </summary>
            <param name="rect">容纳块的区域</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.ClientRectangleInternal">
            <summary>
            获取客户端大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.BlockRectangleInternal">
            <summary>
            获取块区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.BlockColorInternal">
            <summary>
            获取三角块颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.MouseInBlock">
            <summary>
            鼠标是否在块区域内
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.RefreshSplitItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.ShowSplitItems">
            <summary>
            显示下拉按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            菜单弹出事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnBlockMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标单击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标双击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnBlockMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标双击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnClick(System.EventArgs)">
            <summary>
            单击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnMouseEnter(System.EventArgs)">
            <summary>
            鼠标进入
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnMouseLeave(System.EventArgs)">
            <summary>
            鼠标离开
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.MouseEnterMenuStrip(System.Windows.Forms.Control)">
            <summary>
            判断鼠标是否处于下拉菜单中
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnBlockClick(System.EventArgs)">
            <summary>
            单击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnDoubleClick(System.EventArgs)">
            <summary>
            双击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.OnBlockDoubleClick(System.EventArgs)">
            <summary>
            双击块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.SelectedItemGet``1">
            <summary>
            获取选中类型
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.EnumItemsSet``1(``0[],``0[])">
            <summary>
            设置枚举类型的选项
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="excludes">排除项</param>
            <param name="includes">包含项</param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.EnumSelectedSet``1(``0)">
            <summary>
            设置选中的枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
        </member>
        <member name="M:HSUCF.Controls.hsSplitButton.EnumSelectedGet``1">
            <summary>
            获取选中的枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.BlockMouseClick">
            <summary>
            鼠标单击块事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.BlockMouseDoubleClick">
            <summary>
            鼠标双击块事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.BlockClick">
            <summary>
            单击块事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.SelectedIndexChanged">
            <summary>
            下拉选中项切换事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.BlockDoubleClick">
            <summary>
            双击块事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSplitButton.SplitItemClick">
            <summary>
            下拉项单击
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.hsContextMenuStrip">
            <summary>
            下拉框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.Appearance">
            <summary>
            外观样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.DropDownMode">
            <summary>
            下拉模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.DefaultSelect">
            <summary>
            默认选择第几个选项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.SelectedItem">
            <summary>
            选中项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.IsSkipAfterItemClick">
            <summary>
            是否在单击选项后跳转到下一个控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitButton.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.SplitButtonDropDownMode">
            <summary>
            下拉模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitButtonDropDownMode.Default">
            <summary>
            点击三角形后下拉
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitButtonDropDownMode.Click">
            <summary>
            点击按钮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitButtonDropDownMode.MouseEnter">
            <summary>
            鼠标进入
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IDisplayItem`1">
            <summary>
            显示项接口
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:HSUCF.Controls.IDisplayItem`1.DisplayText">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IDisplayItem`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DisplayItem`1">
            <summary>
            枚举项
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HSUCF.Controls.DisplayItem`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="eval"></param>
        </member>
        <member name="T:HSUCF.Controls.SplitItemEventArgs">
            <summary>
            下拉项事件参数
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitItemEventArgs.Item">
            <summary>
            下拉项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.SplitItemEventArgs.#ctor(System.Object)">
            <summary>
            初始化
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:HSUCF.Controls.FlatSplitButtonAppearance">
            <summary>
            下拉按钮外观样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSplitButtonAppearance.#ctor(HSUCF.Controls.hsSplitButton)">
            <summary>
            初始化
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSplitButtonAppearance.InitStyle">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.BlockColor">
            <summary>
            三角块颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.BlockColorDisable">
            <summary>
            禁用时三角块颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.BlockColorMouseDown">
            <summary>
            鼠标按下时三角块颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.BlockColorMouseHover">
            <summary>
            鼠标悬停时三角块颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.Padding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSplitButtonAppearance.BlockSize">
            <summary>
            三角块大小
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsCheckBox">
            <summary>
            复选框
            </summary>
            <summary>
            复选框的分部类
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSControlValidate">
            <summary>
            用于单一控件即时校验（主要包括是否可为空，最大长度，最小长度等属性校验以及自定义校验事件），将在Validating事件中引发
            该接口定义校验的方法，和返回的错误消息，并设置校验是否通过的标示。
            </summary>
            <remarks>
            显示错误提示的方式是对目标控件的输入区的下边框画一条波浪线和弹出气泡消息。
            其中显示波浪线通过IsPassed属性控制，各个控件获取该属性值来判断是否绘制波浪线，
            而提示错误消息在HSControlValidater统一处理
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.IHSControlValidate.DoValidate(System.String@)">
            <summary>
            HS控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.IHSControlValidate.DoValidated">
            <summary>
            HS控件及时校验的校验成功后动作
            </summary> 
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.IHSControlValidate.SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="P:HSUCF.Controls.IHSControlValidate.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSControlValidate.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSControlValidate.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSCyclicValidateSponsor">
            <summary>
            循环校验发起者
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSCyclicValidateSponsor.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSCyclicValidateSponsor.GotFocus">
            <summary>
            获取焦点事件，Control类默认已经实现
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSCyclicValidateSponsor.Validating">
            <summary>
            Control类默认校验事件，Control类默认已经实现
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSCyclicValidateParticipant">
            <summary>
            循环校验参与者
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSCyclicValidateParticipant.DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns>True 表示当前控件校验成功；否则当前控件校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.IHSCyclicValidateParticipant.DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.IHSCyclicValidateParticipant.SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="P:HSUCF.Controls.IHSCyclicValidateParticipant.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IHSCyclicValidateParticipant.IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSCyclicValidateParticipant.HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.IHSCyclicValidateParticipant.HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBox.hsCtrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsCheckBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBox._mouseEnter">
            <summary>
            鼠标光标是否在控件内
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.hsCheckBox_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            光标离开控件触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.hsCheckBox_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            光标进入空间触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.SetAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.GetTextLocation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.GetBackBrush">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.GetCurrentIcon">
            <summary>
            获取当前复选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBox.GetCurrentIconLocation">
            <summary>
            获取当前复选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.BackColor">
            <summary>
            CheckBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.DisabledForeColor">
            <summary>
            CheckBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.IsSkipByDown">
            <summary>
            按下向下箭头跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.IsSkipByUp">
            <summary>
            按下向上箭头跳转焦点到上一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.SelectedBackColor">
            <summary>
            选中时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.AutoSize">
            <summary>
            是否自动大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.FlatStyle">
            <summary>
            控件样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBox.PaintTransparentBackground">
            <summary>
            PaintTransparentBackground方法信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsCheckBoxBak">
            <summary>
            复选框
            </summary>
            <summary>
            复选框的分部类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxBak.hsCtrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxBak._mouseEnter">
            <summary>
            鼠标光标是否在控件内
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.hsCheckBox_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            光标离开控件触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.hsCheckBox_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            光标进入空间触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.SetAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.GetTextLocation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.GetBackBrush">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.GetCurrentIcon">
            <summary>
            获取当前复选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxBak.GetCurrentIconLocation">
            <summary>
            获取当前复选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.BackColor">
            <summary>
            CheckBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.DisabledForeColor">
            <summary>
            CheckBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.IsSkipByDown">
            <summary>
            按下向下箭头跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.IsSkipByUp">
            <summary>
            按下向上箭头跳转焦点到上一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.SelectedBackColor">
            <summary>
            选中时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.AutoSize">
            <summary>
            是否自动大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxBak.FlatStyle">
            <summary>
            控件样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsCheckBoxTextBox">
            <summary>
            复选框文本框组合控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.InputUserControl">
            <summary>
            输入性组合控件的基类，用于过滤不必要的属性，事件等
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSComposeControl">
            <summary>
            标示组合型控件接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSComposeControl.Focus">
            <summary>
            聚焦输入性控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.IHSComposeControl.SetToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置tooltip信息
            </summary>
            <param name="caption">标题</param>
            <param name="toolTip">toolTip控件</param>
        </member>
        <member name="P:HSUCF.Controls.IHSComposeControl.InputControls">
            <summary>
            得到内部输入性控件列表，一般都是一个，目前hsLabelRageDateTimePicker有两个
            </summary>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.ExecuteAutoUnLock(System.Object,System.String)">
            <summary>
            是否需要自动解锁功能
            </summary>
            <param name="obj">解锁的控件</param>
            <param name="property">被修改的目标属性名称</param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.SetModelValue(System.String,System.Boolean,System.Object)">
            <summary>
            修改对象的属性值
            </summary>
            <param name="fieldName">属性名称</param>
            <param name="value">属性值</param>
            <param name="obj">属性对象</param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.LayoutResume">
            <summary>
            布局恢复，在这里重新设置控件的大小等属性，以适应字体变化后，组合控件的布局能所见即所得
            </summary>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.OnLoad(System.EventArgs)">
            <summary>
            在控件加载后，设置控件的大小等属性，以适应字体变化后，组合控件的布局能所见即所得
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.OnFontChanged(System.EventArgs)">
            <summary>
            当Font属性变化后，设置所有子空间Font属性，并尝试重设控件高度
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.SetFontInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.OnSizeChanged(System.EventArgs)">
            <summary>
            适应直接设置Control的Size属性
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.GetAllControls(System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            索取控件上的所有控件，递归
            </summary>
            <param name="parent"></param>
            <param name="allCtls"></param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.HSUCF#Controls#IHSComposeControl#SetToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置tooltip信息
            </summary>
            <param name="caption">标题</param>
            <param name="toolTip">toolTip控件</param>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.HSUCF#Controls#IHSComposeControl#Focus">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.Focus">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.InputUserControl.DEFAULT_SIZE">
            <summary>
            默认大小，只是用于Size重置使用的。只用于设计时
            </summary>
        </member>
        <member name="M:HSUCF.Controls.InputUserControl.ResetSize">
            <summary>
            改方法只是VS在重置Size大小的时候调用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.DefaultSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.LayoutSuspended">
            <summary>
            是否处于挂起布局状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.ReSizeOnFontChanged">
            <summary>
            是否在Font变化时ReSize
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.HSUCF#Controls#IHSComposeControl#InputControls">
            <summary>
            
            </summary>
        </member>
        <member name="E:HSUCF.Controls.InputUserControl.KeyPress">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.InputUserControl.PreferredHeight">
            <summary>
            控件固定高度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxTextBox.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxTextBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.GetBytesLen(System.String)">
            <summary>
            得到字节数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.hsTextBox1_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标单击则默认勾选checkbox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.hsTextBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.hsTextBox1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckBoxTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckBoxTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.ValueChanged">
            <summary>
            当Value属性值更改后发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.CheckedChanged">
            <summary>
            当CheckBox的Checked属性值更改后发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxForeColor">
            <summary>
            CheckBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxBackColor">
            <summary>
            CheckBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxFont">
            <summary>
            CheckBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxText">
            <summary>
            CheckBox的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.TextBoxWidth">
            <summary>
            TextBox的宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.Value">
            <summary>
            TextBox的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.TextBoxUnit">
            <summary>
            TextBox的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.MinLength">
            <summary>
            最小字节长度
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.MaxLength">
            <summary>
            最大字节长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.RegularMode">
            <summary>
            文本数据正则校验模式，如校验文本为URL,Email,中国邮编，中国身份证等等
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CustomRegExp">
            <summary>
            获取或设置正则表达式，只当校验模式为Custom时。无须首位加入^$,系统会默认加入。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CustomErrorMessage">
            <summary>
            获取或设置正则校验错误时的提示信息，只当校验模式为Custom时
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxChecked">
            <summary>
            获取或设置一个值，该值指示CheckBox是否处于选中状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxCheckAlign">
            <summary>
            获取或设置 CheckBox 控件上的复选框的水平和垂直对齐方式。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.CheckBoxTextAlign">
            <summary>
            获取或设置CheckBox控件上的文本对齐方式
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckBoxTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckBoxTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyCheckedPopupContainerForm.CalcFormSize(System.Drawing.Size)">
            <summary>
            该计算宽度只支持宋体雅黑
            </summary>
            <param name="contentSize"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxUnity.Has(System.String[],System.String)">
            <summary>
            判断一个字符串数组是否完全包含一个字符串
            数据源不需要判断
            </summary>
            <param name="ss"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxUnity.HasPart(System.String,System.String[])">
            <summary>
            判断一个字符串是否部分包含指定字符串数组中的任意一个字符串
            </summary>
            <param name="ss"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxUnity.GetRegion(System.Int32,System.Windows.Forms.Control)">
            <summary>
            获取控件轮廊
            </summary>
            <param name="roundStyle"></param>
            <param name="radius">半径大小</param>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxUnity.DrawComboBoxButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ArrowDirection,System.Drawing.Brush)">
            <summary>
            绘制下拉框按钮
            </summary>
            <param name="g"></param>
            <param name="dropDownRect"></param>
            <param name="direction"></param>
            <param name="brush"></param>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxUnity.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:HSUCF.Controls.hsCheckComboBoxEdit">
            <summary> 下拉控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSControlSetEmtyMessage">
            <summary>
            为空时 给出的提示信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.HandleStrAlignment(System.String,System.Int32@)">
            <summary>
            设置字符串对齐
            </summary>
            <param name="str">字符串</param>
            <param name="width">原始宽度</param>
            <param name="bestFitWidth">最佳宽度</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.HandleDataSource(System.Data.DataTable@)">
            <summary>
            数据源处理
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.HandleColumns(System.Data.DataTable,System.String,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            处理显示列顺序
            </summary>
            <param name="dt"></param>
            <param name="columns"></param>
            <param name="columnNameList"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.Sort(System.Data.DataTable@)">
            <summary>
            排序
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.IsInteger(System.String)">
            <summary>
            判断是否是整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.CheckedInputValue(System.String)">
            <summary>
            自动选中输入的字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.GetSelectItems">
            <summary>
             获取所有选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.GetSelectItems``1">
            <summary>
            多选取值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.OnEditorKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            按下Enter键默认跳到下一个控件
             </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsCheckComboBoxEdit._isClear">
            <summary>
            当清空选中项时不需要重复进入OnItemCheck事件里面去
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.ClearCheckListControl">
            <summary>
            清空下拉框中的选中项
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.SelectAllItem(System.Windows.Forms.CheckState)">
            <summary>
            全选选中项
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.VerifyValue(System.String)">
            <summary>
            校验设置的值，设置value时不能设置数据源之外的值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.FindParentBackColor(System.Windows.Forms.Control)">
            <summary>
            递归查找父控件的背景色
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsCheckComboBoxEdit.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckComboBoxEdit.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.BestFitSize">
            <summary>
            最佳宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.CheckListControl">
            <summary>
            下拉复选框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.ButtonRec">
            <summary>
            按钮区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.ButtonStates">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.ErrorMessage">
            <summary>
            为空时的错误提示信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckComboBoxEdit.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyRepositoryItemCheckedComboBoxEdit.InitH3Style">
            <summary>
            加载H3样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoSearchMode.Default">
            <summary>
            默认为不过滤
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoSearchMode.AutoFilter">
            <summary>
            自动过滤
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComboBox">
            <summary>
            下拉控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.InitDataSource(System.Data.DataTable@)">
            <summary>
            加载数据源
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.hsComboxBox_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
            <summary>
            输入字符 过滤下拉框中的显示内容
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            按下esc键 关闭下拉框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.Buttons_CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            输入字符过滤功能
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            窗体消息处理函数 
            这里主要获取按钮单击按下消息 用于过滤输入字符过滤事件
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘边框  和 按钮样式
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsComboBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLookUpEdite">
            <summary>
            下拉控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.UpdateEditValueOnClose(DevExpress.XtraEditors.PopupCloseMode,System.Boolean,System.Object,System.Object)">
            <summary>
            下拉面板关闭后 Dev处理逻辑（此方法慎用）
            </summary>
            <param name="closeMode"></param>
            <param name="acceptValue"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.ProcessNewValueCore(System.Boolean,System.String)">
            <summary>
            文本框离开焦点后  根据文本框中的输入值进行处理（此方法慎用）
            </summary>
            <param name="partital"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.ProcessText(DevExpress.XtraEditors.Controls.KeyPressHelper,System.Boolean,System.Char,System.Boolean)">
            <summary>
            按下键盘键后，Dev处理逻辑方法（此方法慎用）
            </summary>
            <param name="helper"></param>
            <param name="canImmediatePopup"></param>
            <param name="pressedKey"></param>
            <param name="partialSearch"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.ShowColumns(System.Data.DataTable,System.String)">
            <summary>
            加载数据源
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.IsInteger(System.String)">
            <summary>
            判断是否是整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.GetSelectItem``1">
            <summary>
            单选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.GetSelectIndex">
            <summary>
            获取选中索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.IsPositiveNumber(System.String,System.Int32)">
            <summary>
            是否正整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.DataSourceBinding">
            <summary>
            绑定数据源
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.CompareString(System.String,System.String)">
            <summary>
            比较俩个字符串是否相等
            </summary>
            <param name="str1"></param>
            <param name="str2"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.RemoveEmptyRow(System.Data.DataTable)">
            <summary>
            移除所有空行
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            按下esc键 关闭下拉框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.Buttons_CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            避免按钮重复添加
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.KeyCodeToChar(System.Windows.Forms.Keys)">
            <summary>
            将输入的键值转化为字符串
            </summary>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.GetRowIndexBySearchText(System.String)">
            <summary>
            通过显示文本获取数据源中的索引
            </summary>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.GetObjectBySearchText(System.String)">
            <summary>
            通过显示文本获取数据源对象
            </summary>
            <param name="serchText"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.VerifyVale(System.String@)">
            <summary>
            判断设置的值是否在数据源当中
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.AddPinYinColumns(System.Data.DataTable@)">
            <summary>
            获取并添加拼音检索列
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘边框  和 按钮样式
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.CreateRepositoryItem">
            <summary>
            重写属性创建方法，为控件指定一个自定义的属性类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLookUpEdite.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEdite.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.SpliteStr">
            <summary>
            多列显示分隔符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.GetDataSoruceList">
            <summary>
            数据源列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.AllItems">
            <summary>
            获取下拉面板中所有的项，以字符串隔开
            该方法提供给性能测试组用
            </summary>
            <returns></returns>
        </member>
        <member name="E:HSUCF.Controls.hsLookUpEdite.ValueChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLookUpEdite.TextChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.ButtonRec">
            <summary>
            按钮区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.ButtonStates">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEdite.ErrorMessage">
            <summary>
            为空时的错误提示信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLookUpEditListDataAdapter">
            <summary>
            下拉列表数据适配器，用于管理下拉数据，包括过滤数据
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.CreateFilterExpression">
            <summary>
            重写创建过滤表达式的语句
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.OnFilterExpressionChanged">
            <summary>
            创建过滤条件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEditListDataAdapter.BestFitHeight">
            <summary>
            计算最佳高度
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter">
            <summary>
            控件属性类型，为控件提供功能描述，包括创建下拉列表数据适配器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter.#ctor(HSUCF.Controls.hsLookUpEdite)">
            <summary>
            创建过滤器
            </summary>
            <param name="edit"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter.InitH3Style">
            <summary>
            加载H3样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter.CreateDataAdapter">
            <summary>
            创建下拉列表数据适配器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter.GetDisplayValueByKeyValue(System.Object)">
            <summary>
            重写获取显示数据
            </summary>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsLookUpEditListDataAdapter.RepositoryItemFilter.GetPropertieStore">
            <summary>
            获取下拉面板缓存数据字典
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ButtonState">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyLookUpEditPopForm.ChangeScroll">
            <summary>
            修改滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyLookUpEditPopForm.CreatePainter">
            <summary>
            自定义创建画笔
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.MyLookUpEditPopForm.HighItemSelectedColor">
            <summary>
            选中行颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyBorder.GetObjectClientRectangle(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
             修改显示区
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MyPopupLookUpFormPainter.DrawRow(DevExpress.XtraEditors.Popup.PopupFormGraphicsInfoArgs,DevExpress.XtraEditors.Popup.LookUpRowInfo,DevExpress.XtraEditors.Popup.PopupLookUpEditFormViewInfo)">
            <summary>
            绘制选中行
            </summary>
            <param name="info"></param>
            <param name="row"></param>
            <param name="vi"></param>
        </member>
        <member name="M:HSUCF.Controls.MyPopupLookUpFormPainter.DrawSelectedCell(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,DevExpress.XtraEditors.Popup.PopupLookUpEditFormViewInfo)">
            <summary>
            绘制选中区域
            </summary>
            <param name="cache"></param>
            <param name="text"></param>
            <param name="bounds"></param>
            <param name="vi"></param>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxEx.RenderComboBoxDropDownButton(System.Windows.Forms.Message@,HSUCF.Controls.ControlState)">
            <summary>
            20130529
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxEx.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,HSUCF.Controls.RoundStyle,System.Int32,System.Drawing.Color)">
            <summary>
            去掉四角，Jiang
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="roundStyle"></param>
            <param name="radius"></param>
            <param name="borderColor"></param>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxEx.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.ComboBoxEx.ShowDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxEx.ComboBoxState">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ControlState">
            <summary>
            控件的状态。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlState.Normal">
            <summary>
             正常。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlState.Hover">
            <summary>
            鼠标进入。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlState.Pressed">
            <summary>
            鼠标按下。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlState.Focused">
            <summary>
            获得焦点。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GraphicsPathHelper.CreatePath(System.Drawing.RectangleF,System.Int32,HSUCF.Controls.RoundStyle,System.Boolean)">
            <summary>
            建立带有圆角样式的路径。
            </summary>
            <param name="rect">用来建立路径的矩形。</param>
            <param name="_radius">圆角的直径大小。</param>
            <param name="style">圆角的样式。</param>
            <param name="correction">是否把矩形长宽减 1,以便画出边框。</param>
            <returns>建立的路径。</returns>
        </member>
        <member name="T:HSUCF.Controls.RoundStyle">
            <summary>
            建立圆角路径的样式。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.None">
            <summary>
            四个角都不是圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.All">
            <summary>
            四个角都为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.Left">
            <summary>
            左边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.Right">
            <summary>
            右边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.Top">
            <summary>
            上边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.Bottom">
            <summary>
            下边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.BottomLeft">
            <summary>
            左下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RoundStyle.BottomRight">
            <summary>
            右下角为圆角。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComboBoxbak">
            <summary>
            下拉控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IComboBox">
            <summary>
            hs下拉框接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IComboBoxControlHost`1.SelectDefault">
            <summary>
            选中默认项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IComboBoxControlHost`1.CreatNew">
            <summary>
            创建一个空项
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.DefaultSelect">
            <summary>
            缺省选中第几项。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.InsertNullItem">
            <summary>
            单选下拉列表添加一个空选择项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.Excludes">
            <summary>
            排除项，以E文分号隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.Includes">
            <summary>
            包含项，以E文分号隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.DisplayTextJoinStr">
            <summary>
            连接符号（项与项之间的连接）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBoxControlHost`1.ComboBoxSelectionModel">
            <summary>
            设置单选、多选
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IComboBox.InitCustom(System.Windows.Forms.Control)">
            <summary>
            用户可以对下拉控件进行自定义处理
            </summary>
            <param name="ctrl">ListView 或者 TreeView控件</param>
        </member>
        <member name="M:HSUCF.Controls.IComboBox.GetValue``1">
            <summary>
            泛型取值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.IComboBox.Filter(System.String,System.Boolean)">
            <summary>
            过滤显示
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:HSUCF.Controls.IComboBox.Compare(System.Data.DataRow,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            多选筛选接口
            </summary>
            <param name="dr">要过滤的当前数据行</param>
            <param name="keys">用户输入</param>
            <param name="match">用户输入的匹配结果,如果没有就是空</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.ComboBoxWidth">
            <summary>
            设置ComboBox的宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.ComboBoxBackColor">
            <summary>
            获取或设置ComboBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.ComboBoxForeColor">
            <summary>
            获取或设置ComboBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.DisabledComboBoxBackColor">
            <summary>
            选择框不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.DisabledComboBoxForeColor">
            <summary>
            选择框不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IComboBox.ItemsSplitChar">
            <summary>
            当单独使用Items作为数据源时，各数据项之间的分隔符号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_LBUTTONDOWN">
            <summary>
            按键消息号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_LBUTTONDBLCLK">
            <summary>
            按键消息号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_RBUTTONDOWN">
            <summary>
            按键消息号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_RBUTTONDBLCLK">
            <summary>
            按键消息号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_CONTEXTMENU">
            <summary>
            按键消息号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.WM_PAINT">
            <summary>
            表示绘制窗口的消息编码
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            键盘OnKeyPress事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_TextUpdate(System.Object,System.EventArgs)">
            <summary>
            文本更新事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            文本改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            KeyDown 事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_GotFocus(System.Object,System.EventArgs)">
            <summary>
            下拉控件得到焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            下拉控件失去焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.hsComboBox_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标单击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.OnSizeChanged(System.EventArgs)">
            <summary>
            强制重绘
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.CloseDropDown">
            <summary>
            关闭下拉
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ShowDropDown(System.Boolean)">
            <summary>
            展开下拉控件
            </summary>
            <param name="isDoCustomStyle"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ForceRefreshDropDownSizeOnMultiple">
            <summary>
            缩放的时候会在打开下拉框的时候强制下拉框的大小重新计算
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetSingleUpText(System.Data.DataRow)">
            <summary>
            设置上一个文本
            </summary>
            <param name="current">当前项数据</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetSingleDownText(System.Data.DataRow)">
            <summary>
            设置下一个文本
            </summary>
            <param name="current">当前项数据</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SingleSelectByText(System.String,System.Boolean)">
            <summary>
            单选
            根据当前文本选中,打开下拉的时候才有效
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理控件的消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            过滤消息
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Process(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Filter(System.String,System.Boolean)">
            <summary>
            输入过滤
            校验完成的必须有符号结尾
            单选：按所有可见字段和拼音列匹配
            </summary>
            <param name="key"></param>
            <param name="isCheck">检查最后一项</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.FilterMultiple(System.String,System.Boolean)">
            <summary>
            多选：按可见的第一列匹配
            </summary>
            <param name="key"></param>
            <param name="isCheck">false：正在输入   true:完全提交输入检测</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.AddTableId(System.Data.DataTable)">
            <summary>
            添加ID列
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitTableId(System.Data.DataTable)">
            <summary>
            给dt添加ID列数据
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetTableId(System.Data.DataRow)">
            <summary>
            获取指定行的ID
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.CheckMultipleOnKey(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            检查多选的输入是否正确
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.FindParent">
            <summary>
            寻找父控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ForceDoneByText(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            强制更新
            </summary>
            <param name="isShowDropDown"></param>
            <param name="isFilter"></param>
            <param name="defaultSort"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DoneByText(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据现有文本处理单多选控件
            OK
            </summary>
            <param name="isShowDropDown"></param>
            <param name="isFilter">是否需要过滤</param>
            <param name="defaultSort">是否重新生成值  true:重新生成</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DoneByText(System.Boolean,System.Boolean)">
            <summary>
            根据文本选中
            </summary>
            <param name="isFilter">是否过滤</param>
            <param name="defaultSort">是否重新排序</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SendEnter">
            <summary>
            回车提交
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ToIntArray(System.String[])">
            <summary>
            字符串数组转换整形数组
            </summary>
            <param name="Content">字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.AddAllItemValue(HSUCF.Controls.DataSourceType,System.Object,System.Boolean)">
            <summary>
            给数据源添加全选项  姜亮
            </summary>
            <param name="dsType">数据源类型</param>
            <param name="ds">数据源</param>
            <param name="addPyin">是否添加全选</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.CreatNew">
            <summary>
            创建一个空项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SelectDefault">
            <summary>
            选中默认项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitDataOnLoad">
            <summary>
            用于对数据源和样式进行处理
            对listView重新进行初始化
            如果是第一次加载或者数据源有变化，请调用这个方法
            HSDisplayingValue事件必须要在给DataSource赋值前绑定
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DoCustomStyle">
            <summary>
            执行用户自定义样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitData(System.Boolean)">
            <summary>
            用于对数据源和样式进行处理
            对listView重新进行初始化
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.isForceRefreshDropDownSizeOnMultiple">
            <summary>
            是否强制刷新控件的下拉框大小
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Scale">
            <summary>
            提供多选缩放调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitCustomStyle(System.Object,System.Windows.Forms.ListViewItem)">
            <summary>
            提供用户重写自定义样式方法
            </summary>
            <param name="data"></param>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitCustom(System.Windows.Forms.Control)">
            <summary>
            用户可以对下拉控件进行自定义处理
            </summary>
            <param name="ctrl">ListView 或者 TreeView控件</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitKeyName(System.Data.DataTable)">
            <summary>
            根据指定数据源初始化主键
            </summary>
            <param name="dt">原值：DataSourceEx</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetPinYinColumnName(System.String)">
            <summary>
            得到拼音列名称
            </summary>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetCursorEnd">
            <summary>
            定位到输入末尾
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetCursorAll">
            <summary>
            全选
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ClearDataSource">
            <summary>
            清空数据源
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.IsValidKey(System.Char)">
            <summary>
            判断是否有效输入 
            姜亮  20130506
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.IsDigitOrLetter(System.Char)">
            <summary>
            是否输入数字或者字母
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Compare(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            比较两个集合是否相等
            </summary>
            <param name="list1"></param>
            <param name="listCompare"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.StringEqual(System.String,System.String)">
            <summary>
            比较两个字符串是否相等
            </summary>
            <param name="string1"></param>
            <param name="string2"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Has(System.String[],System.String)">
            <summary>
            判断一个字符串数组是否完全包含一个字符串
            </summary>
            <param name="ss"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.StringContains(System.String,System.String)">
            <summary>
            判断string1是否包含string2
            </summary>
            <param name="string1"></param>
            <param name="string2"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.StringStartsWith(System.String,System.String)">
            <summary>
            判断string1是否以string2开头
            </summary>
            <param name="string1"></param>
            <param name="string2"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HasPart(System.String,System.String[])">
            <summary>
            判断一个字符串是否部分包含指定字符串数组中的任意一个字符串
            </summary>
            <param name="ss"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.IsInteger(System.String)">
            <summary>
            判断是否是整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.IsPositiveNumber(System.String,System.Int32)">
            <summary>
            是否正整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.InitControlHost(HSUCF.Controls.hsComboBoxControlHost,HSUCF.Controls.hsComboBoxControlHost)">
            <summary>
            切换容器控件
            </summary>
            <param name="oldCH"></param>
            <param name="newCH"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.ToList``1(System.Data.DataRow)">
            <summary>
            DataRow转泛型对象
            </summary>
            <param name="dr">数据行</param>
            <returns>泛型对象</returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetInfo(System.Object,System.String)">
            <summary>
            获取对象的属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetRowIndex(System.Data.DataRow)">
            <summary>
            返回当前行的索引
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetOriginalDataSourceItem(System.Data.DataRow)">
            <summary>
            获取原始数据
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DisplayingText(System.Data.DataRow)">
            <summary>
            显示数据源某行的自定义文本
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DisplayText(System.Object)">
            <summary>
            要显示的文本（显示到控件文本）
            data as DataRow
            多选一个和单选是一样的
            其实只针对选一个起作用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.DisplayValue(System.Int32)">
            <summary>
            获取选中项的值(入数据库的数据)
            多选：边输入边匹配，如果=1选择就以4空格连接显示完整可见列 ，如：1    中信证券    XXXX
                  如果>1选择就只显示第一列 ，如:1,2,3
            单选情况  同多选“=1选择”
            
            
            如何匹配
            单选：按所有可见字段匹配
            多选：按可见的第一列匹配
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.CreateHandle">
            <summary>
            创建句柄
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.initCustomStyleDele">
            <summary>
            自定义样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.displayTextDele">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.displayValueDele">
            <summary>
            显示值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.compareDele">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetDisplayTextDele(HSUCF.Controls.DisplayTextDele)">
            <summary>
            设置显示文本的委托
            </summary>
            <param name="_displayTextDele"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetDisplayValueDele(HSUCF.Controls.DisplayValueDele)">
            <summary>
            设置显示值的委托
            </summary>
            <param name="_displayValueDele"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetCompareDele(HSUCF.Controls.CompareDele)">
            <summary>
            设置显示比较的委托
            </summary>
            <param name="_compareDele"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Compare(System.Data.DataRow,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            多选筛选接口  开发人员要实现
            
            </summary>
            <param name="dr">要过滤的当前数据行</param>
            <param name="keys">用户输入</param>
            <param name="match">用户输入的匹配结果,如果没有就是空</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Contains(System.Data.DataRow,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            完全匹配选中
            </summary>
            <param name="row">列表要比较的数据</param>
            <param name="keys">用户输入数据，每项都已经去过空格</param>
            <param name="match">返回匹配的数据</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetValue``1(System.Collections.Generic.List{``0})">
            <summary>
            泛型赋值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetValue``1(System.String)">
            <summary>
            泛型取值(全选记录行全部返回-1值)
            取指定字段值
            </summary>
            <typeparam name="T">字段值返回的数据类型</typeparam>
            <param name="fieldName">字段或者属性名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetValueToString(System.String)">
            <summary>
            泛型取值
            取指定字段值,并且使用连接符连接
            </summary>
            <param name="fieldName">字段或者属性名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItems">
            <summary>
            多选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItems``1">
            <summary>
            多选取值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItem">
            <summary>
            单选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItem``1">
            <summary>
            单选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItemIndexs">
            <summary>
            返回选中项索引(返回值始终是数据源中的索引顺序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetSelectItemIndex">
            <summary>
            返回选中项索引
            -1代表没有选中项(返回值始终是数据源中的索引顺序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetValueToString(System.String,System.String)">
            <summary>
            赋值指定字段值
            </summary>
            <param name="fieldName">字段或者属性名（该字段值必须非空唯一）</param>
            <param name="fieldValues">使用连接符连接的字段值(严格区分大小写)</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetValueToString(System.Int32)">
            <summary>
            泛型取值
            取指定字段值,并且使用连接符连接
            </summary>
            <param name="fieldIndex">字段或者属性索引</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetValue``1(System.Int32)">
            <summary>
            泛型取值(全选记录行全部返回-1值)
            取指定字段值
            </summary>
            <typeparam name="T">字段值返回的数据类型</typeparam>
            <param name="fieldIndex">字段或者属性索引</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetValue``1">
            <summary>
            泛型取值  
            取默认主键字段值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.ctrlValidator">
            <summary>
            校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.ValidatedSuccessValue">
            <summary>
            校验成功后保存值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.SetControlTheme">
            <summary>
            设置样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.useDataBinding">
            <summary>
            是否使用数据绑定
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.flagDataBinding">
            <summary>
            绑定标记:是否正在处理
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.VisibleColumnType">
            <summary>
            可见列类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.PinYinColumnType">
            <summary>
            拼音列类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.usePinYin">
            <summary>
            是否使用拼音过滤  （目前只支持单选）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.lastKeyTime">
            <summary>
            最后一次输入字符的时间
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.keyInterval">
            <summary>
            两次有效输入的时间间隔
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.lastKey">
            <summary>
            最后一次输入的字符
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.AllowZoom">
            <summary>
            是否允许缩放
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.exactVerify">
            <summary>
            是否精确校验
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.EnableSelectedStyle">
            <summary>
            是否允许提交选中项样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.itemsCollection">
            <summary>
            直接编辑静态数据源列表
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxbak.EnableLostFocusValidate">
            <summary>
            默认是启用丢焦校验
            丢焦不校验目前只针对单选
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxbak.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.BeforeShowDropDown">
            <summary>
            下拉框展开前事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.ValueChanged">
            <summary>
            文本改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.hsComboBoxValidating">
            <summary>
            给内部校验使用的
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSMouseClickFocus">
            <summary>
            鼠标单击获得焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.LostFocus">
            <summary>
            在控件丢失焦点时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSGotFocus">
            <summary>
            获得焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSInitCustomStyle">
            <summary>
            用户自定义每个列表项的样式
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSDisplayingText">
            <summary>
            用户自定义显示到Text中的文本(必须在给DataSource赋值前绑定)
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSDisplayingValue">
            <summary>
            用户自定义每个选中项的取值(必须在给DataSource赋值前绑定)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Text">
            <summary>
            下拉编辑区域文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ValueEx">
            <summary>
            对内部公开取值、赋值
            会进行初始化操作,代码赋值通过这里,(单选要禁止数据源过滤)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ValueMatch">
            <summary>
            取值、赋值
            会进行初始化操作,代码赋值通过这里
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Value">
            <summary>
            取值、赋值
            会进行初始化操作,代码赋值通过这里
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxbak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxBackColor">
            <summary>
            ComboBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxForeColor">
            <summary>
            ComboBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DisabledComboBoxBackColor">
            <summary>
            选择框不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DisabledComboBoxForeColor">
            <summary>
            选择框不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Width">
            <summary>
            控件宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DropDownHeight">
            <summary>
            设置下拉高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxSelectionModel">
            <summary>
            设置单选、多选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxDropDown">
            <summary>
            设置下拉模式：1.可以输入可以选  2.不能输入只能选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ItemCount">
            <summary>
            设置下拉可见项数目
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.NoWrite">
            <summary>
            是否不能输入
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxSelectionStyle">
            <summary>
            显示方式
            列表方式、树形方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.AllowEmpty">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DefaultSelect">
            <summary>
            缺省选中第几项。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.InsertNullItem">
            <summary>
            针对单选是否添加一个空选择项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.AllItemVisible">
            <summary>
            给下拉添加一个全选项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.AllItemCaption">
            <summary>
            给下拉添加一个全选项时，显示列的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.AllItemValue">
            <summary>
            给下拉添加一个全选项时，显示列的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Excludes">
            <summary>
            排除项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Includes">
            <summary>
            包含项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DisplayTextJoinStr">
            <summary>
            指多选模式下选择多个值的连接符号 ,只能是“分号”或者“逗号”
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DisplayValueJoinStr">
            <summary>
            取值时候的连接符号
            Includes 、Excludes 、取值时使用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Lv_ColumnStyles">
            <summary>
            列的样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.IsSingleAutoCommit">
            <summary>
            使用单选的时候
            如果false:那么丢失焦点时不自动提交
            如果true:那么丢失焦点时自动提交输入
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.IsSupportDropDownListEnter">
            <summary>
            是否支持DropDownList模式下的键盘匹配
            目前只支持单选模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.EqualType">
            <summary>
            下拉框的匹配方式
            Strict:严格匹配 ，区分大小写，必须完全一样
            Ignore:不严格匹配，忽略大小写匹配
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Lv_Items">
            <summary>
            获取或设置ListView的Items
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.Tv_Nodes">
            <summary>
            获取或设置TreeView的Nodes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DataSourceEx">
            <summary>
            原生数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DataItemType">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DataSource">
            <summary>
            数据源
            如果是第一次加载或者数据源有变化，请调用这个方法
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ItemsSplitChar">
            <summary>
            当单独使用Items作为数据源时，各数据项之间的分隔符号
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.PinYinColumnNames">
            <summary>
            保存要进行过滤的拼音列字段名
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.PinYinColumnIndexs">
            <summary>
            下拉列表指定对可见列中的某一列进行按拼音过滤
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.VisibleColumnIndexs">
            <summary>
            下拉列表要包含显示的数据项索引列表，以','分隔
            比如"0,1"代表只显示数据源中的第0列和第1列，其它列则隐藏
            比如"Id,Name"代表只显示数据源中的指定列，其它列则隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ShowColumnNames">
            <summary>
            保存可见列字段名
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.DisplayTextJoinStrUseSingle">
            <summary>
            只选中一个值的时候，各项之间的连接符号
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.GetAllItemIndex">
            <summary>
            得到全选项的索引
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.BottomBorderUseWaveLine">
            <summary>
            底边框使用波浪线，该属性目前有HS校验器设置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ShowBottom">
            <summary>
            是否显示下拉框底部区域，多选时可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ShowTop">
            <summary>
            是否显示下拉框顶部区域，多选时可用。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxbak.ComboBoxFocusArgs.Validated">
            <summary>
            校验是否通过
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComboBoxbak.Util">
            <summary>
            工具类
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxValueChangedEventArgs.Text">
            <summary>
            改变以后的文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxVisibleColumnType">
            <summary>
            可见列区分类型：索引、属性
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDomainUpDown">
            <summary>
            显示字符串的UpDown控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDomainUpDown.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.nullableContextMenuStrip">
            <summary>
            上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.nullableContextMenu">
            <summary>
            旧时上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.oldContextMenuStrip">
            <summary>
            用于记录已经绑定的上下文菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDomainUpDown.oldContextMenu">
            <summary>
            用于记录已经绑定的旧时上下文菜单
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDomainUpDown.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.BackColor">
            <summary>
            DomainUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.ForeColor">
            <summary>
            DomainUpDown的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.DisabledBackColor">
            <summary>
            DomainUpDown不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.DisabledForeColor">
            <summary>
            DomainUpDown不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsNumericUpDown">
            <summary>
            数值类型文本编辑控件
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.IHSNumericConverter">
            <summary>
            数值转换器接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToInt16">
            <summary>
            将某一种数值类型转换成Int16，如decimal转成Int16
            </summary>
            <returns>Int16数值</returns> 
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToInt32">
            <summary>
            将某一种数值类型转换成Int32，如decimal转成Int32
            </summary>
            <returns>Int32数值</returns> 
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToInt64">
            <summary>
            将某一种数值类型转换成Int64，如decimal转成Int64
            </summary>
            <returns>Int64数值</returns> 
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToFloat">
            <summary>
            将某一种数值类型转换成float，如decimal转成float
            </summary>
            <returns>float数值</returns> 
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToDouble">
            <summary>
            将某一种数值类型转换成double，如decimal转成double
            </summary>
            <returns>double数值</returns> 
        </member>
        <member name="M:HSUCF.Controls.IHSNumericConverter.ToString">
            <summary>
            将某一种数值类型转换成字符串值，如decimal转成string
            </summary>
            <returns>字符串值</returns> 
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.maxAllow">
            <summary>
            是否允许到达最大值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.minAllow">
            <summary>
            是否允许到达最小值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.POINT_CHAR">
            <summary>
            小数点符号，不可修改，从系统环境中获取
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.NEGATIVE_CHAR">
            <summary>
            负号，不可修改，从系统环境中获取
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericUpDown.THOUSANDS_CHAR">
            <summary>
            千位符，默认是，
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.GetValidatedText(System.String,System.Boolean@)">
            <summary>
            得到校验的文本
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            键处理
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            编辑的文本控件的按钮按着
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.GetDefaultIncrement">
            <summary>
            得到默认的增量，非用户设置的增量属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.IsSpecialDOS">
            <summary>
            判断是否为特殊的操作系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.GetPixelColor(System.Int32,System.Int32)">
            <summary>
            获取上下按钮内部指定位置的颜色
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.OnPaintUpDownButton(HSUCF.Controls.UpDownButtonPaintEventArgs,System.Boolean)">
            <summary>
            绘制上下按钮
            </summary>
            <param name="e"></param>
            <param name="bPaint">是否强制绘制</param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericUpDown.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.ErrorMessage">
            <summary>
            为空时的错误提示信息
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.BackColor">
            <summary>
            NumericUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.ForeColor">
            <summary>
            NumericUpDown的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.DisabledBackColor">
            <summary>
            NumericUpDown不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.DisabledForeColor">
            <summary>
            NumericUpDown不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.DecimalPlaces">
            <summary>
            设置或获取小数位数,默认0位，最多15位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.IsEmpty">
            <summary>
            指示输入框内是否为空
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.EnableEmpty">
            <summary>
            输入框是否允许空值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.Mode">
            <summary>
            NumericUpDown控件工作模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.LeftRightKey">
            <summary>
            按下左右键相当于按了上下按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.AllowEmpty">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.ValueChanged">
            <summary>
            当Value 属性更改后发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericUpDown.BeforeValueChange">
            <summary>
            当Value 属性被设置前发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericUpDown.UpDownButton">
            <summary>
            获取UpDownButton
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericUpDownMode">
            <summary>
            NumericUpDown控件工作模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericUpDownMode.Normal">
            <summary>
            普通模式控件 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericUpDownMode.Entrustment">
            <summary>
            委托数量,价格控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ValueChangeEventArgs">
            <summary>
            值改变事件参数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ValueChangeEventArgs.OldValue">
            <summary>
            更改前的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ValueChangeEventArgs.NewValue">
            <summary>
            更改后的值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DataTableUtility">
            <summary>
            DataTable工具类。
            可以实现同数据结构数据表的合并； 
            实体数组转DataTable；
            枚举类型转换为DataTable；
            DataTable转实体数组；
            根据列名的列表创建一个表格结构等等。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DataTableUtility.ENUM_TABLE_COLUMN_KEY">
            <summary>
            枚举表格的列名(内码值）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DataTableUtility.ENUM_TABLE_COLUMN_VALUE">
            <summary>
            枚举表格的列名(文本值）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DataTableUtility.typeTableStructures">
            <summary>
            类型，表结构容器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.Merge(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            连接两个具有相同数据结构的DataTable,返回DataTable；
            如果table1为空，则返回table2；
            如果table2为空，则返回table1；
            如果都为空，则返回空。
            </summary>
            <param name="table1">表1</param>
            <param name="table2">表2</param>
            <returns>返回表</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.ToDataTable(System.Collections.IList)">
            <summary>
            姜亮  下拉使用
            实体数组转DataTable;   
            如果实体集合为空或者数据为空或者第一个元素为空则返回空
            </summary>  
            <param name="entities">同一种类型的对象</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.ToDataTable(System.Type)">
            <summary>
            枚举类型转换为DataTable
            </summary>
            <param name="enumType">类型</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.ToList``1(System.Data.DataTable)">
            <summary>
            DataTable转实体数组
            </summary>
            <param name="dt">数据表</param>
            <returns>泛类列表</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.CreateStructure(System.Collections.Generic.List{System.String})">
            <summary>
            根据列名的列表创建一个表格结构
            </summary>
            <param name="columnNames">包含列名的列表</param>
            <returns>返回DataTable结构,列类型都是字符串</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.CreateStructure(System.String)">
            <summary>
            通过字符列表创建表结构，字段格式可以是：
            1) a,b,c,d,e
            2) a|int,b|string,c|bool,d|decimal
            </summary>
            <param name="nameString">表名</param>
            <returns>返回DataTable结构</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.Sort(System.Data.DataTable,System.String[])">
            <summary>
            排序表的默认视图
            </summary>
            <param name="dt">数据表</param>
            <param name="sorts">排序字段</param>
            <returns>排序后的表</returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.ConvertType(System.String)">
            <summary>
            根据字符串类型简称得到系统类型
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.Filter(System.Data.DataTable)">
            <summary>
            去掉空格列
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:HSUCF.Controls.DataTableUtility.ToList``1(System.Data.DataRow)">
            <summary>
            DataRow转泛型对象
            </summary>
            <param name="dr">数据行</param>
            <returns>泛型对象</returns>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxSelectionStyle">
            <summary>
            显示方式
            列表方式、树形方式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxSelectionModel">
            <summary>
            单选、多选
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxDropDown">
            <summary>
            可以输入、只能选
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComboBoxControlHost">
            <summary>
            提供给下拉控件使用的容器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.ShowDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SelectDefault">
            <summary>
            选中默认项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.CreatNew">
            <summary>
            创建一个空项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.ProcessData">
            <summary>
            加工数据（包含、排除）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.InitData(System.Boolean)">
            <summary>
            用于处理数据加载，或者对默认加载的数据进行加工。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxControlHost.displayTextJoinStr">
            <summary>
            连接符号（项与项之间的连接）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxControlHost._DisplayValueJoinStr">
            <summary>
            取值时候的连接符号（必须是单字符）
            Includes 、Excludes 、取值时使用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SetValue(System.String,System.Boolean)">
            <summary>
            赋值
            </summary>
            <param name="value"></param>
            <param name="defaultSort"></param>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxControlHost.displayTextDele">
            <summary>
            要显示的文本
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxControlHost.displayValueDele">
            <summary>
            获取选中项的值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxControlHost.compareDele">
            <summary>
            多选筛选接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SetWidth(System.Int32)">
            <summary>
            设置宽度
            </summary>
            <param name="_Width"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SetHeight(System.Int32)">
            <summary>
            设置宽度
            </summary>
            <param name="_Width"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.Select(System.Collections.Generic.List{System.String},System.Collections.Generic.List{HSUCF.Controls.hsComboBoxListViewSortItem}@,System.Boolean)">
            <summary>
            选中指定项列表
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SingleSelectByText(System.String,System.Boolean,System.Boolean)">
            <summary>
            单选
            根据当前文本选中
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.GetSingleSelectIndexByText(System.String)">
            <summary>
            单选
            根据当前文本获取选中索引
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.GetSelectItemIndexs">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.GetSelectItems">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.FocusedItem">
            <summary>
            聚焦当前项显示(针对多选起作用)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.FocusedItem(System.Int32)">
            <summary>
            聚焦当前项显示(单多选都起作用)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.ClearFocusedItem">
            <summary>
            清空选中项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SelectMultiple(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            将多选的选中
            </summary>
            <param name="indexs"></param>
            <param name="selected"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxControlHost.SelectSingleCurrent">
            <summary>
            提交当前有焦点的项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ComboBoxSelectionModel">
            <summary>
            设置单选、多选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ComboBoxDropDown">
            <summary>
            设置可以输入、只能选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.Lv_ColumnStyles">
            <summary>
            列的样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ColumnsWidth">
            <summary>
            下拉列表要包含显示的数据项宽度列表，以','分隔
            比如"0,100"代表数据源中的第0列是自适应宽度，第1列是固定100宽度，其它列没设置就默认自适应
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ShowColumnNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.Tv_Nodes">
            <summary>
            获取或设置TreeView的Nodes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.Lv_Items">
            <summary>
            获取或设置ListView的Items
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.AllowEmpty">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.DefaultSelect">
            <summary>
            缺省选中第几项。"-1"代表不需要选中
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ShowCheckBoxes">
            <summary>
            是否显示CheckBoxes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.DataSourceEx">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ReadOnly">
            <summary>
            是否只读
            ComboBox中已经处理，这里不需要处理
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.InsertNullItem">
            <summary>
            单选下拉列表添加一个空选择项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.AllItemVisible">
            <summary>
            给下拉添加一个全选项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.AllItemCaption">
            <summary>
            给下拉添加一个全选项时，显示列的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.AllItemValue">
            <summary>
            给下拉添加一个全选项时，显示列的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.Excludes">
            <summary>
            排除项，以E文逗号隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.Includes">
            <summary>
            包含项，以E文逗号隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxControlHost.ValueEx">
            <summary>
            取值、赋值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownControlHost.Select(System.Boolean)">
            <summary>
            点击全选、全不选
            </summary>
            <param name="all">true: 全选  false:全不选</param>
        </member>
        <member name="E:HSUCF.Controls.hsComboBoxDropDownControlHost.Closing">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxSelectingArgs.SelectState">
            <summary>
            true: 全选  false:全不选
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownControl.IsSelectAll(System.Object,HSUCF.Controls.hsComboBoxSelectingArgs)">
            <summary>
            全选和非全选通知事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxDropDownControl.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownControl.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownControl.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownBottom.IsSelectAll(System.Object,HSUCF.Controls.hsComboBoxSelectingArgs)">
            <summary>
            全选和非全选通知事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxDropDownBottom.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownBottom.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownBottom.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxDropDownTop.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownTop.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxDropDownTop.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.Init(HSUCF.Controls.hsComboBoxbak)">
            <summary>
            在构造函数之后调用
            </summary>
            <param name="combobox"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.DrawListView(HSUCF.Controls.hsComposeComboBoxListView,System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem)">
            <summary>
            绘制选中项
            </summary>
            <param name="lv"></param>
            <param name="_OldItem">原先项</param>
            <param name="_Item">当前项</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.DrawListView(System.Windows.Forms.ListViewItem)">
            <summary>
            绘制选中项的背景色
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.listView_GotFocus(System.Object,System.EventArgs)">
            <summary>
            这里需要性能优化  姜亮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsComboBoxListView.lastFocused">
            <summary>
            当前焦点项索引
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.InitDropDown">
            <summary>
            初始化控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.ShowDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectDefault">
            <summary>
            选中默认项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.CreatNew">
            <summary>
            创建一个空项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.DataChanged">
            <summary>
            双击选中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.DataChanged(System.Collections.Generic.List{System.Int32})">
            <summary>
            单选可以全部处理完
            强制使用
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.ProcessData">
            <summary>
            加工数据（包含、排除）
            设置LV列和样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.InitData(System.Boolean)">
            <summary>
            调用该方法将重新初始化控件
            用于处理数据加载，或者对默认加载的数据进行加工。
            可以先设置样式，再调用这个方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SetValue(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="defaultSort">是否重新生成值  true:重新生成</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.Select(System.Collections.Generic.List{System.String},System.Collections.Generic.List{HSUCF.Controls.hsComboBoxListViewSortItem}@,System.Boolean)">
            <summary>
            选中指定项列表
            </summary>
            <param name="keys"></param>
            <param name="list"></param>
            <param name="isCheck">false：正在输入   true:完全提交输入检测</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.GetSingleSelectIndexByText(System.String)">
            <summary>
            单选
            根据当前文本获取选中索引
            这个时候应该是完全匹配处理
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SingleSelectByText(System.String,System.Boolean,System.Boolean)">
            <summary>
            单选
            根据当前文本选中         //打开下拉的时候才有效
            以空格分开，可见列有一个满足条件就选中提交
            </summary>
            <param name="text"></param>
            <param name="defaultSort">是否重新生成值  true:重新生成</param>
            <param name="isSelected">true:获焦、选中   false:不选中</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.FocusedItem">
            <summary>
            聚焦当前项显示(针对多选起作用)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.FocusedItem(System.Int32)">
            <summary>
            聚焦当前项显示(单多选都起作用)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.ClearFocusedItem">
            <summary>
            清空选中项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectSingle(System.Int32,System.Boolean)">
            <summary>
            针对单选，选中某项
            </summary>
            <param name="index">如果用先前选项就是-1</param>
            <param name="select">是否要选中</param>
            <param name="isSelected">true:获焦、选中   false:不选中</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectMultiple(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            将多选的选中
            </summary>
            <param name="indexs"></param>
            <param name="selected"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectSingleCurrent">
            <summary>
            提交当前有焦点的项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SetSingleUpText">
            <summary>
            只修改文本
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SetSingleDownText">
            <summary>
            只修改文本
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectMultipleUp">
            <summary>
            选中多选的上一项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectMultipleDown">
            <summary>
            选中多选的下一项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.ChangeCurrentCheckedState">
            <summary>
            切换当前状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.GetSelectItemIndexs">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.GetSelectItems">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxListView.SelectAll">
            <summary>
            全部选中
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.ComboBoxSelectionModel">
            <summary>
            设置单选、多选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.Lv_Items">
            <summary>
            获取或设置ListView的Items
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.Tv_Nodes">
            <summary>
            获取或设置TreeView的Nodes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.ShowCheckBoxes">
            <summary>
            是否显示CheckBoxes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.DataSourceEx">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxListView.ValueEx">
            <summary>
            取值、赋值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ContainsType">
            <summary>
            完全包含、部分包含,不包含
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComboBoxListViewSortItem">
            <summary>
            用于对列表项进行排序
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsComposeComboBoxListView">
            <summary>
            下拉控件专用
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsListView">
            <summary>
            列表框控件
            </summary>
            <summary>
            列表视图控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListView.GetCurrBorderColor">
            <summary>
            获取当前边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsListView.GetCurrBackColor">
            <summary>
            获取当前背景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsListView._flatPainter_ScrollBarCustomSlided(System.Object,HSUCF.Controls.ScrollBarSlidedEventArgs)">
            <summary>
            控件自定义处理滚动条滑动
            列表视图控件的滚动条比较特殊，在滑块滚动时，WM_VSCROLL和WM_HSCROLL消息不会引发内容滚动，需要使用LVM_SCROLL消息使之滚动
            MSDN上可以查询LVM_SCROLL的定义
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsListView.LVM_HITTEST(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsListView.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:HSUCF.Controls.hsListView.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListView.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsListView.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsListView.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsListView.Scrollable">
            <summary>
            是否显示滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListView.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListView.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListView.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListView.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComposeComboBoxListView.SB_VERT">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComposeComboBoxListView._MaxWidth">
            <summary>
            不能超过该宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComposeComboBoxListView._MaxHeight">
            <summary>
            不能超过该宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsComposeComboBoxListView._MinHeight">
            <summary>
            最小高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComposeComboBoxListView.GetSelectItems">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComposeComboBoxListView.GetSelectItemIndexs">
            <summary>
            返回选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsComposeComboBoxListView.Select(System.Int32,System.Boolean)">
            <summary>
            选中某项
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HSUCF.Controls.hsComposeComboBoxListView.GetSumHeight">
            <summary>
            计算总高度
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsComposeComboBoxListView.VerticalScroll">
            <summary>
            是否有纵向滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsComposeComboBoxListView.HorizontalScroll">
            <summary>
            是否有横向滚动条
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelComboBoxbax">
            <summary>
            带标签的下拉控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.hsLabelComboBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            姜亮  20130301
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.SelectDefault">
            <summary>
            选中默认项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.InitCustom(System.Windows.Forms.Control)">
            <summary>
            用户可以对下拉控件进行自定义处理
            </summary>
            <param name="ctrl">ListView 或者 TreeView控件</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.CreatNew">
            <summary>
            创建一个空项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.InitData(System.Boolean)">
            <summary>
            用于处理数据加载，或者对默认加载的数据进行加工。
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Scale">
            <summary>
            提供多选缩放调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.InitDataOnLoad">
            <summary>
            用于处理数据加载，或者对默认加载的数据进行加工。
            如果是第一次加载或者数据源有变化，请调用这个方法
            </summary>
            <param name="selectDefault">是否选择默认项</param>
            <param name="isProcessData"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.DisplayText(System.Object)">
            <summary>
            要显示的文本（显示到控件文本）
            data as DataRow
            多选一个和单选是一样的
            
            
            其实只针对选一个起作用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.DisplayValue(System.Int32)">
            <summary>
            获取选中项的值(入数据库的数据)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Compare(System.Data.DataRow,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            多选筛选接口  开发人员要实现
            
            </summary>
            <param name="dr">要过滤的当前数据行</param>
            <param name="keys">用户输入</param>
            <param name="match">用户输入的匹配结果,如果没有就是空</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Contains(System.Data.DataRow,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            完全匹配选中
            </summary>
            <param name="row">列表要比较的数据</param>
            <param name="keys">用户输入数据，每项都已经去过空格</param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.SetValue``1(System.Collections.Generic.List{``0})">
            <summary>
            泛型赋值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetValue``1(System.String)">
            <summary>
            泛型取值
            取指定字段值
            </summary>
            <typeparam name="T">字段值返回的数据类型</typeparam>
            <param name="fieldName">字段或者属性名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetValueToString(System.String)">
            <summary>
            泛型取值
            取指定字段值,并且使用连接符连接
            </summary>
            <param name="fieldName">字段或者属性名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.SetValueToString(System.String,System.String)">
            <summary>
            赋值指定字段值
            </summary>
            <param name="fieldName">字段或者属性名（该字段值必须非空唯一）</param>
            <param name="fieldValues">使用连接符连接的字段值(严格区分大小写)</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetValueToString(System.Int32)">
            <summary>
            泛型取值
            取指定字段值,并且使用连接符连接
            </summary>
            <param name="fieldIndex">字段或者属性索引</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetValue``1(System.Int32)">
            <summary>
            泛型取值
            取指定字段值
            </summary>
            <typeparam name="T">字段值返回的数据类型</typeparam>
            <param name="fieldIndex">字段或者属性索引</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetValue``1">
            <summary>
            泛型取值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItemIndexs">
            <summary>
            返回选中项索引(返回值始终是数据源中的索引顺序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItemIndex">
            <summary>
            返回选中项索引
            -1代表没有选中项(返回值始终是数据源中的索引顺序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItem">
            <summary>
            单选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItem``1">
            <summary>
            单选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItems">
            <summary>
            多选取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.GetSelectItems``1">
            <summary>
            多选取值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Filter(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.hsCtrlValidator">
            <summary>
            单一控件即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.ClearDataSource">
            <summary>
            清空数据源
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBoxbax.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBoxbax.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.BackColor">
            <summary>
            背景颜色
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxBackColor">
            <summary>
            ComboBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxForeColor">
            <summary>
            ComboBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DisabledComboBoxBackColor">
            <summary>
            选择框不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DisabledComboBoxForeColor">
            <summary>
            选择框不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxFont">
            <summary>
            ComboBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.EnableSelectedStyle">
            <summary>
            是否允许提交选中项样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Connectors">
            <summary>
            Label和ComboBox的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxSelectionModel">
            <summary>
            设置单选、多选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxDropDown">
            <summary>
            设置下拉模式：1.可以输入可以选  2.不能输入只能选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxbak">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DefaultSelect">
            <summary>
            缺省选中第几项。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.InsertNullItem">
            <summary>
            针对单选是否添加一个空选择项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.AllItemVisible">
            <summary>
            给下拉添加一个全选项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.AllItemCaption">
            <summary>
            给下拉添加一个全选项时，显示列的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.AllItemValue">
            <summary>
            给下拉添加一个全选项时，显示列的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Excludes">
            <summary>
            排除项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Includes">
            <summary>
            包含项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Tv_Nodes">
            <summary>
            获取或设置TreeView的Nodes
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Lv_Items">
            <summary>
            获取或设置ListView的Items
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ItemCount">
            <summary>
            设置下拉可见项数目
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DataSourceEx">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DataSource">
            <summary>
            数据源
            如果是第一次加载或者数据源有变化，请调用这个方法
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Value">
            <summary>
            取值、赋值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DisplayTextJoinStrUseSingle">
            <summary>
            只选中一个值的时候，各项之间的连接符号
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DisplayValueJoinStr">
            <summary>
            取值时候的连接符号
            Includes 、Excludes 、取值时使用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.DisplayTextJoinStr">
            <summary>
            指多选模式下选择多个值的连接符号 ,只能是“分号”或者“逗号”
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ComboBoxSelectionStyle">
            <summary>
            显示方式
            列表方式、树形方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Lv_ColumnStyles">
            <summary>
            列的样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.IsSupportDropDownListEnter">
            <summary>
            是否支持DropDownList模式下的键盘匹配
            目前只支持单选模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.EnableLostFocusValidate">
            <summary>
            默认是启用丢焦校验
            丢焦不校验目前只针对单选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ItemsSplitChar">
            <summary>
            当单独使用Items作为数据源时，各数据项之间的分隔符号
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.PinYinColumnIndexs">
            <summary>
            下拉列表指定对可见列中的某一列进行按拼音过滤
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.VisibleColumnIndexs">
            <summary>
            下拉列表要包含显示的数据项索引列表，以','分隔
            比如"0,1"代表只显示数据源中的第0列和第1列，其它列则隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.Text">
            <summary>
            数据源显示索引集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.PreferredHeight">
            <summary>
            20130916  姜亮  新加
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.BeforeShowDropDown">
            <summary>
            下拉框展开前事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.ValueChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSInitCustomStyle">
            <summary>
            用户自定义每个列表项的样式
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSDisplayingText">
            <summary>
            用户自定义显示到Text中的文本(必须在给DataSource赋值前绑定)
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBoxbax.HSDisplayingValue">
            <summary>
            用户自定义每个选中项的取值(必须在给DataSource赋值前绑定)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ShowBottom">
            <summary>
            是否显示下拉框底部区域，多选时可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBoxbax.ShowTop">
            <summary>
            是否显示下拉框顶部区域，多选时可用。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ListViewColumnStyle">
            <summary>
            ListView 列样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ListViewColumnStyle.Text">
            <summary>
            列标题
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ListViewColumnStyle.Width">
            <summary>
            列宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ListViewColumnStyle.Auto">
            <summary>
            是否自适应
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DisplayValueDele">
            <summary>
            获取选中项的值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.ControlSplitStringConverter">
            <summary>
            字符选择器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PinYinUtility">
            <summary>
            中文拼音工具类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PinYinUtility.PinyinValues">
            <SUMMARY>
            包含字符 ASC 码的整形数组。
            </SUMMARY>
        </member>
        <member name="F:HSUCF.Controls.PinYinUtility.PinyinNames">
            <SUMMARY>
            包含汉字拼音的字符串数组。
            </SUMMARY>
        </member>
        <member name="M:HSUCF.Controls.PinYinUtility.CHSToPinyin(System.String,System.String,System.Boolean)">
            <summary>
            将指定中文字符串转换为拼音形式
            </summary>
            <param name="chs">要转换的中文字符串</param>
            <param name="separator">连接拼音之间的分隔符</param>
            <param name="initialCap">指定是否将首字母大写</param>
            <returns>包含中文字符串的拼音的字符串</returns>
        </member>
        <member name="M:HSUCF.Controls.PinYinUtility.TryGetFirstPY(System.Char,System.Char@)">
            <summary>
            提取首字母。其他字符原样返回。
            </summary>
            <param name="oneChar">单个汉字</param>
            <returns>返回首字母</returns>
        </member>
        <member name="M:HSUCF.Controls.PinYinUtility.GetFirstPY(System.String,System.Boolean)">
            <summary>
            指定返回大写  姜亮
            提取首字母。兼容中英文。英文字符原样输出。可以启用时仅输出中文拼音首字母
            </summary>
            <param name="str">多个汉字或多个字母</param>
            <param name="onlyContainZh">是否仅包含中文拼音首字母，即是否对其他字符是否原样保留输出；如我是 man,如果为True,则输出WS；否则输出WS man</param>
            <returns>返回首字母</returns>
        </member>
        <member name="P:HSUCF.Controls.PinYinUtility.CHSPhraseSpecial">
            <summary>
            设置或获取包含例外词组读音的键/值对的组合
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnChooserForm">
            <summary>
            DataGridView网格控件列选择器，提供网格控件的列选择
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnChooserForm.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ColumnChooserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnChooserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnChooserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnChooserForm.ColumnStructure">
            <summary>
            列结构
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ColumnChooserForm.ColumnStructure.Name">
            <summary>
            列名
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridViewCheckBoxColumn">
            <summary>
            DataGridView列头复选框类型列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DataGridViewCheckBoxHeaderCell">
            <summary>
            DataGridView复选框标题单元格
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewCheckBoxHeaderCell.SetCheckState(System.Boolean)">
            <summary>
            设置选中状态
            </summary>
            <param name="isCheck">是否选中</param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewCheckBoxHeaderCell.RaiseSelectAllCellsOnClicked(System.Boolean)">
            <summary>
            引发全选单元格
            </summary>
            <param name="state"></param>
        </member>
        <member name="F:HSUCF.Controls.DataGridViewNumericCell.defaultEditType">
            <summary>
            编辑控件类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DataGridViewNumericCell.defaultValueType">
            <summary>
            单元格Value的类型   
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericColumn.Maximum">
            <summary>
            获取或设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericColumn.Minimum">
            <summary>
            获取或设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericColumn.DecimalPlaces">
            <summary>
            设置或获取小数位数,默认0位，最多15位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericColumn.ThousandsSeparator">
            <summary>
            是否显示千位符
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsNumericEditor">
            <summary>
            数值输入控件
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.TextBoxEx">
            <summary>
            文本框的分部类
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxEx.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.Format_Specifier_N">
            <summary>
            格式说明符"N"
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.Format_Specifier_F">
            <summary>
            格式说明符"F"
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToInt16">
            <summary>
            将数值类型转换成Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToInt32">
            <summary>
            将数值类型转换成Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToInt64">
            <summary>
            将数值类型转换成Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToFloat">
            <summary>
            将数值类型转换成float
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ToString">
            <summary>
            将数值类型转换成字符串形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.isBackSpace">
            <summary>
            目前是否回退键处理
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.formatString">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.cultureInfo">
            <summary>
            区域信息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.decimalPlaces">
            <summary>
            默认小数位数
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.isLessThanZero">
            <summary>
            值是否小于0(正负数标志位)
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.maximum">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.minimum">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.innerValue">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.valueString">
            <summary>
            当前数值文本
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.maxAllow">
            <summary>
            是否允许达到最大值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNumericEditor.minAllow">
            <summary>
            是否允许达到最小值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            键按下
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            键按着
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            键弹起
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CtrlC">
            <summary>
            拷贝
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CtrlV">
            <summary>
            黏贴
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.HomeKey">
            <summary>
            HOME键
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.EndKey">
            <summary>
            END键
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.Backspace">
            <summary>
            处理backspace键
            </summary>
            <remarks>
            光标处理逻辑如下：
            1. 未选中文本,光标回退一个位
            2. 未选中文本,而且光标位置字符不是数字而且不是小数分隔符,光标再回退一个位
            删除字符处理逻辑：
            请看<see cref="M:HSUCF.Controls.hsNumericEditor.Delete"/>方法
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.Delete">
            <summary>
            处理Delete键
            </summary>
            <remarks>
            如果光标在最后一位则不删除字符，否则继续流程，请看
            <see cref="M:HSUCF.Controls.hsNumericEditor.Delete(System.Boolean)"/>方法
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.Delete(System.Boolean)">
            <summary>
            处理Delete键
            </summary>
            <param name="deleteWithoutSelection">否无选择文本情况下删除,如按Back键的时候就是无选择的删除字符</param>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CanInsertDigitText(System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检测是否能插入数值文本
            </summary>
            <param name="oldValueString"></param>
            <param name="oldText"></param>
            <param name="oldIsAllSelect"></param>
            <param name="oldIsPartSelect"></param>
            <param name="oldSelectionStart"></param>
            <param name="oldPointIndex"></param>
            <param name="oldIsLessThanZero"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CanInsertIntPartText(System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检测在整数部分是否能插入数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CanInsertDecPartText(System.Int32)">
            <summary>
            检测在小数部分是否能插入数值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.Insert(System.String)">
            <summary>
            插入文本
            </summary>
            <param name="insertion"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.InsertDigit(System.String,System.Int32,System.Boolean,System.Decimal)">
            <summary>
            插入数值
            </summary>
            <param name="digit">数值</param>
            <param name="position">插入位置</param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.SetPosition(System.Int32)">
            <summary>
            设置文本光标位置
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.CheckValidateAndSetValue">
            <summary>
            检查校验并设置值（满足MaxAllow,minAllow,Maximum,Minimum)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ParseValue">
            <summary>
            valueString是否可以转换为decimal值，可以则设置格式化的文本值（this.Text）
            </summary>
            <returns>返回转换格式化是否成功</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.RemoveRange(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            删除范围内的字符
            </summary>
            <param name="indexInValue">光标在数值部分的索引位置（数值部分只包含数值和小数点）</param>
            <param name="selectionLenInValue">数值部分被选中的长度（数值部分只包含数值和小数点）</param>
            <param name="valueStr">数值部分文本</param>
            <param name="separatorChar">小数点</param>
            <param name="updateText">是否更新文本，即是否对this.Text赋值</param>
            <returns>返回删除的字符个数</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.SetFormattedText">
            <summary>
            通过formatString设置格式化文本值
            </summary>
            <returns>格式化是否成功</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.GetValidatedValueAndText(System.String,System.Boolean@)">
            <summary>
            得到校验的文本和值
            </summary>
            <param name="txt">文本</param>
            <param name="passValidated">是否通过校验</param>
            <returns>得到校验通过的文本</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.ValidatedValueIsPassed(System.String)">
            <summary>
            检查值是否通过校验
            </summary>
            <param name="txt">文本</param> 
            <returns>检查值是否通过校验</returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.InputBase_TextChanged(System.Object,System.EventArgs)">
            <summary>
            内部文本变化事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.GetDefaultIncrement(System.Decimal)">
            <summary>
            得到默认的增量，非用户设置的增量属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsNumericEditor.OnValueChanged(System.Decimal,System.Decimal)">
            <summary>
            触发值已改变事件
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.PropertyChanged">
            <summary>
            属性值改变时发生
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.CausesValidation">
            <summary>
            不然用户对这个值CausesValidation进行设置，它影响Validating事件，将间接
            影响HSValidating事件,所以保证该值是true
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.BackColor">
            <summary>
            NumericEditor的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.ForeColor">
            <summary>
            NumericEditor的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.DisabledBackColor">
            <summary>
            NumericEditor不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.DisabledForeColor">
            <summary>
            NumericEditor不可使用时的字体颜色。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsNumericEditor.ValueChanged">
            <summary>
            当值已经改变时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.TextAlign">
            <summary>
            输入字符对齐方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.ThousandsSeparator">
            <summary>
            是否显示千位符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.IsLessThanZero">
            <summary>
            值是否小于0(正负数标志位)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.FormatString">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.CultureInfo">
            <summary>
            设置或获取区域信息
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.DecimalPlaces">
            <summary>
            设置或获取小数位数,默认0位，最多15位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.MaxAllow">
            <summary>
            是否允许到达最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.Maximum">
            <summary>
            获取或设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.MinAllow">
            <summary>
            是否允许到达最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.Minimum">
            <summary>
            获取或设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.DecimalSeparator">
            <summary>
            分隔字符（小数点）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.ValueString">
            <summary>
            数值文本[数字和小数点]
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.HasDecimalSeparator">
            <summary>
            是否有小数点分隔符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNumericEditor.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewNumericEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewNumericEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewNumericEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="selectAll"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewNumericEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewNumericEditingControl.translateAlignment(System.Windows.Forms.DataGridViewContentAlignment)">
            <summary>
            设置对齐方式
            </summary>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewNumericEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DateTimeComparisonOperator">
            <summary>
            日期时间类型比较方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.EQUAL">
            <summary>
            等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.NOT_EQUAL">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.LESS_THAN">
            <summary>
            小于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.LESS_THAN_OR_EQUAL">
            <summary>
            小于等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.GREATER_THAN">
            <summary>
            大于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.GREATER_THAN_OR_EQUAL">
            <summary>
            大于等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.NULL">
            <summary>
            空的
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.DateTimeComparisonOperator.NOT_NULL">
            <summary>
            非空
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.FilterDisplayMode">
            <summary>
            过滤器的显示模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterDisplayMode.Default">
            <summary>
            默认过滤器的显示模式（包含基本和高级）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterDisplayMode.Basic">
            <summary>
            显示过滤器的基本过滤界面
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterDisplayMode.Advanced">
            <summary>
            显示过滤器的高级过滤界面
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FilterOperator">
            <summary>
            过滤器的操作枚举
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterOperator.AND">
            <summary>
            与
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterOperator.OR">
            <summary>
            或
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericComparisonOperator">
            <summary>
            数值类型比较方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.EQUAL">
            <summary>
            等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.NOT_EQUAL">
            <summary>
            不等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.LESS_THAN">
            <summary>
            小于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.LESS_THAN_OR_EQUAL">
            <summary>
            小于等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.GREATER_THAN">
            <summary>
            大于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.GREATER_THAN_OR_EQUAL">
            <summary>
            大于等于
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.NULL">
            <summary>
            空的
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.NumericComparisonOperator.NOT_NULL">
            <summary>
            非空
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.StringFilterComparisonOperator">
            <summary>
            字符串类型比较方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.EMPTY">
            <summary>
            空字符串
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.NOT_EMPTY">
            <summary>
            非空字符串
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.NULL">
            <summary>
            空的
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.NOT_NULL">
            <summary>
            非空
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.CONTAINS">
            <summary>
            包含（不区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.CONTAINS_CASE_SENSITIVE">
            <summary>
            包含（区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.DOES_NOT_CONTAIN">
            <summary>
            不包含（不区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.DOES_NOT_CONTAIN_CASE_SENSITIVE">
            <summary>
            不包含（区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.STARTS_WITH">
            <summary>
            开头匹配（不区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.STARTS_WITH_CASE_SENSITIVE">
            <summary>
            开头匹配（区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.ENDS_WITH">
            <summary>
            结尾匹配（不区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.ENDS_WITH_CASE_SENSITIVE">
            <summary>
            结尾匹配（区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.EQUAL">
            <summary>
            相等（不区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.EQUAL_CASE_SENSITIVE">
            <summary>
            相等（区分大小写）
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.StringFilterComparisonOperator.REGEX">
            <summary>
            正则匹配
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.FilterValueEditor">
            <summary>
            高级模式下的过滤纸编辑控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FilterValueEditor.GetComparisonOperator">
            <summary>
            得到比较方式枚举
            </summary>
            <typeparam name="TComparisonOperator"></typeparam>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.FilterValueEditor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FilterValueEditor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.FilterValueEditor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FilterValueEditor.HasComparisonOperator">
            <summary>
            是否选择了比较操作
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ValueText">
            <summary>
            值文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DataGridViewFilterColumn">
            <summary>
            代表一个过滤列
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFilterColumn.Column">
            <summary>
            DataGridView列
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFilterColumn.Filters">
            <summary>
            过滤器列表
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DateTimeFilter">
            <summary>
            时间日期过滤器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IFilter`1">
            <summary>
            过滤器泛型接口
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="T:HSUCF.Controls.IFilterBase">
            <summary>
            过滤器基础接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IFilterBase.Evaluate(System.Object)">
            <summary>
            比较值
            </summary>
            <param name="value">比较值</param>
            <returns>是否符合过滤操作的值。返回true表示符合；false表示不符合</returns>
        </member>
        <member name="P:HSUCF.Controls.IFilter`1.Value">
            <summary>
            数据类型<see cref="!:T"/>的待比较值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DateTimeFilter.HSUCF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            IFilterBase 接口方法
            </summary>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.DateTimeFilter.ComparisonOperator">
            <summary>
            时间日期比较操作
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DateTimeFilter.Value">
            <summary>
            过滤器值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FilterGroup`1">
            <summary>
            过滤器组
            </summary>
            <typeparam name="T">值类型</typeparam>
        </member>
        <member name="T:HSUCF.Controls.IFilterGroup">
            <summary>
            标示接口,用于高级过滤模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterGroup`1.filters">
            <summary>
            包含的过滤器列表
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FilterGroup`1.operators">
            <summary>
            逻辑操作关系列表
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FilterGroup`1.Evaluate(System.Object)">
            <summary>
            比较值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.ISetFilter">
            <summary>
            标示接口，用于基本过滤模式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.SetFilter`1">
            <summary>
            多项的过滤器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:HSUCF.Controls.SetFilter`1.isStateAllTrue">
            <summary>
            是否所有状态都是符合
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SetFilter`1.items">
            <summary>
            所有过滤项，以及符合状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.SetFilter`1.HSUCF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            比较。项中包含有非符合的，将进行比较
            </summary>
            <param name="value">比较值</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.SetFilter`1.IsStateAllTrue">
            <summary>
            是否所有的过滤器都是符合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.SetFilter`1.ItemsCount">
            <summary>
            过滤器数
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericFilter">
            <summary>
            数值类型过滤器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NumericFilter.HSUCF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            比较值
            </summary>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.NumericFilter.ComparisonOperator">
            <summary>
            比较类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NumericFilter.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.StringFilter">
            <summary>
            字符串过滤器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.StringFilter.HSUCF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            比较值
            </summary>
            <param name="value">比较值</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.StringFilter.ComparisonOperator">
            <summary>
            字符串比较方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.StringFilter.Value">
            <summary>
            待比较值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnFilterForm">
            <summary>
            列过滤器窗体
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.InitAdv">
            <summary>
            初始化高级
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.SerializeAdvFilter">
            <summary>
            高级的过滤模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.SerializeBasicFilter">
            <summary>
            基本过滤的方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.SetUIVisible">
            <summary>
            设置UI控件可见性
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.SetDefaultDisplayModeUIVisible(System.Boolean)">
            <summary>
            设置FilterDisplayMode.DefaultUI控件可见性
            </summary> 
            <param name="visibleAdv">是否高级模式</param>
        </member>
        <member name="F:HSUCF.Controls.ColumnFilterForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnFilterForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AggregateMode">
            <summary>
            聚合模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AggregateMode.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AggregateMode.Sum">
            <summary>
            总计
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AggregateMode.Average">
            <summary>
            平均值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AggregateMode.Min">
            <summary>
            最小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AggregateMode.Max">
            <summary>
            最大
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridViewFooter.footerList">
            <summary>
            尾部统计行的数据列表
            why 2014-4-29
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.GetExcludeAggregateColumnNames">
            <summary>
            聚合时候将排除列名集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.CopyPropertiesFromTargetGrid">
            <summary>
            从目标grid中拷贝属性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.BindTargetGridEvents(System.Boolean)">
            <summary>
            绑定目标grid的事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.SetColumnAggregateMode(System.String,HSUCF.Controls.AggregateMode)">
            <summary>
            设置列的聚合模式
            </summary>
            <param name="columnName">某列名</param>
            <param name="aggregateMode">聚合模式</param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.RefreshText">
            <summary>
            刷新尾部文本值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.RefreshTextByFooterColumn(HSUCF.Controls.hsDataGridViewFooter.FooterColumn)">
            <summary>
            刷新页脚信息
            </summary>
            <param name="cf"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.ChangeVisibilityHScrollBar">
            <summary>
            改变水平滚动条的可见性 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.CalculateColumnsWidth">
            <summary>
            计算所有可见列宽度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.DoAddColumnOfTargetGrid(System.Windows.Forms.DataGridViewColumn)">
            <summary>
            在TargetGrid动态添加列之后
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.DoRemoveColumnOfTargetGrid(System.Windows.Forms.DataGridViewColumn)">
            <summary>
            在TargetGrid动态删除列之后
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.CopyColumns">
            <summary>
            批量拷贝列信息，只在TargetGrid的数据源绑定完成后才发生
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridViewFooter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridViewFooter.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridViewFooter.HeaderText">
            <summary>
            尾部行的标题文本,默认根据FooterAggregateMode设置显示值，但是你可以根据RowHeaderText属性重新设置其值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridViewFooter.InitHeight">
            <summary>
            初始高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridViewFooter.ExcludeAggregateColumns">
            <summary>
            聚合时候将排除列名串（英文逗号或英文分号分隔）。对于非数值类型列本身不参与聚合，所以不需要包含在该排除列名串中。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc">
            <summary>
            聚合计算器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc.validDataRows">
            <summary>
            有效的数据行（目前是可见的数据行）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc.GetAvgValue(System.String)">
            <summary>
            返回平均值（double)
            </summary>
            <param name="targetGrid"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc.GetMaxValue(System.String)">
            <summary>
            返回最大值（double)
            </summary>
            <param name="targetGrid"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc.GetMinValue(System.String)">
            <summary>
            返回最小值（double)
            </summary>
            <param name="targetGrid"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridViewFooter.AggregateCalc.GetSumValue(System.String)">
            <summary>
            返回总计值（double)
            </summary>
            <param name="targetGrid"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridViewFooter.FooterColumn">
            <summary>
            尾部的每一列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridViewFooter.FooterColumns">
            <summary>
            尾部列的集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatColumn.Format">
            <summary>
            需要设置日期时间的格式化参数
            不同的类型使用不同的参数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatColumn.FormatType">
            <summary>
            需要设置格式化的类型
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DataGridViewDateTimeFormatColumn.FormatTypes">
            <summary>
            选择要格式化的数据类型
            日期类型、时间类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="selectAll"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingControlFormattedValue">
            <summary>
            获取或设置格式化后的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeFormatEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="selectAll"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewDateTimeEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingControlFormattedValue">
            <summary>
            获取或设置格式化后的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewDateTimeEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewFormatEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewFormatEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewFormatEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFormatEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFormatEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFormatEditingControl.EditingControlFormattedValue">
            <summary>
            获取或设置格式化后的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFormatEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewFormatEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FormFormat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormFormat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.FormFormat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            编辑在用户编辑单元格时
            </summary>
            <param name="rowIndex">当前行</param>
            <param name="initialFormattedValue">值</param>
            <param name="dataGridViewCellStyle">Cell样式</param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxCell.BoolFromTri(System.Windows.Forms.DataGridViewTriState)">
            <summary>
            
            </summary>
            <param name="tri"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.EditType">
            <summary>
            设置编辑状态单元格类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.Mask">
            <summary>
            正则表达式子
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.PromptChar">
            <summary>
            用户输入分割符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.IncludePrompt">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.IncludeLiterals">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxCell.ValidatingType">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.#ctor">
            <summary>
            实例化一个Masked对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.CellTemplate">
            <summary>
            Cell模版
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.Mask">
            <summary>
            设置正则
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.PromptChar">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.IncludePrompt">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.IncludeLiterals">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxColumn.ValidatingType">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.OnTextChanged(System.EventArgs)">
            <summary>
            重写基类(MakedTextBox)的OnTextChanged方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.NotifyDataGridViewOfValueChange">
            <summary>
            当text值发生变化时，通知DataGridView
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.translateAlignment(System.Windows.Forms.DataGridViewContentAlignment)">
            <summary>
            设置对齐方式
            </summary>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="selectAll"></param>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingControlFormattedValue">
            <summary>
            获取或设置格式化后的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewMaskedTextBoxEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ComboBoxTreeView.isShowDropDown">
            <summary>
            是否打开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxTreeView.AllowEdit">
            <summary>
            设置下拉列表是否允许编辑(False:不允许  True:允许)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxTreeView.TreeWidth">
            <summary>
            树控件的宽
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxTreeView.TreeHeight">
            <summary>
            树控件的高
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewTreeViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            获取控件的Text值
            </summary>
            <param name="context">错误上下文</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            编辑键盘
            </summary>
            <param name="keyData"></param>
            <param name="dataGridViewWantsInputKey"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DataGridViewTreeViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingPanelCursor">
            <summary>
            在Cell被编辑的时候光标显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingControlDataGridView">
            <summary>
            获取或设置所在的DataGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingControlFormattedValue">
            <summary>
            获取或设置格式化后的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingControlRowIndex">
            <summary>
            控件所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DataGridViewTreeViewEditingControl.EditingControlValueChanged">
            <summary>
            是否值发生了变化
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridView">
            <summary>
            数据网格控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.columnChooser">
            <summary>
            列选择窗口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.enableColumnChooser">
            <summary>
            是否启用列选择
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.InitChooser">
            <summary>
            初始化列选择器相关
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.menuItemColumnChooser_Click(System.Object,System.EventArgs)">
            <summary>
            单击菜单项列选择器时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.ShowColumnChooser(System.Drawing.Point)">
            <summary>
            显示列选择窗口
            </summary>
            <param name="screenLocation">屏幕坐标</param>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.columnIndexOnClickRightMouse">
            <summary>
            右键单击列头记录下的列索引
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.columnSettingsWinScreenPoint">
            <summary>
            列相关设置窗体的显示位置（屏幕位置）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.SetControlTheme">
            <summary>
            设置控件样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.CopyHeaderTextFromDataSource">
            <summary>
            自动从数据源（只支持DataTable)中复制列标题
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.GenerateColumnsInReadOnly(System.Object)">
            <summary>
            产生列（当数据源是DataTable，DataView,DataSet，而且是AutoGenerateColumns=true,ReadOnly=true)
            </summary>
            <param name="source"></param>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.filterColumns">
            <summary>
            过滤列（DataGridViewFilterColumn）集合
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.filterDisplayMode">
            <summary>
            显示模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.filterIndicatorNormalColor">
            <summary>
            过滤器的指示器的正常情况下的线条颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.filterIndicatorHighlightColor">
            <summary>
            过滤器的指示器的鼠标经过高亮的时候的线条颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.SetDataSourceRowFilter(System.String)">
            <summary>
            设置数据源的过滤字符串
            </summary>
            <param name="rowFilter">过滤字符串</param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.GetFilterColumnPair">
            <summary>
            得到过滤列名对
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.GetDataView">
            <summary>
            得到数据表视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.FilterDataRowsOnDataSource">
            <summary>
            过滤数据行(通过数据源进行过滤,目前只支持DataTable和DataView)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.FilterDataRows">
            <summary>
            过滤数据行(设置行的可见性很慢的，考虑重绘数据行(数据源方式Filter字符串大小有限制）)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.FilterDataRowsOnParallel">
            <summary>
            并行过滤数据行(设置行的可见性很慢的，考虑重绘数据行(数据源方式Filter字符串大小有限制）)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.InitFilters">
            <summary>
             初始化数据行
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.IsRowSkipped(System.Windows.Forms.DataGridViewRow,HSUCF.Controls.DataGridViewFilterColumn)">
            <summary>
            是否跳过行
            </summary>
            <param name="gridRow">DataGridViewRow对象</param> 
            <param name="filterColumn">过滤列对象</param>
            <returns>返回True表示跳过，False表示不跳过</returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.menuItemClearColumnFilter_Click(System.Object,System.EventArgs)">
            <summary>
            单击取消过滤上下文菜单
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.menuItemColumnFilter_Click(System.Object,System.EventArgs)">
            <summary>
            单击过滤上下文菜单
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.PaintColumnHeaderForFilter(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            绘制列标题（绘制列过滤的图标）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.PaintFilterIndicator(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32)">
            <summary>
            绘制过滤的指示图形
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="left"></param>
            <param name="top"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.ShowColumnFilter(System.Drawing.Point)">
            <summary>
            显示列过滤窗口
            </summary>
            <param name="screenLocation">屏幕坐标</param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.InitFooter">
            <summary>
            初始化尾部栏
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataGridView.isChangedParent">
            <summary>
            是否已经改变DataGridView的父容器控件（如果运行时而且尾部栏可见，将会改变父容器）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.changeParent">
            <summary>
            当DataGridView第一次可见时，panel被创建，dataGrid将从父容器中删除，并且加入panel中
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.RefreshPanelSubControlsHeight">
            <summary>
            属性panel内部子控件的高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.SetPanelHeight(System.Int32)">
            <summary>
            设置Panel的高度(实际上datagridView被Panel包围着）
            </summary>
            <param name="setHeight"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.GetPanelHeight">
            <summary>
            设置Panel的高度(实际上datagridView被Panel包围着）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.SetPanelWidth(System.Int32)">
            <summary>
            设置Panel的宽度(实际上datagridView被Panel包围着）
            </summary>
            <param name="setWidth"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.GetPanelWidth">
            <summary>
            设置Panel的高度(实际上datagridView被Panel包围着）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.PaintColumnHeader(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            绘制列标题
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.PaintColumnHeaderForText(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            绘制列标题文本（目前先居中绘制）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.InitKeyAndMouseEvent">
            <summary>
            初始化键盘和鼠标事件相关
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataGridView.hsDataGridView_ColumnHeaderMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            单击列头
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.EnableColumnChooser">
            <summary>
            启用或禁用列选择器，它可以使你显示或隐藏或排序列。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.DataSource">
            <summary>
            获取或设置 System.Windows.Forms.DataGridView 所显示数据的数据源。 
            </summary>
            <remarks>
            当数据源是DataTable，DataView,DataSet，而且是AutoGenerateColumns为true,ReadOnly为true时
            将动态产生列已加快显示速度
            </remarks>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.EnableChangeSelectedRowOnScroll">
            <summary>
            是否启用改变选中行，在滚动鼠标时候
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.Height">
            <summary>
            控件高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.Width">
            <summary>
            控件宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.EnableColumnFilter">
            <summary>
            启用或禁用列过滤器。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FilterDisplayMode">
            <summary>
            过滤器的显示模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FilterIndicatorNormalColor">
            <summary>
            过滤器的指示器的正常情况下的线条颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FilterIndicatorHighlightColor">
            <summary>
            过滤器的指示器的鼠标经过高亮的时候的线条颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.IsSupportFilter">
            <summary>
            数据源是否支持筛选
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FooterExcludeAggregateColumns">
            <summary>
            聚合时候将排除列名串（英文逗号或英文分号分隔）。对于非数值类型列本身不参与聚合，所以不需要包含在该排除列名串中。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FooterList">
            <summary>
            尾部统计行的数据列表
            why 2014-4-29
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.FooterHeaderText">
            <summary>
            尾部行的标题文本,默认根据FooterAggregateMode设置显示值，但是你可以根据RowHeaderText属性重新设置其值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.ScrollBars">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.EnableShowRowNumber">
            <summary>
            获取和设置一个值，该值用于指示hsDataGridView是否显示行号，默认不显示行号。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.HeaderBeginColor">
            <summary>
            获取和设置一个值，该值用于指示hsDataGridView的标题栏的绘制颜色初始值。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDataGridView.HeaderEndColor">
            <summary>
            获取和设置一个值，该值用于指示hsDataGridView的标题栏的绘制颜色结束值。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataGridView.FilterColumnType">
            <summary>
            过滤列类型
            </summary>
        </member>
        <member name="T:HSUCF.Controls.OldColumnChooserForm">
            <summary>
            列选择器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.OldColumnChooserForm.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:HSUCF.Controls.OldColumnChooserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.OldColumnChooserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.OldColumnChooserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.OldColumnChooserForm.ColumnStructure">
            <summary>
            列结构
            </summary>
        </member>
        <member name="F:HSUCF.Controls.OldColumnChooserForm.ColumnStructure.Name">
            <summary>
            列名
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsBindingNavigator">
            <summary>
            表示窗体上绑定到数据的控件的导航和操作用户界面 (UI)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsBindingNavigator.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsBindingNavigator.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsBindingNavigator.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsBindingNavigator.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsBindingNavigator.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsBindingNavigator.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsBindingNavigator.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsBindingNavigator.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsBindingNavigator.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsBindingNavigator.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RandomDESCryptoService">
            <summary>
            DES加密解密
            </summary>
        </member>
        <member name="M:HSUCF.Controls.RandomDESCryptoService.Encode(System.String)">
            <summary>
            加密
            </summary>
            <param name="data">待加密数据</param>
            <returns>加密后数据</returns>
        </member>
        <member name="M:HSUCF.Controls.RandomDESCryptoService.Decode(System.String)">
            <summary>
            解密
            </summary>
            <param name="data">待解密数据</param>
            <returns>解密后数据</returns>
        </member>
        <member name="P:HSUCF.Controls.RandomDESCryptoService.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RandomDESCryptoService.IV">
            <summary>
            初始化向量
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DesSecureTextBoxEncoder">
            <summary>
            SecureTextBox控件默认加密器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ISecureTextBoxEncoder">
            <summary>
            自定义加密接口,未指定将返回原文
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ISecureTextBoxEncoder.Encode(System.String)">
            <summary>
            加密
            </summary>
            <param name="text">输入文本</param>
            <returns>输出已加密的文本</returns>
        </member>
        <member name="M:HSUCF.Controls.DesSecureTextBoxEncoder.Encode(System.String)">
            <summary>
            使用DES加密输入字符串,返回加密后的字符串
            </summary>
            <param name="text">明文</param>
            <returns>密文</returns>
        </member>
        <member name="T:HSUCF.Controls.IDevScrollBar">
            <summary>
            滚动条接口
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IDevScrollBar.ScrollWidth">
            <summary>
            滚动条宽度/高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IDevScrollBar.Pad">
            <summary>
            滚动条左边或右边内边距
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDevHScrollBar.#ctor">
            <summary>
            初始化水平滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDevHScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDevHScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsDevHScrollBar.ScrollWidth">
            <summary>
            滚动条高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDevHScrollBar.Pad">
            <summary>
            上边距
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDevScrollInfo">
            <summary>
            滚动条信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDevScrollInfo.#ctor(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            初始化滚动条信息
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDevScrollInfo.CreateHScroll">
            <summary>
            创建水平滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDevScrollInfo.CreateVScroll">
            <summary>
            创建垂直滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsDevScrollInfo.ScrollWidth">
            <summary>
            滚动条宽度/高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDevScrollInfo.Pad">
            <summary>
            与滚动内容的距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDevScrollInfo.ScrollSize">
            <summary>
            获取滚动条宽度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDevVScrollBar.#ctor">
            <summary>
            初始化垂直滚动条
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDevVScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDevVScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsDevVScrollBar.ScrollWidth">
            <summary>
            滚动条宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDevVScrollBar.Pad">
            <summary>
            左边距
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsVCrkScrollBar">
            <summary>
            hs垂直滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVCrkScrollBar.#ctor(HSUCF.Controls.hsDevScrollInfo)">
            <summary>
            初始化垂直滚动条
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:HSUCF.Controls.hsVCrkScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVCrkScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsVCrkScrollBar.ScrollInfo">
            <summary>
            获取滚动条信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVCrkScrollBar.ScrollWidth">
            <summary>
            滚动条高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVCrkScrollBar.Pad">
            <summary>
            上边距
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsScrollBarViewInfo">
            <summary>
            滚动条视图信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollBarViewInfo.#ctor(DevExpress.XtraEditors.IScrollBar)">
            <summary>
            初始化
            </summary>
            <param name="scrollBar"></param>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.H3ScrollBar">
            <summary>
            hs滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.ButtonWidth">
            <summary>
            返回按钮的宽度/高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.CalcThumbButtonBounds">
            <summary>
            获取滑块的位置和大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.VisibleDecButtonBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.VisibleIncButtonBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBarViewInfo.ScrollBarHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSkinScrollBarButtonPainter">
            <summary>
            滚动条按钮绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawObject(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制对象
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.UpdateInfo(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            更新信息
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawButtonBackground(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
            <summary>
            绘制背景
            </summary>
            <param name="e"></param>
            <param name="style"></param>
            <param name="r"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawHot(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制焦点
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawNormal(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制正常模式
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawPressed(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制鼠标按下
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawSelectedFrame(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制选中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.DrawButton(DevExpress.Utils.Drawing.ObjectInfoArgs,System.Drawing.Color,System.Drawing.Point[])">
            <summary>
            绘制按钮
            </summary>
            <param name="e"></param>
            <param name="color"></param>
            <param name="points"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.CalcButtonPolygon(System.Drawing.Rectangle,System.Windows.Forms.ScrollButton)">
            <summary>
            获取按钮顶点坐标
            </summary>
            <param name="bounds"></param>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarButtonPainter.CalcButtonBounds(System.Drawing.Rectangle,System.Windows.Forms.ScrollButton)">
            <summary>
            获取按钮大小和位置
            </summary>
            <param name="bounds"></param>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsSkinScrollBarPainter">
            <summary>
            H3Skin滚动条绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.CreateScrollBarButtonPainter">
            <summary>
            创建滚动条按钮绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.CreateScrollBarThumbPainter">
            <summary>
            创建滚动条滑块绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.DrawNormalScrollArea(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            绘制空白区域
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
            <param name="isInc"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.DrawPressedScrollArea(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
            <param name="isInc"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.DrawThumbTrack(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle)">
            <summary>
            绘制滑块轨道
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarPainter.CalcAreaRegion(System.Drawing.Rectangle,DevExpress.XtraEditors.ScrollBarType)">
            <summary>
            获取滑块区域
            </summary>
            <param name="bounds"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsSkinScrollBarThumbPainter">
            <summary>
            滚动条滑块绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawObject(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制滑块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.UpdateInfo(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            更新信息
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawButtonBackground(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
            <summary>
            绘制背景
            </summary>
            <param name="e"></param>
            <param name="style"></param>
            <param name="r"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawHot(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制焦点
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawNormal(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制正常模式
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawPressed(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制鼠标按下
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawSelectedFrame(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制选中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.DrawThumb(DevExpress.Utils.Drawing.ObjectInfoArgs,System.Drawing.Color,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            绘制滑块
            </summary>
            <param name="e"></param>
            <param name="color"></param>
            <param name="path"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSkinScrollBarThumbPainter.CalcThumbPath(System.Drawing.Rectangle,DevExpress.XtraEditors.ScrollBarType)">
            <summary>
            获取滑块绘制路径
            </summary>
            <param name="bounds"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsHCrkScrollBar">
            <summary>
            hs水平滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsHCrkScrollBar.#ctor(HSUCF.Controls.hsDevScrollInfo)">
            <summary>
            初始化水平滚动条
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:HSUCF.Controls.hsHCrkScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsHCrkScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsHCrkScrollBar.ScrollInfo">
            <summary>
            获取滚动条信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsHCrkScrollBar.ScrollWidth">
            <summary>
            滚动条宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsHCrkScrollBar.Pad">
            <summary>
            左边距
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GetFlatSytleColorHandle">
            <summary>
            获取扁平化样式颜色委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter">
            <summary>
            扁平化样式绘制类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.GetCurrentBackColor">
            <summary>
            获取当前背景颜色的委托
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.GetCurrentBorderColor">
            <summary>
            获取当前边框颜色的委托
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.#ctor(System.Windows.Forms.Control,System.Int32,System.Int32,HSUCF.Controls.GetFlatSytleColorHandle,HSUCF.Controls.GetFlatSytleColorHandle)">
            <summary>
            初始化扁平样式绘制类
            </summary>
            <param name="owner">所属控件</param>
            <param name="borderWidth">控件原边框宽度，默认1</param>
            <param name="radius">边框圆角半径</param>
            <param name="getCurrentBorderColor">获取当前边框颜色委托</param>
            <param name="getCurrentBackColor">获取当前背景颜色委托</param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.RefreshBorderPen">
            <summary>
            更新边框画笔
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.RefreshBackPen">
            <summary>
            更新背景画笔
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.RefreshContourPath">
            <summary>
            获取控件轮廊路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.RefreshBorderPath">
            <summary>
            获取控件边框路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.GetParentBackBrush">
            <summary>
            获取父控件背景画刷
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.SetRegion">
            <summary>
            设置控件轮廊
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.NcCalcSize(System.Windows.Forms.Message@)">
            <summary>
            计算客户区域
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.DrawBorder(System.Drawing.Bitmap)">
            <summary>
            绘制边框
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.DrawScroll(System.Drawing.Bitmap)">
            <summary>
            绘制滚动条
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.PaintBorder">
            <summary>
            绘制边框样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.PaintScroll(System.Windows.Forms.Message@)">
            <summary>
            绘制滚动条样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.PaintStyle(System.Windows.Forms.Message@)">
            <summary>
            绘制样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.BeforeWndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息，拦截绘制事件，返回是否需要处理中断基类处理
            </summary>
            <param name="m"></param>
            <returns>是否需要处理中断基类处理</returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.AfterWndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息，拦截绘制事件
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.RefreshMouseDownLocation(System.Drawing.Point)">
            <summary>
            刷新鼠标点击位置
            </summary>
            <param name="downPos"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.DoScroll(System.Drawing.Point,System.Windows.Forms.Message@,System.Drawing.Point,System.Boolean)">
            <summary>
            执行滚动操作
            </summary>
            <param name="pos">光标位置</param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter._scrollDownTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.CatchMouseDoScroll(System.Windows.Forms.Message@)">
            <summary>
            捕捉鼠标
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.CalcRect">
            <summary>
            计算系统区和滚动条的大小和位置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.ReGetScrollInfo">
            <summary>
            重新获取滚动条信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.ReDraw">
            <summary>
            触发控件重绘
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.PointToClient(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.IsLButtonDown">
            <summary>
            判断鼠标左键是否按下
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.GetCursorPos(System.Drawing.Point@)">
            <summary>
            获取当前光标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.IsVerticalScrollBarVisible">
            <summary>
            判断是否出现垂直滚动条
            </summary>
            <param name="ctrl">待测控件</param>
            <returns>出现垂直滚动条返回true，否则为false</returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.IsHorizontalScrollBarVisible">
            <summary>
            判断是否出现水平滚动条
            </summary>
            <param name="ctrl">待测控件</param>
            <returns>出现水平滚动条返回true，否则为false</returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.HaveScroll">
            <summary>
            获取控件是否含有滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.HaveBorder">
            <summary>
            获取控件是否含有边框
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.GetOwnerPropertyValue``1(System.String)">
            <summary>
            获取控件公有属性值
            </summary>
            <typeparam name="T">值类型</typeparam>
            <param name="name">属性名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.GetAppearanceColor(System.String)">
            <summary>
            获取外观颜色
            </summary>
            <param name="name">外观名称</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.Owner_ParentChanged(System.Object,System.EventArgs)">
            <summary>
            控件父控件变化
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.Parent_BackColorChanged(System.Object,System.EventArgs)">
            <summary>
            父控件背景颜色发生变化
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.Owner_FlatStyleChanged(System.Object,System.EventArgs)">
            <summary>
            扁平化样式发生变化，需要重绘
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.Owner_RightToLeftChanged(System.Object,System.EventArgs)">
            <summary>
            RightToLeft属性发生变化，需要重绘
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="E:HSUCF.Controls.FlatSytlePainter.ScrollBarCustomSlided">
            <summary>
            自定义滚动条滑动事件委托
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.Owner">
            <summary>
            获取边框所属控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.Padding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.BorderWidth">
            <summary>
            边框所属控件原边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.Radius">
            <summary>
            边框圆角半径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.ScrollPad">
            <summary>
            滚动条边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.BorderStyle">
            <summary>
            控件边框样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.MustReDraw">
            <summary>
            是否必须要重绘
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.ScrollSlideType">
            <summary>
            滚动条滑块滑动方式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter.ScrollLocationEnums">
            <summary>
            滚动条位置枚举
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter.ScrollBitmapEnums">
            <summary>
            图标类型枚举
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter.ScrollIcoStatusEnums">
            <summary>
            图标状态枚举
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors">
            <summary>
            样式颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonBackColorNormal">
            <summary>
            前进倒退按钮背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonBackColorEnter">
            <summary>
            前进倒退按钮背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonBackColorClick">
            <summary>
            前进倒退按钮背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonBackColorDisable">
            <summary>
            前进倒退按钮背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonIcoColorNormal">
            <summary>
            前进倒退按钮图标背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonIcoColorEnter">
            <summary>
            前进倒退按钮图标背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonIcoColorClick">
            <summary>
            前进倒退按钮图标背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ButtonIcoColorDisable">
            <summary>
            前进倒退按钮图标背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonBackColorNormal">
            <summary>
            滑块按钮背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonBackColorEnter">
            <summary>
            滑块按钮背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonBackColorClick">
            <summary>
            滑块按钮背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonBackColorDisable">
            <summary>
            滑块按钮背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonColorNormal">
            <summary>
            滑块按钮颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonColorEnter">
            <summary>
            滑块按钮颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonColorClick">
            <summary>
            滑块按钮颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.ScrollStyleColors.ScrollButtonColorDisable">
            <summary>
            滑块按钮颜色_禁用
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatSytlePainter.FlatScroll">
            <summary>
            扁平化滚动条
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.Spacing">
            <summary>
            按钮间距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.Width">
            <summary>
            宽度（垂直）/高度（水平）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonSpaceSize">
            <summary>
            前进倒退按钮大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonBackColorNormal">
            <summary>
            前进倒退按钮背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonBackColorEnter">
            <summary>
            前进倒退按钮背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonBackColorClick">
            <summary>
            前进倒退按钮背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonBackColorDisable">
            <summary>
            前进倒退按钮背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonIcoSize">
            <summary>
            前进倒退按钮三角图标大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonIcoColorNormal">
            <summary>
            前进倒退按钮图标背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonIcoColorEnter">
            <summary>
            前进倒退按钮图标背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonIcoColorClick">
            <summary>
            前进倒退按钮图标背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ButtonIcoColorDisable">
            <summary>
            前进倒退按钮图标背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonRadius">
            <summary>
            滑块按钮圆角半径
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonBackColorNormal">
            <summary>
            滑块按钮背景颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonBackColorEnter">
            <summary>
            滑块按钮背景颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonBackColorClick">
            <summary>
            滑块按钮背景颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonBackColorDisable">
            <summary>
            滑块按钮背景颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonColorNormal">
            <summary>
            滑块按钮颜色_正常
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonColorEnter">
            <summary>
            滑块按钮颜色_经过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonColorClick">
            <summary>
            滑块按钮颜色_点击
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll.ScrollButtonColorDisable">
            <summary>
            滑块按钮颜色_禁用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll._brushes">
            <summary>
            画刷
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll._bitmaps">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll._reDraw">
            <summary>
            是否重绘
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll._backColor">
            <summary>
            控件背景颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatSytlePainter.FlatScroll._backBrush">
            <summary>
            背景画刷
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.#cctor">
            <summary>
            静态构造方法
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.#ctor(System.Windows.Forms.Control)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.MakePointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            将点平移到矩形内
            </summary>
            <param name="pt"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.CalcScrollWidthPos(HSUCF.Controls.FnBar,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO)">
            <summary>
            
            </summary>
            <param name="fnBar"></param>
            <param name="scrollInfo"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.CalcScrollPos(System.Drawing.Point,HSUCF.Controls.FnBar,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO)">
            <summary>
            计算位置
            </summary>
            <param name="pos"></param>
            <param name="fnBar"></param>
            <param name="scrollInfo"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.CalcScrollPos(HSUCF.Controls.FlatSytlePainter.ScrollLocationEnums,System.Drawing.Point,System.Drawing.Point,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO)">
            <summary>
            计算滚动滑块位置
            </summary>
            <param name="downLocation">鼠标按下位置</param>
            <param name="downPos">鼠标按下坐标</param>
            <param name="pos">鼠标当前坐标</param>
            <param name="scrollInfo">滚动条信息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.CalcNewScrollInfo(System.Int32,System.Int32,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO@)">
            <summary>
            计算新的滚动条信息
            </summary>
            <param name="tPos">目标位置</param>
            <param name="scrollSpeed">滚动速度，如果小于等于0，则一次到位</param>
            <param name="scrollInfo">传入旧的滚动条信息，返回新的滚动条信息</param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.CalcNewScrollInfo(HSUCF.Controls.FlatSytlePainter.ScrollLocationEnums,System.Drawing.Point,System.Drawing.Point,System.Int32,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO@)">
            <summary>
            计算新的滚动条信息
            </summary>
            <param name="downLocation">鼠标按下位置</param>
            <param name="downPos">鼠标按下位置</param>
            <param name="pos">鼠标当前位置</param>
            <param name="fnBar">水平/垂直滚动条</param>
            <param name="scrollSpeed">滚动速度，如果小于等于0，则一次到位</param>
            <param name="scrollInfo">传入旧的滚动条信息，返回新的滚动条信息</param>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.BulidHScroll(System.Drawing.Rectangle,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO,System.Drawing.Point,System.Boolean,System.Drawing.Color)">
            <summary>
            生成水平滚动条展示
            </summary>
            <param name="rect">滚动条区域</param>
            <param name="scrollInfo">滚动条信息</param>
            <param name="mousePos">鼠标位置</param>
            <param name="mouseDown">鼠标是否按下</param>
            <param name="backColor">背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.BulidVScroll(System.Drawing.Rectangle,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO,System.Drawing.Point,System.Boolean,System.Drawing.Color)">
            <summary>
            生成垂直滚动条展示
            </summary>
            <param name="rect">滚动条区域</param>
            <param name="scrollInfo">滚动条信息</param>
            <param name="mousePos">鼠标位置</param>
            <param name="mouseDown">鼠标是否按下</param>
            <param name="backColor">背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.BulidScroll(System.Drawing.Rectangle,HSUCF.Controls.FnBar,HSUCF.Controls.NativeMethodsUtility.SCROLLINFO,System.Drawing.Point,System.Boolean,System.Drawing.Color)">
            <summary>
            生成滚动条展示
            </summary>
            <param name="rect">滚动条区域</param>
            <param name="fnBar">滚动条方向，0，水平，1，垂直</param>
            <param name="scrollInfo">滚动条信息</param>
            <param name="mousePos">鼠标位置</param>
            <param name="mouseDown">鼠标是否按下</param>
            <param name="backColor">背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatSytlePainter.FlatScroll.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonLeftNormal">
            <summary>
            水平滚动条 向左按钮图标 正常
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonLeftEnter">
            <summary>
            水平滚动条 向左按钮图标 经过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonLeftClick">
            <summary>
            水平滚动条 向左按钮图标 单击
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonLeftDisable">
            <summary>
            水平滚动条 向左按钮图标 禁用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonRightNormal">
            <summary>
            水平滚动条 向右按钮图标 正常
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonRightEnter">
            <summary>
            水平滚动条 向右按钮图标 经过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonRightClick">
            <summary>
            水平滚动条 向右按钮图标 单击
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HButtonRightDisable">
            <summary>
            水平滚动条 向右按钮图标 禁用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonTopNormal">
            <summary>
            垂直滚动条 向上按钮图标 正常
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonTopEnter">
            <summary>
            垂直滚动条 向上按钮图标 经过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonTopClick">
            <summary>
            垂直滚动条 向上按钮图标 单击
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonTopDisable">
            <summary>
            垂直滚动条 向上按钮图标 禁用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonBottomNormal">
            <summary>
            垂直滚动条 向下按钮图标 正常
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonBottomEnter">
            <summary>
            垂直滚动条 向下按钮图标 经过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonBottomClick">
            <summary>
            垂直滚动条 向下按钮图标 单击
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VButtonBottomDisable">
            <summary>
            垂直滚动条 向下按钮图标 禁用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.Owner">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.Size">
            <summary>
            滚动条大小（垂直） 
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VRect">
            <summary>
            垂直滚动条的位置和大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HRect">
            <summary>
            水平滚动条的位置和大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VTopButtonRect">
            <summary>
            垂直滚动条向上按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VTopRect">
            <summary>
            垂直滚动条点击向上区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VBottomButtonRect">
            <summary>
            垂直滚动条向下按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VBottomRect">
            <summary>
            垂直滚动条点击向下区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VScrollRect">
            <summary>
            垂直滚动条滑块
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.VScrollBackRect">
            <summary>
            垂直滚动条滑块背景
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HLeftButtonRect">
            <summary>
            水平滚动条向左按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HLeftRect">
            <summary>
            水平滚动条点击向左区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HRightButtonRect">
            <summary>
            水平滚动条向右按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HRightRect">
            <summary>
            水平滚动条点击向右区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HScrollRect">
            <summary>
            水平滚动条滑块
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FlatSytlePainter.FlatScroll.HScrollBackRect">
            <summary>
            水平滚动条滑块背景
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ScrollSlideType">
            <summary>
            滑动条滑动方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ScrollSlideType.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ScrollSlideType.Custom">
            <summary>
            自定义，需要处理ScrollBarCustonSlided事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FnBar">
            <summary>
            滚动条方向
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ScrollBarSlidedEventArgs">
            <summary>
            滚动条信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ScrollBarSlidedEventArgs.#ctor(HSUCF.Controls.NativeMethodsUtility.SCROLLINFO,HSUCF.Controls.FnBar)">
            <summary>
            初始化滚动条信息
            </summary>
            <param name="si"></param>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.Min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.Page">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.Pos">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.TrackPos">
            <summary>
            滚动位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ScrollBarSlidedEventArgs.Fn">
            <summary>
            滚动条类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatStyleUtility.Radius">
            <summary>
            控件圆角直径大小
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleUtility.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,HSUCF.Controls.RoundStyle,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Windows.Forms.Control)">
            <summary>
            画矩形圆角
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="roundStyle"></param>
            <param name="radius"></param>
            <param name="borderColor"></param>
            <param name="backColor"></param>
            <param name="ctrl"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleUtility.GetEllipse(System.Windows.Forms.Control,System.Single,System.Boolean)">
            <summary>
            得到一个椭圆
            </summary>
            <param name="ctrl">椭圆的矩形范围</param>
            <param name="hScale">椭圆的宽度与高度之比例</param>
            <param name="correction">是否修正</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleUtility.GetRegion(HSUCF.Controls.RoundStyle,System.Int32,System.Windows.Forms.Control)">
            <summary>
            获取控件轮廊
            </summary>
            <param name="roundStyle"></param>
            <param name="radius">半径大小</param>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleUtility.GetEllipsedRectPaths(System.Drawing.Rectangle,System.Nullable{System.Single})">
            <summary>
            该方法得到两个一个对象，该对象包含两个路径,每个路径形式都是 左半个椭圆（或左半圆）+矩形 + 右半个椭圆（或右半圆）
            </summary>
            <param name="ctrlRect">控件的原始矩形区域</param> 
            <param name="ellipsedWidthHeightFactor">椭圆的高度和宽度的比率因子,不传入，默认是1.0,即左右都是半圆</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleUtility.GetEllipsedRectPath(System.Drawing.Rectangle,System.Boolean,System.Nullable{System.Single})">
            <summary>
            该方法得到一个路径，路径形式是 左半个椭圆（或左半圆）+矩形 + 右半个椭圆（或右半圆）
            </summary>
            <param name="ctrlRect">控件的原始矩形区域</param>
            <param name="forRegion">是否为了设置控件的区域(Control.Region)属性</param>
            <param name="ellipsedWidthHeightFactor">椭圆的高度和宽度的比率因子,不传入，默认是1.0,即左右都是半圆</param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.EllipsedRectGraphicsPaths">
            <summary>
            该类表示两个路径,每个路径形式都是 左半个椭圆（或左半圆）+矩形 + 右半个椭圆（或右半圆）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.EllipsedRectGraphicsPaths.RegionPath">
            <summary>
            用于区域的路径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.EllipsedRectGraphicsPaths.DrawPath">
            <summary>
            用于绘制的路径
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSAppearanceConverter">
            <summary>
            用于外观的类型转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ButtonFlatStyle">
            <summary>
            按钮扁平化样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ButtonFlatState">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="E:HSUCF.Controls.ButtonAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsCheckedListBox">
            <summary>
            复选框列表的分部类
            </summary>
            <summary>
            复选框列表框控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckedListBox.CONST_ITEMHEIGHT">
            <summary>
            项高度常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckedListBox._flatPainter">
            <summary>
            扁平化边框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.GetIco(System.Windows.Forms.CheckState,System.Boolean)">
            <summary>
            获取复选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.GetIcoLocation(System.Drawing.Rectangle)">
            <summary>
            获取复选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.GetForeColor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.DrawItemEx(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.OnFontChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.hsCheckedListBox_EnabledChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsCheckedListBox.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsCheckedListBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsCheckedListBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsCheckedListBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsCheckedListBox.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsCheckedListBox.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.ItemForeColors">
            <summary>
            项文字颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.ItemHeight">
            <summary>
            项高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.Fillet">
            <summary>
            启用圆角
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.UseCompatibleTextRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.Appearance">
            <summary>
            文本框对应的外观对象
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsCheckedListBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsCheckedListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CheckedListBoxAppearance">
            <summary>
            复选框列表外观对象
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.SelectedBackColorNormal">
            <summary>
            Gets or sets the selected item background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BackColorNormal">
            <summary>
            Gets or sets the background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BorderColorNormal">
            <summary>
            Gets or sets the border color（Normal）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.ForeColorNormal">
            <summary>
            Gets or sets the foreground color（Normal）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BackColorFoucsed">
            <summary>
            Gets or sets the background color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BorderColorFoucsed">
            <summary>
            Gets or sets the border color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.ForeColorFoucsed">
            <summary>
            Gets or sets the foreground color（Foucsed）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BackColorDisabled">
            <summary>
            Gets or sets the background color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.BorderColorDisabled">
            <summary>
            Gets or sets the border color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.CheckedListBoxAppearance.ForeColorDisabled">
            <summary>
            Gets or sets the foreground color（Disabled）.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxFlatState">
            <summary>
            下拉框状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxAppearance.SelectedItemOuterBorderColor">
            <summary>
            高亮Item外边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxAppearance.SelectedItemInnerBorderColor">
            <summary>
            高亮Item内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxAppearance.SelectedItemFillColor">
            <summary>
            高亮Item填充颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ComboBoxAppearance.DropDownFillColor">
            <summary>
            下拉框填充颜色
            </summary>
        </member>
        <member name="E:HSUCF.Controls.ComboBoxAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsContextMenuStrip">
            <summary>
            上下文菜单控件的分部类
            </summary>
            <summary>
            上下文快捷菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsContextMenuStrip.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsContextMenuStrip.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsContextMenuStrip.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsContextMenuStrip.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsContextMenuStrip.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsContextMenuStrip.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsContextMenuStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsContextMenuStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsFlatTrackBarInner">
            <summary>
            hsFlatTrackBar
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTrackBar">
            <summary>
            跟踪条控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.OnRenderTick(HSUCF.Controls.PaintTickEventArgs)">
            <summary>
            绘制刻度
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.OnRenderTrack(System.Windows.Forms.PaintEventArgs)">
            <summary>
            画轨道
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.OnRenderThumb(HSUCF.Controls.PaintThumbEventArgs)">
            <summary>
            画滑块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.ThumbHovering(HSUCF.Controls.NativeMethods.RECT)">
            <summary>
            移动滚动滑块，将滑块的矩形滑动到鼠标指定的位置。
            </summary>
            <param name="thumbRect"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.CalMouseDownValue(System.Drawing.Point)">
            <summary>
            计算鼠标点下的值
            </summary>
            <param name="mousePos">鼠标点下的坐标(该坐标是相对坐标)</param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsTrackBar.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsTrackBar.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTrackBar.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.BackColor">
            <summary>
            TrackBar的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.DisabledBackColor">
            <summary>
            TrackBar不可使用时的背景颜色。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTrackBar.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTrackBar.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBarInner.OnRenderBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重写OnRenderBackground
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBarInner.OnRenderTrack(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重写OnRenderTrack
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBarInner.OnRenderThumb(HSUCF.Controls.PaintThumbEventArgs)">
            <summary>
            重写OnRenderThumb
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBarInner.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.PaintTransparentBackground">
            <summary>
            PaintTransparentBackground方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.TrackBackColor">
            <summary>
            TrackBar背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.MaximumSelect">
            <summary>
            最大可选择的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBarInner.MinimumSelect">
            <summary>
            最小可选择的值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelNumericEditorBak">
            <summary>
            带标签的数值编辑组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.BOTTOM_CHINESE_NUMBER_SPACE">
            <summary>
            底部中文显示的是时候默认的分隔高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.chineseNumberLabel">
            <summary>
            中文金额提示标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToInt16">
            <summary>
            将数值类型转换成Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToInt32">
            <summary>
            将数值类型转换成Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToInt64">
            <summary>
            将数值类型转换成Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToFloat">
            <summary>
            将数值类型转换成float
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ToString">
            <summary>
            将数值类型转换成字符串形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.RefreshChineseNumberVisibility">
            <summary>
            刷新中文大写显示的可见性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ShowChineseNumerLabelForSpeical">
            <summary>
            显示中文大写（特殊的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ShowChineseNumerLabel">
            <summary>
            显示中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HideChineseNumerLabel">
            <summary>
            隐藏中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ShowChineseNumerLabelEx">
            <summary>
            显示中文大写（一般的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.HideChineseNumerLabelEx">
            <summary>
            隐藏中文大写（一般的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.AdjustHeight">
            <summary>
            矫正控件的高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.hsNumericEditor1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.hsNumericEditor1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.lblUnit_TextChanged(System.Object,System.EventArgs)">
            <summary>
            单位文本变化事件，通过它自动变化单位的宽度大小
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditorBak.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditorBak.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <!-- 对于成员“P:HSUCF.Controls.hsLabelNumericEditorBak.NumericEditorForeColor”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.NumericEditorBackColor">
            <summary>
            NumericEditor的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.DisabledNumericEditorBackColor">
            <summary>
            NumericEditor不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.DisabledNumericEditorForeColor">
            <summary>
            NumericEditor不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.NumericEditorFont">
            <summary>
            NumericEditor的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.IsAssociateUnitAndChineseNumber">
            <summary>
            是否自动关联单位和中文大写
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.RequiredForeColor">
            <summary>
            获取或设置提示项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.NumericEditorUnit">
            <summary>
            NumericEditor的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Value">
            <summary>
            NumericEditor的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.MaxAllow">
            <summary>
            是否允许到达最大值,默认值是false
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.MinAllow">
            <summary>
            是否允许到达最小值,默认值是true
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Maximum">
            <summary>
            最大值，默认值是79228162514264337593543950335。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Minimum">
            <summary>
            最小值，默认值是0。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.DecimalPlaces">
            <summary>
            获取或设置要显示的十进制小数位数,默认值为 0,只有在数值范围设定为的Float,PFloat,NFloat,Decimal,PDecimal,Decimal,Any时候才能设置小数位数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.DataRangeType">
            <summary>
            数值范围类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.ShowChineseNumberInGotFocus">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.ShowChineseNumber">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.ChineseNumberAlign">
            <summary>
            中文样式的金额的显示位置,默认是控件底部下
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.ChineseNumberOffset">
            <summary>
            大写金额提示信息显示的位置偏移
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.ThousandsSeparator">
            <summary>
             获取或设置一个值，该值指示是否显示千位分隔符。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditorBak.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditorBak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelNumericEditor">
            <summary>
            带标签的数值编辑组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.BOTTOM_CHINESE_NUMBER_SPACE">
            <summary>
            底部中文显示的是时候默认的分隔高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToInt16">
            <summary>
            将数值类型转换成Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToInt32">
            <summary>
            将数值类型转换成Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToInt64">
            <summary>
            将数值类型转换成Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToFloat">
            <summary>
            将数值类型转换成float
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ToString">
            <summary>
            将数值类型转换成字符串形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.RefreshChineseNumberVisibility">
            <summary>
            刷新中文大写显示的可见性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ShowChineseNumerLabel">
            <summary>
            显示中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.HideChineseNumerLabel">
            <summary>
            隐藏中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.AdjustHeight">
            <summary>
            矫正控件的高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.hsNumericEditor1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.hsNumericEditor1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericEditor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericEditor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditor.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditor.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <!-- 对于成员“P:HSUCF.Controls.hsLabelNumericEditor.NumericEditorForeColor”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.NumericEditorBackColor">
            <summary>
            NumericEditor的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.DisabledNumericEditorBackColor">
            <summary>
            NumericEditor不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.DisabledNumericEditorForeColor">
            <summary>
            NumericEditor不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.NumericEditorFont">
            <summary>
            NumericEditor的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.IsAssociateUnitAndChineseNumber">
            <summary>
            是否自动关联单位和中文大写
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.RequiredForeColor">
            <summary>
            获取或设置提示项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.NumericEditorUnit">
            <summary>
            NumericEditor的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Value">
            <summary>
            NumericEditor的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.MaxAllow">
            <summary>
            是否允许到达最大值,默认值是false
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.MinAllow">
            <summary>
            是否允许到达最小值,默认值是true
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Maximum">
            <summary>
            最大值，默认值是79228162514264337593543950335。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Minimum">
            <summary>
            最小值，默认值是0。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.DecimalPlaces">
            <summary>
            获取或设置要显示的十进制小数位数,默认值为 0,只有在数值范围设定为的Float,PFloat,NFloat,Decimal,PDecimal,Any时候才能设置小数位数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.DataRangeType">
            <summary>
            数值范围类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.ShowChineseNumberInGotFocus">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.ShowChineseNumber">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.ChineseNumberAlign">
            <summary>
            中文样式的金额的显示位置,默认是控件底部下
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.ChineseNumberOffset">
            <summary>
            大写金额提示信息显示的位置偏移
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.ThousandsSeparator">
            <summary>
             获取或设置一个值，该值指示是否显示千位分隔符。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericEditor.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericEditor.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelNumericUpDown">
            <summary>
            带标签的数值组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDown.BOTTOM_CHINESE_NUMBER_SPACE">
            <summary>
            底部中文显示的是时候默认的分隔高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDown.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDown.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.SetRequiredVisible">
            <summary>
            设置必输项前面的红星是否显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToInt16">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToInt32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToInt64">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToFloat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.RefreshChineseNumberVisibility">
            <summary>
            刷新中文大写显示的可见性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ShowChineseNumerLabel">
            <summary>
            显示中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.HideChineseNumerLabel">
            <summary>
            隐藏中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.AdjustHeight">
            <summary>
            矫正控件的高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.hsNumericUpDown1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.hsNumericUpDown1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.hsNumericUpDown1_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDown.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDown.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDown.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ErrorMessage">
            <summary>
            为空时的错误提示信息
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.NumericUpDownForeColor">
            <summary>
            NumericUpDown的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.NumericUpDownBackColor">
            <summary>
            NumericUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.DisabledNumericUpDownBackColor">
            <summary>
            NumericUpDown不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.DisabledNumericUpDownForeColor">
            <summary>
            NumericUpDown不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.NumericUpDownFont">
            <summary>
            NumericUpDown的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.IsAssociateUnitAndChineseNumber">
            <summary>
            是否自动关联单位和中文大写
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Value">
            <summary>
            NumericUpDown的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.NumericUpDownUnit">
            <summary>
            NumericUpDown的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.MaxAllow">
            <summary>
            是否允许到达最大值,默认值是false
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.MinAllow">
            <summary>
            是否允许到达最小值,默认值是true
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Maximum">
            <summary>
            最大值，默认值是79228162514264337593543950335。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Minimum">
            <summary>
            最小值，默认值是0。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.DecimalPlaces">
            <summary>
            获取或设置要显示的十进制小数位数,默认值为 0,只有在数值范围设定为的Float,PFloat,NFloat,Decimal,PDecimal,Any时候才能设置小数位数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.DataRangeType">
            <summary>
            数值范围类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Increment">
            <summary>
            获取或设置单击向上或向下按钮时，数字显示框（也称作 up-down 控件）递增或递减的值。
             单击数字显示框上的向上或向下按钮时 System.Windows.Forms.NumericUpDown.Value 属性要递增或递减的值。默认值为1。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ShowChineseNumberInGotFocus">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ShowChineseNumber">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ChineseNumberAlign">
            <summary>
            中文样式的金额的显示位置,默认是控件底部下
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ChineseNumberOffset">
            <summary>
            大写金额提示信息显示的位置偏移
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.ThousandsSeparator">
            <summary>
             获取或设置一个值，该值指示在适当的时候数字显示框（也称作 up-down 控件）中是否显示千位分隔符。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.IsEmpty">
            <summary>
            指示输入框内是否为空
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.EnableEmpty">
            <summary>
            指示输入框是否允许空数字
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.AllowEmpty">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.Mode">
            <summary>
            NumbericUpDown控件工作模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDown.LeftRightKey">
            <summary>
            按下左右键相当于按了上下按钮
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.ValueChanged">
            <summary>
            当Value 属性更改后发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDown.BeforeValueChange">
            <summary>
            当Value 属性被设置前发生
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelTextBoxBak">
            <summary>
            带标签的普通文本输入组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.validatedText">
            <summary>
            已校验的文本，用于ESC键回退到之前的文本信息。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.hsTextBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.hsTextBox1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.CtrlV">
            <summary>
            处理 Ctrl+V
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.isSkipNextControl">
            <summary>
            获取或设置一个值，该值指示是否跳转到上或下一个控件，默认是启用跳转。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteMenu">
            <summary>
            自动完成菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteMultiColumns">
            <summary>
            是否启用多列显示菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteDisplayColumn">
            <summary>
            自动完成菜单的显示列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteKeyColumn">
            <summary>
            自动完成菜单的主键列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteImageIndex">
            <summary>
            自动完成菜单的图标列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.autoCompleteSetMaximumSize">
            <summary>
            用于存放缩放前的下拉框大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.MULTI_COLUMNS_SEPERATOR">
            <summary>
            自动完成多列显示模型的时候使用的显示列名之间的分隔符
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.enableAutoComplete">
            <summary>
            是否启用了自动提醒功能
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.ShowAutoCompleteMenu">
            <summary>
            显示自动下拉窗体
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.CloseAutoCompleteMenu">
            <summary>
            关闭自动完成下拉框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.lblUnit_TextChanged(System.Object,System.EventArgs)">
            <summary>
            单位文本变化事件，通过它自动变化单元的宽度大小
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBoxBak.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBoxBak.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBoxBak.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TextBoxBackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.DisabledTextBoxBackColor">
            <summary>
            TextBox不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.DisabledTextBoxForeColor">
            <summary>
            TextBox不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.ReqLogicFunc">
            <summary>
            必输项的判断逻辑，True表示必须输入，false不必须输入
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TagEx">
            <summary>
            Tag扩展值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.Value">
            <summary>
            TextBox的文本
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TextBoxUnit">
            <summary>
            TextBox的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.MinLength">
            <summary>
            最小字节长度
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.MaxLength">
            <summary>
            最大字节长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.SelectedText">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.SelectionLength">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本的长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.SelectionStart">
            <summary>
            获取或设置文本框中选定的文本起始点。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.RegularMode">
            <summary>
            文本数据正则校验模式，如校验文本为URL,Email,中国邮编，中国身份证等等
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.CustomRegExp">
            <summary>
            获取或设置正则表达式，只当校验模式为Custom时。无须首位加入^$,系统会默认加入。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.CustomErrorMessage">
            <summary>
            获取或设置正则校验错误时的提示信息，只当校验模式为Custom时
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.TextBoxBorderStyle">
            <summary>
             设置文本框的边框样式。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteMultiColumns">
            <summary>
            是否启用多列显示菜单
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.ImageList">
            <summary>
            自动完成菜单的图标库
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteCaptureFocus">
            <summary>
            自动完成菜单是否获得焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteClearText">
            <summary>
            自动完成菜单是否自动清空输入框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteAppearInterval">
            <summary>
            菜单显示的间隔（毫秒）
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteMinFragmentLength">
            <summary>
            自动完成菜单显示时的最小片段长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteItems">
            <summary>
            自动完成菜单简单数据列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteMaximumSize">
            <summary>
            自动完成菜单的列表框大小
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteSearchPattern">
            <summary>
            自动完成菜单的查询规则
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteDataSource">
            <summary>
            自动完成菜单数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteValue">
            <summary>
            自动完成菜单的主键值
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteSelectedItem">
            <summary>
            自动完成菜单选中项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteSelectedItemBackColor">
            <summary>
            自动完成菜单选中项背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBoxBak.AutoCompleteItemsBackColor">
            <summary>
            自动完成菜单下拉列表背景色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelTextBox">
            <summary>
            带标签的普通文本输入组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.SetRequiredVisible">
            <summary>
            设置必输项前面的红星是否显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.validatedText">
            <summary>
            已校验的文本，用于ESC键回退到之前的文本信息。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.hsTextBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.hsTextBox1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.CtrlV">
            <summary>
            处理 Ctrl+V
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.isSkipNextControl">
            <summary>
            获取或设置一个值，该值指示是否跳转到上或下一个控件，默认是启用跳转。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteMenu">
            <summary>
            自动完成菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteMultiColumns">
            <summary>
            是否启用多列显示菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteDisplayColumn">
            <summary>
            自动完成菜单的显示列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteKeyColumn">
            <summary>
            自动完成菜单的主键列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteImageIndex">
            <summary>
            自动完成菜单的图标列
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.autoCompleteSetMaximumSize">
            <summary>
            用于存放缩放前的下拉框大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.MULTI_COLUMNS_SEPERATOR">
            <summary>
            自动完成多列显示模型的时候使用的显示列名之间的分隔符
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.enableAutoComplete">
            <summary>
            是否启用了自动提醒功能
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.ShowAutoCompleteMenu">
            <summary>
            显示自动下拉窗体
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.CloseAutoCompleteMenu">
            <summary>
            关闭自动完成下拉框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTextBox.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TextBoxBackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.DisabledTextBoxBackColor">
            <summary>
            TextBox不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.DisabledTextBoxForeColor">
            <summary>
            TextBox不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.ReqLogicFunc">
            <summary>
            必输项的判断逻辑，True表示必须输入，false不必须输入
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.Value">
            <summary>
            TextBox的文本
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TextBoxUnit">
            <summary>
            TextBox的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.MinLength">
            <summary>
            最小字节长度
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.MaxLength">
            <summary>
            最大字节长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.SelectedText">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.SelectionLength">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本的长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.SelectionStart">
            <summary>
            获取或设置文本框中选定的文本起始点。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.RegularMode">
            <summary>
            文本数据正则校验模式，如校验文本为URL,Email,中国邮编，中国身份证等等
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.CustomRegExp">
            <summary>
            获取或设置正则表达式，只当校验模式为Custom时。无须首位加入^$,系统会默认加入。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.CustomErrorMessage">
            <summary>
            获取或设置正则校验错误时的提示信息，只当校验模式为Custom时
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.TextBoxBorderStyle">
            <summary>
             设置文本框的边框样式。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.OpenMenum">
            <summary>
            右键菜单是否打开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteMultiColumns">
            <summary>
            是否启用多列显示菜单
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.ImageList">
            <summary>
            自动完成菜单的图标库
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteCaptureFocus">
            <summary>
            自动完成菜单是否获得焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteClearText">
            <summary>
            自动完成菜单是否自动清空输入框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteAppearInterval">
            <summary>
            菜单显示的间隔（毫秒）
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteMinFragmentLength">
            <summary>
            自动完成菜单显示时的最小片段长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteItems">
            <summary>
            自动完成菜单简单数据列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteMaximumSize">
            <summary>
            自动完成菜单的列表框大小
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteSearchPattern">
            <summary>
            自动完成菜单的查询规则
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteDataSource">
            <summary>
            自动完成菜单数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteValue">
            <summary>
            自动完成菜单的主键值
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteSelectedItem">
            <summary>
            自动完成菜单选中项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteSelectedItemBackColor">
            <summary>
            自动完成菜单选中项背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTextBox.AutoCompleteItemsBackColor">
            <summary>
            自动完成菜单下拉列表背景色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRadioButton">
            <summary>
            单选框的分部类
            </summary>
            <summary>
            扩展的大小可调的两个面板的组合面板容器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButton._mouseEnter">
            <summary>
            鼠标光标是否在控件内
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.hsRadioButton_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            光标离开控件触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.hsRadioButton_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            光标进入空间触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.SetAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.GetTextLocation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.GetBackBrush">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.GetCurrentIcon">
            <summary>
            获取当前单选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.GetCurrentIconLocation">
            <summary>
            获取当前单选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButton.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRadioButton.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButton.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.SelectedBackColor">
            <summary>
            选中时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.AutoSize">
            <summary>
            是否自动大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.FlatStyle">
            <summary>
            控件样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.PaintTransparentBackground">
            <summary>
            PaintTransparentBackground方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButton.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.IsSkipByDown">
            <summary>
            按下向下箭头跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButton.IsSkipByUp">
            <summary>
            按下向上箭头跳转焦点到上一个按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRadioButtonList">
            <summary>
            单选框列表的分部类
            </summary>
            <summary>
            每项显示单选的列表框控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonList.CONST_ITEMHEIGHT">
            <summary>
            项高度常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonList._flatPainter">
            <summary>
            扁平化边框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.GetCurrBorderColor">
            <summary>
            获取当前边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.GetCurrBackColor">
            <summary>
            获取当前背景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.WndProcEx(System.Windows.Forms.Message@)">
            <summary>
            处理控件消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.GetIco(System.Boolean,System.Boolean)">
            <summary>
            获取复选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.GetIcoLocation(System.Drawing.Rectangle)">
            <summary>
            获取复选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.GetForeColor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.DrawItemEx(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.OnFontChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.hsRadioButtonList_EnabledChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonList.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonList.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonList.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonList.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsRadioButtonList.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsRadioButtonList.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.ItemForeColors">
            <summary>
            项文字颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.ItemHeight">
            <summary>
            项高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.Fillet">
            <summary>
            启用圆角
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.DrawMode">
            <summary>
            绘制模式，不允许修改该属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.Appearance">
            <summary>
            文本框对应的外观对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonList.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.SelectionMode">
            <summary>
            选定行为，默认是单选。不允许修改该属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonList.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RadioButtonListAppearance">
            <summary>
            单选框列表外观对象
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.SelectedBackColorNormal">
            <summary>
            Gets or sets the selected item background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BackColorNormal">
            <summary>
            Gets or sets the background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BorderColorNormal">
            <summary>
            Gets or sets the border color（Normal）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.ForeColorNormal">
            <summary>
            Gets or sets the foreground color（Normal）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BackColorFoucsed">
            <summary>
            Gets or sets the background color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BorderColorFoucsed">
            <summary>
            Gets or sets the border color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.ForeColorFoucsed">
            <summary>
            Gets or sets the foreground color（Foucsed）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BackColorDisabled">
            <summary>
            Gets or sets the background color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.BorderColorDisabled">
            <summary>
            Gets or sets the border color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearance.ForeColorDisabled">
            <summary>
            Gets or sets the foreground color（Disabled）.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRichTextBox">
            <summary>
            富文本框的分部类
            </summary>
            <summary>
            富文本控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBox._flatPainter">
            <summary>
            扁平化边框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息，拦截绘制事件
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.OnLostFocus(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBox.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.Radius">
            <summary>
            圆角半径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.Appearance">
            <summary>
            文本框对应的外观对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.DisabledBackColor">
            <summary>
            RichTextBox不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.DisabledForeColor">
            <summary>
            RichTextBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRichTextBox.SCROLLINFO">
            <summary>
            滚动条信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RichTextBoxAppearance">
            <summary>
            单选框列表外观对象
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BackColorNormal">
            <summary>
            Gets or sets the background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BorderColorNormal">
            <summary>
            Gets or sets the border color（Normal）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.ForeColorNormal">
            <summary>
            Gets or sets the foreground color（Normal）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BackColorFoucsed">
            <summary>
            Gets or sets the background color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BorderColorFoucsed">
            <summary>
            Gets or sets the border color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.ForeColorFoucsed">
            <summary>
            Gets or sets the foreground color（Foucsed）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BackColorDisabled">
            <summary>
            Gets or sets the background color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.BorderColorDisabled">
            <summary>
            Gets or sets the border color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearance.ForeColorDisabled">
            <summary>
            Gets or sets the foreground color（Disabled）.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTabControlEx">
            <summary>
            扩展的选项卡控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.TabMoveMark">
            <summary>
            选项卡平移尺度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.DrawTabPagesFlatMiddlelSelect(System.Drawing.Graphics)">
            <summary>
            居中样式
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.GetPoints">
            <summary>
            获取选中标签的下线起点和终点
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsTabControlEx.index">
            <summary>
            设置鼠标进入关闭区域次数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.GetCloseRect(System.Int32)">
            <summary>
            得到包含关闭图片的画圆形的矩形局域
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.GetCloseEllipseRect(System.Int32)">
            <summary>
            得到关闭图标的矩形区域
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.GetNewTabPageRect">
            <summary>
            得到新增标签页图标的矩形区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.DrawNewTabPageIcon(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            绘制新增标签页图标
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.DrawtabCloseIcon(System.Drawing.Graphics,System.Int32,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="index"></param>
            <param name="closeColor"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTabControlEx.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsTabControlEx.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTabControlEx.TabClosing">
            <summary>
            Tab页正在关闭事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTabControlEx.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTabControlEx.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.TabControlExAppearance._selectedTitleFont">
            <summary>
            标题字体
            </summary>
        </member>
        <member name="F:HSUCF.Controls.TabControlExAppearance._titleFont">
            <summary>
            标题字体
            </summary>
        </member>
        <member name="E:HSUCF.Controls.TabControlExAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.TabControlExFlatStyle">
            <summary>
            控件扁平化样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateUtlity">
            <summary>
            即时校验和循环校验的错误提示显示逻辑
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSValidateUtlity.BindFormMoveEvent(System.Windows.Forms.Control)">
            <summary>
            绑定Form的Move事件,并且得到窗体引用
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSValidateUtlity.ControlEvent_Move(System.Object,System.EventArgs)">
            <summary>
            主窗体移动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.HSValidateUtlity.RemoveToolTip">
            <summary>
            移除提示信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSValidateUtlity.ShowToolTip(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="control"></param>
            <param name="toolTip"></param>
            <param name="messageTitle"></param>
            <param name="err"></param>
        </member>
        <member name="T:HSUCF.Controls.hsVerificationCodeTextBox">
            <summary>
            进度条的分部类
            </summary>
            <summary>
            验证码输入组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVerificationCodeTextBox.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.pbVerifyCode_Click(System.Object,System.EventArgs)">
            <summary>
            单击图片事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.GetLimitedRandomString">
            <summary>
            得到限制个数的随机字符串 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.BindImageForRandom">
            <summary>
            随机生成验证码图片绑定到图片控件上
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.GetLimitedSpecString">
            <summary>
            得到指定限制个数的指定字符串 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.BindImageForSpecString">
            <summary>
            通过指定字符串生成验证码图片绑定到图片控件上
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.BuildImageByVerifyCode(System.String)">
            <summary>
            根据验证码生成图片
            </summary>
            <param name="verifyCode">验证码</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.BindImageByDiffMode">
            <summary>
            根据不同模式（随机，指定字符串）绑定新的图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVerificationCodeTextBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsVerificationCodeTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVerificationCodeTextBox.isSkipNextControl">
            <summary>
            获取或设置一个值，该值指示是否跳转到上或下一个控件，默认是启用跳转。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVerificationCodeTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsVerificationCodeTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.DisplayCount">
            <summary>
            验证码字符的个数,默认为4个字符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.IsRandom">
            <summary>
            验证码为随机生成或指定字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.SpecString">
            <summary>
            当不是随机生成的验证码的时候用来生成验证码的指定字符串
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.VerificationCodeClick">
            <summary>
            当验证码图片被单击时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.TextBoxBackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.Value">
            <summary>
            TextBox的文本
            </summary> 
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsVerificationCodeTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericUpDownFlatState">
            <summary>
            文本框状态
            </summary>
        </member>
        <member name="E:HSUCF.Controls.NumericUpDownAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsProgressBar">
            <summary>
            进度条的分部类
            </summary>
            <summary>
            进度栏控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsProgressBar._speedTextSize">
            <summary>
            进度文本最大尺寸
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.GetBarRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.GetSpeedRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.GetRegion">
            <summary>
            获取控件轮廊
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.GetSpeedPoint">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.ClientRectangleInternal">
            <summary>
            获取内部客户区域大小和位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.SystemClientRectangleInternal">
            <summary>
            获取客户区域大小和位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.OnFontChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsProgressBar.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsProgressBar.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsProgressBar.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsProgressBar.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.FontColor">
            <summary>
            字体颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.ShadowColor">
            <summary>
            进度条阴影颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.Speed">
            <summary>
            进度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.ShowSpeed">
            <summary>
            是否显示进度值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.BackColor">
            <summary>
            进度背景颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.ForeColor">
            <summary>
            进度条颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.ReflectionWindow">
            <summary>
            ReflectionWindow字段值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.ReflectionEventPaint">
            <summary>
            ReflectionEventPaint字段值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.PaintTransparentBackground">
            <summary>
            PaintTransparentBackground方法信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsProgressBar.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRadioButtonBak">
            <summary>
            单选框的分部类
            </summary>
            <summary>
            扩展的大小可调的两个面板的组合面板容器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonBak._mouseEnter">
            <summary>
            鼠标光标是否在控件内
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.hsRadioButton_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            光标离开控件触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.hsRadioButton_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            光标进入空间触发方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.SetAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.GetTextLocation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.GetBackBrush">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.GetCurrentIcon">
            <summary>
            获取当前单选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.GetCurrentIconLocation">
            <summary>
            获取当前单选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonBak.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.SelectedBackColor">
            <summary>
            选中时背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.AutoSize">
            <summary>
            是否自动大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.FlatStyle">
            <summary>
            控件样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.IsSkipByDown">
            <summary>
            按下向下箭头跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.IsSkipByEnter">
            <summary>
            按下Enter跳转焦点到下一个按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonBak.IsSkipByUp">
            <summary>
            按下向上箭头跳转焦点到上一个按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRadioButtonListBak">
            <summary>
            单选框列表的分部类
            </summary>
            <summary>
            每项显示单选的列表框控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonListBak.CONST_ITEMHEIGHT">
            <summary>
            项高度常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonListBak._flatPainter">
            <summary>
            扁平化边框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.WndProcEx(System.Windows.Forms.Message@)">
            <summary>
            处理控件消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.GetIco(System.Boolean,System.Boolean)">
            <summary>
            获取复选图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.GetIcoLocation(System.Drawing.Rectangle)">
            <summary>
            获取复选图标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.GetForeColor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.DrawItemEx(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.OnFontChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.hsRadioButtonList_EnabledChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonListBak.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonListBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRadioButtonListBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRadioButtonListBak.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsRadioButtonListBak.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.ItemForeColors">
            <summary>
            项文字颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.SelectedIndex">
            <summary>
            获取或设置选择项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.ItemHeight">
            <summary>
            项高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.Fillet">
            <summary>
            启用圆角
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.DrawMode">
            <summary>
            绘制模式，不允许修改该属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.Appearance">
            <summary>
            文本框对应的外观对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRadioButtonListBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.SelectionMode">
            <summary>
            选定行为，默认是单选。不允许修改该属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRadioButtonListBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RadioButtonListAppearanceBak">
            <summary>
            单选框列表外观对象
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.SelectedBackColorNormal">
            <summary>
            Gets or sets the selected item background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BackColorNormal">
            <summary>
            Gets or sets the background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BorderColorNormal">
            <summary>
            Gets or sets the border color（Normal）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.ForeColorNormal">
            <summary>
            Gets or sets the foreground color（Normal）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BackColorFoucsed">
            <summary>
            Gets or sets the background color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BorderColorFoucsed">
            <summary>
            Gets or sets the border color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.ForeColorFoucsed">
            <summary>
            Gets or sets the foreground color（Foucsed）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BackColorDisabled">
            <summary>
            Gets or sets the background color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.BorderColorDisabled">
            <summary>
            Gets or sets the border color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RadioButtonListAppearanceBak.ForeColorDisabled">
            <summary>
            Gets or sets the foreground color（Disabled）.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRichTextBoxBak">
            <summary>
            富文本框的分部类
            </summary>
            <summary>
            富文本控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBoxBak._flatPainter">
            <summary>
            扁平化边框
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息，拦截绘制事件
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.OnGotFocus(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.OnLostFocus(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.OnEnabledChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBoxBak.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsRichTextBoxBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsRichTextBoxBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.Radius">
            <summary>
            圆角半径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.Appearance">
            <summary>
            文本框对应的外观对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.DisabledBackColor">
            <summary>
            RichTextBox不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.DisabledForeColor">
            <summary>
            RichTextBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsRichTextBoxBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsRichTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsRichTextBoxBak.SCROLLINFO">
            <summary>
            滚动条信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RichTextBoxAppearanceBak">
            <summary>
            单选框列表外观对象
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BackColorNormal">
            <summary>
            Gets or sets the background color（Normal）.
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BorderColorNormal">
            <summary>
            Gets or sets the border color（Normal）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.ForeColorNormal">
            <summary>
            Gets or sets the foreground color（Normal）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BackColorFoucsed">
            <summary>
            Gets or sets the background color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BorderColorFoucsed">
            <summary>
            Gets or sets the border color（Foucsed）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.ForeColorFoucsed">
            <summary>
            Gets or sets the foreground color（Foucsed）.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BackColorDisabled">
            <summary>
            Gets or sets the background color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.BorderColorDisabled">
            <summary>
            Gets or sets the border color（Disabled）.
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.RichTextBoxAppearanceBak.ForeColorDisabled">
            <summary>
            Gets or sets the foreground color（Disabled）.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGroupBoxbak">
            <summary>
            复选框的分部类
            </summary>
            <summary>
            可选标题的容器面板，用于包含其他控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBoxbak.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBoxbak.OnFontChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBoxbak.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBoxbak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBoxbak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.TitleFont">
            <summary>
            标题字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.TitleColor">
            <summary>
            标题颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.TitleColorDisable">
            <summary>
            禁用标题颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.TitleVerticalLineColor">
            <summary>
            标题竖线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.TitleHorizontalLineColor">
            <summary>
            标题横线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.Padding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBoxbak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsScrollingText">
            <summary>
            跑马灯的分部类
            </summary>
            <summary>
            滚动文本控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.InitFlatStyle">
            <summary>
            用于在构造函数中调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.SetState(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <param name="flag"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.SetState2(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <param name="flag"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.GetRegion">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.NcPaint">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.Tick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.ClearText">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.RePaint(System.Drawing.Rectangle)">
            <summary>
            擦除背景
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.ReDrawAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.CalcReDrawRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.CalcScrollTextSize">
            <summary>
            获取滚动文本绘制区域大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.CalcTextPosition">
            <summary>
            
            </summary>
            <param name="stringSize"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.AddScrollText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingText.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsScrollingText.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsScrollingText.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsScrollingText.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.PointColor">
            <summary>
            标题点颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.Opacity">
            <summary>
            获取或设置跑马灯不透明百分比（0~100）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ShowBorder">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ScrollText">
            <summary>
            滑动文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.TextScrollSpeed">
            <summary>
            滚动时间间隔，单位毫秒，默认40，即每秒钟25帧
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.TextScrollDistance">
            <summary>
            滚动速度，每帧移动距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.StopScrollOnMouseOver">
            <summary>
            Determines if the text will stop scrolling if the user's mouse moves over the text
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ScrollDirection">
            <summary>
            What direction the text will scroll: Left to Right, Right to Left, or Bouncing
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.VerticleTextPosition">
            <summary>
            The verticle alignment of the text
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ScrollTextCount">
            <summary>
            滚动文本条数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.ScrollTextItems">
            <summary>
            滚动文本列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingText.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FlatStyleHelper">
            <summary>
            扁平样式帮助类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleHelper.GetEllipsePath(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="diameter"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleHelper.GetFlatPath(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="diameter"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatStyleHelper.DrawBorder(System.Drawing.Rectangle,HSUCF.Controls.RoundStyle,System.Int32,System.Int32,System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右上右下圆角
            </summary>
        </member>
        <member name="E:HSUCF.Controls.TrackBarAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsListBox">
            <summary>
            列表框控件
            </summary>
            <summary>
            列表框控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.GetCurrBorderColor">
            <summary>
            获取当前边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.GetCurrBackColor">
            <summary>
            获取当前背景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsListBox.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsListBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsListBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsListBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsListBox.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsListBox.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.ForeColor">
            <summary>
            前景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.SelectedBorderColor">
            <summary>
            选中项边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.SelectedBackColor">
            <summary>
            选中项背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.ItemHeight">
            <summary>
            项高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.DrawMode">
            <summary>
            绘制模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.Radius">
            <summary>
            圆角半径
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsListBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsListBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTreeView">
            <summary>
            列表框控件
            </summary>
            <summary>
            标准树控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.GetCurrBorderColor">
            <summary>
            获取当前边框颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.GetCurrBackColor">
            <summary>
            获取当前背景颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView._flatPainter_ScrollBarCustomSlided(System.Object,HSUCF.Controls.ScrollBarSlidedEventArgs)">
            <summary>
            控件自定义处理滚动条滑动
            树控件的垂直滚动条比较特殊，在滑块滚动时，WM_VSCROLL消息不会引发内容滚动（查资料显示在XP下不会有这个问题，在Win7和Vista下会有这个问题）
            打印消息队列，经过分析，发现使用WM_SYSCOMMAND消息通知控件，当前送鼠标点击在垂直滚动条上，传入当前鼠标位置，可以解决内容滚动的问题
            水平滚动条没有这个问题
            </summary>
            <param name="si"></param>
            <param name="fn"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTreeView.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.Scrollable">
            <summary>
            是否显示滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.FlatPadding">
            <summary>
            内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.Radius">
            <summary>
            圆角半径
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBase.ShowHideAnimated(System.Windows.Forms.Form)">
            <summary>
            
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBase.OnLoad(System.EventArgs)">
            <summary>
            重载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.SetTaskBarMenu">
            <summary>
            任务栏右键菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制窗体的边线
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_Resize(System.Object,System.EventArgs)">
            <summary>
            改变窗体大小事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.FormBase_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.SetMouse(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblClose_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制关闭按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblMax_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制最大化按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblMin_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制最小化按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblHome_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            主页
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblLast_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            上一步
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblNext_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            下一步
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.GetGraphicsPath(System.Int32,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="cornerRadius"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBase.GetGraphicsXYPath(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBase.button_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.button_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            鼠标移出按钮时的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblClose_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            关闭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblMax_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            最大化
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.SetMaxOrNormal">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBase.lblMin_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            最小化
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.menu_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.menu_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            消息处理
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.GetOpertatingSystemName">
            <summary>
            操作系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBase.OnDeactivate(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.AddSystemMenu(System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
        </member>
        <member name="F:HSUCF.Controls.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FormBase.MaximumSize">
            <summary>
            窗口最大化
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FormBase.MouseAction">
            <summary>
            鼠标
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FormBase.MState">
            <summary>
            鼠标位置
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FormBase.WS">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.SetTaskBarMenu">
            <summary>
            任务栏右键菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制窗体的边线
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_Resize(System.Object,System.EventArgs)">
            <summary>
            改变窗体大小事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.FormBase_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.SetMouse(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.GetOpertatingSystemName">
            <summary>
            操作系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.FormBaseEx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.FormBaseEx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.FormBaseEx.MaximumSize">
            <summary>
            窗口最大化
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FormBaseEx.MouseAction">
            <summary>
            鼠标
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FormBaseEx.MState">
            <summary>
            鼠标位置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBases.topMenuStrip_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标进入标题栏
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBases.topMenuStrip_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            双击标题栏
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBases.SetMaxOrNormal">
            <summary>
            设置最大化和还原
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBases.FormBase_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制窗体的边线
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBases.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FormBases.SetFormState(System.Drawing.Rectangle)">
            <summary>
            设置窗体位置最大化显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FormBases.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormBases.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.FormBases.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FormFloating.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FormFloating.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.FormFloating.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PopForm">
            <summary>
            弹盘基类
            注意：
            1. 弹盘显示时间到并不一定释放资源
            2. 窗体的MouseEnter和MouseLeave事件将停止/启动计时器
            继承该窗体以后，子窗体新增控件需要自行控制计时器的启停
            3. 需使用PopShow方法替代Show方法显示窗体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Skin.SkinForm.IsFixedMutiScreenMaxBug">
            <summary>
            请在OnShown之前调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PopForm.#ctor(System.Int32,System.Boolean)">
            <summary>
            初始化 弹盘 窗体对象
            </summary>
            <param name="showTime">弹盘显示时间</param>
            <param name="canDrag">弹盘可拖动</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.#ctor(System.Int32)">
            <summary>
            初始化 弹盘 窗体对象
            默认弹盘可拖拽
            </summary>
            <param name="showTime">弹盘显示时间</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.#ctor(System.Boolean)">
            <summary>
            初始化 弹盘 窗体对象
            默认显示时间为5秒
            </summary>
            <param name="canDrag">弹盘可拖动</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.#ctor">
            <summary>
            初始化 弹盘 窗体对象
            默认显示时间为5秒，弹盘可拖拽
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PopForm.PopShow(System.UInt32,System.UInt32,System.Boolean,System.Windows.Forms.IWin32Window)">
            <summary>
            显示窗体，将启动计时器
            注意：请使用该方法替代Show方法
            </summary>
            <param name="negX">偏移桌面右下角的横坐标值</param>
            <param name="negY">偏移桌面右下角的纵坐标值</param>
            <param name="modal">是否为模态显示，默认false</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.PopShow(System.UInt32)">
            <summary>
            显示窗体，将启动计时器
            偏移桌面右下角的纵坐标值默认为0
            注意：请使用该方法替代Show方法
            </summary>
            <param name="negX">偏移桌面右下角的横坐标值</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.PopShow">
            <summary>
            显示窗体，将启动计时器
            偏移桌面右下角的横坐标值默认为23，偏移桌面右下角的纵坐标值默认为0
            注意：请使用该方法替代Show方法
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PopForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            屏蔽窗体鼠标移动消息
            屏蔽鼠标移动弹盘事件
            </summary>
            <param name="m">窗体消息</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.OnVisibleChanged(System.EventArgs)">
            弹盘可见属性变更时发生
            可见时弹出窗体，不可见时淡出窗体
        </member>
        <member name="F:HSUCF.Controls.PopForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PopForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.PopForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PopForm.Timer">
            <summary>
            弹盘显示时间计时器
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PopForm.CanDrag">
            <summary>
            弹盘是否可拖动
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PopForm.AutoDispose">
            <summary>
            自动释放弹盘
            标记弹盘显示时间到时是否释放弹盘
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PopForm.PopFormVFX">
            <summary>
            弹盘窗体效果
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_HOR_POSITIVE">
            <summary>
            自左向右显示窗口，该标志可以在滚动动画和滑动动画中使用。
            使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_HOR_NEGATIVE">
            <summary>
            自右向左显示窗口，该标志可以在滚动动画和滑动动画中使用。
            使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_VER_POSITIVE">
            <summary>
            自顶向下显示窗口，该标志可以在滚动动画和滑动动画中使用。
            使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_VER_NEGATIVE">
            <summary>
            自下向上显示窗口，该标志可以在滚动动画和滑动动画中使用。
            使用AW_CENTER标志时忽略该标志该标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_CENTER">
            <summary>
            若使用了AW_HIDE标志，则使窗口向内重叠；否则向外扩展
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_HIDE">
            <summary>
            隐藏窗口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_ACTIVE">
            <summary>
            激活窗口，在使用了AW_HIDE标志后不要使用这个标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_SLIDE">
            <summary>
            使用滑动类型动画效果，默认为滚动动画类型
            当使用AW_CENTER标志时，这个标志就被忽略
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PopForm.PopFormVFX.AW_BLEND">
            <summary>
            使用淡入淡出效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridLayoutColumnInfo">
            <summary>
            列布局信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutColumnInfo.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutColumnInfo.Index">
            <summary>
            列顺序索引
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutColumnInfo.Width">
            <summary>
            列宽
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutColumnInfo.Visible">
            <summary>
            是否显示列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridLayoutInfo">
            <summary>
            Grid布局信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutInfo.GetSaveLayoutInfo">
            <summary>
            获取需要保存的布局信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutInfo.Views">
            <summary>
            表格集合 
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridLayoutManage">
            <summary>
            列布局管理器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.#ctor">
            <summary>
            私有的构造方法
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.#cctor">
            <summary>
            静态构造方法
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.LoadFrameLayoutInfo">
            <summary>
            加载框架Grid布局信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.LoadUserLayoutInfo">
            <summary>
            加载用户Grid布局信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.SaveLayoutInfo">
            <summary>
            保存布局信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.GetTableLayout(System.String,System.Type)">
            <summary>
            获取表格布局信息
            </summary>
            <param name="viewName">视图名称</param>
            <param name="dataSourceEntityType">数据源实体类型</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutManage.GetTableLayout(System.String,System.String)">
            <summary>
            获取表格布局信息
            </summary>
            <param name="viewName">视图名称</param>
            <param name="tableName">数据源DataTable的TableName</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.FrameFileDir">
            <summary>
            框架布局文件目录
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.UserFileDir">
            <summary>
            用户布局文件目录
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.FrameLayoutInfo">
            <summary>
            框架布局信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.UserLayoutInfo">
            <summary>
            用户布局信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.FrameLayoutInfoFileName">
            <summary>
            框架布局信息保存文件名
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutManage.UserLayoutInfoFileName">
            <summary>
            用户布局信息保存文件名
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridLayoutTableInfo">
            <summary>
            表格布局信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GridLayoutTableInfo.GetColumn(System.String)">
            <summary>
            获取列
            </summary>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutTableInfo.IsChanged">
            <summary>
            是否发生变化
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutTableInfo.Name">
            <summary>
            表格名称，一般取数据源实体类型全称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutTableInfo.Columns">
            <summary>
            列集合 
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridLayoutViewInfo">
            <summary>
            表格视图布局信息
            一个View可以绑定不同类型的数据源，不同数据源展示的列不一样
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutViewInfo.Name">
            <summary>
            视图名称，命名格式：菜单名_表格名
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GridLayoutViewInfo.Tables">
            <summary>
            表格集合 
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsColumnAppearanceAttribute">
            <summary>
            GridColumn外观特性基类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsColumnAppearanceAttribute.Init(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            初始化
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:HSUCF.Controls.hsColumnAppearanceAttribute.EqualsColumn(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            比较特性所属的列与传入的列是否相等
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsColumnAppearanceAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsColumnAppearanceAttribute.UnSetColumn">
            <summary>
            取消列设置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsColumnAppearanceAttribute.PropertyInfo">
            <summary>
            特性描述的属性
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsColumnAppearanceAttribute.Column">
            <summary>
            特性描述的列
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsColumnAppearanceAttribute.Level">
            <summary>
            特性级别，级别越高，越后设置
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsColumnAppearanceAttribute.AttributeLevel">
            <summary>
            级别，级别越高，优先级越高
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellTextOptionsAttribute">
            <summary>
            GridColumn列单元格文本样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellTextOptionsAttribute.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.HKeyPrefix,DevExpress.Utils.Trimming)">
            <summary>
            hsGridControl列单元格文本设置
            </summary>
            <param name="hAlignment">水平位置</param>
            <param name="vAlignment">垂直位置</param>
            <param name="wordWrap">换行</param>
            <param name="hotkeyPrefix">热键前缀</param>
            <param name="trimming">修剪</param>
        </member>
        <member name="M:HSUCF.Controls.CellTextOptionsAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnHeaderTextOptionsAttribute">
            <summary>
            GridColumn列头文本样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderTextOptionsAttribute.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.HKeyPrefix,DevExpress.Utils.Trimming)">
            <summary>
            hsGridControl列头文本设置
            </summary>
            <param name="hAlignment">水平位置</param>
            <param name="vAlignment">垂直位置</param>
            <param name="wordWrap">换行</param>
            <param name="hotkeyPrefix">热键前缀</param>
            <param name="trimming">修剪</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderTextOptionsAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnFontAttribute">
            <summary>
            GridColumn列单元格文本样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnFontAttribute.#ctor(System.String)">
            <summary>
            hsGridControl列单元格字体设置
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:HSUCF.Controls.ColumnFontAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnHeaderFontAttribute">
            <summary>
            GridColumn列头文本样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderFontAttribute.#ctor(System.String)">
            <summary>
            hsGridControl列头字体设置
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderFontAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnColorAttribute">
            <summary>
            GridColumn列单元格颜色样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnColorAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            hsGridControl列单元格颜色设置
            </summary>
            <param name="borderColor">边框颜色</param>
            <param name="backColor">背景颜色</param>
            <param name="backColor2">渐变背景颜色的第二个颜色</param>
            <param name="foreColor">前景颜色</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnColorAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnSortedAttribute">
            <summary>
            GridColumn列排序
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnSortedAttribute.#ctor(System.Boolean)">
            <summary>
            hsGridControl列排序
            </summary>
            <param name="sorted">是否启用列排序</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnSortedAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnVisibleAttribute">
            <summary>
            GridColumn列单元格默认是否显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnVisibleAttribute.#ctor(System.Boolean)">
            <summary>
            hsGridControl列单元格默认是否显示
            </summary>
            <param name="visible">是否显示</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnVisibleAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnHeaderColorAttribute">
            <summary>
            GridColumn列头颜色样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderColorAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格颜色设置
            </summary>
            <param name="borderColor">边框颜色</param>
            <param name="backColor">背景颜色</param>
            <param name="backColor2">渐变背景颜色的第二个颜色</param>
            <param name="foreColor">前景颜色</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderColorAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnBackgroundGradientAttribute">
            <summary>
            GridColumn列单元格背景梯度模式样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnBackgroundGradientAttribute.#ctor(System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
            hsGridControl列单元格背景梯度设置
            </summary>
            <param name="gradientMode">背景梯度</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnBackgroundGradientAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnHeaderBackgroundGradientAttribute">
            <summary>
            GridColumn列头背景梯度模式样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderBackgroundGradientAttribute.#ctor(System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
            hsGridControl列头背景梯度设置
            </summary>
            <param name="gradientMode">背景梯度</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderBackgroundGradientAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnImageAttribute">
            <summary>
            GridColumn列单元格图标样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnImageAttribute.#ctor(System.String,System.String)">
            <summary>
            hsGridControl列单元格图标样式
            </summary>
            <param name="assemblyName">程序集名称</param>
            <param name="image">图标名称</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnImageAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnHeaderImageAttribute">
            <summary>
            GridColumn列头图标样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderImageAttribute.#ctor(System.String,System.String)">
            <summary>
            hsGridControl列头图标设置
            </summary>
            <param name="assemblyName">程序集名称</param>
            <param name="image">图标名称</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnHeaderImageAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnEditorAttribute">
            <summary>
            GridColumn列是否支持编辑
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnEditorAttribute.#ctor(System.Boolean)">
            <summary>
            GridColumn是否支持编辑
            </summary>
            <param name="enableEditor">是否支持编辑</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnEditorAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnProgressBarAttribute">
            <summary>
            GridColumn进度条样式展示列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnProgressBarAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            GridColumn进度条样式展示列
            </summary>
            <param name="minValue">最小值，默认0</param>
            <param name="maxValue">最大值，默认100</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnProgressBarAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnWidthAttribute">
            <summary>
            GridColumn列宽度设置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnWidthAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            GridColumn列宽度设置
            </summary>
            <param name="width">宽度</param>
            <param name="maxWidth">最大宽度，小于0，则不设置，默认-1</param>
            <param name="minWidth">最小宽度，小于0，则不设置，默认-1</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnWidthAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ColumnTextInputMaxLenghtAttribute">
            <summary>
            GridColumn列文本输入最大长度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnTextInputMaxLenghtAttribute.#ctor(System.Int32)">
            <summary>
            GridColumn列文本输入最大长度
            </summary>
            <param name="maxLenght">文本输入最大长度</param>
        </member>
        <member name="M:HSUCF.Controls.ColumnTextInputMaxLenghtAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ColumnTextInputMaxLenghtAttribute.Edit_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.ColumnTextInputMaxLenghtAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellNumberDisplayFormatAttribute">
            <summary>
            GridColumn单元格数字显示格式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellNumberDisplayFormatAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellNumberDisplayFormatAttribute.CustomColumnDisplayText(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellNumberDisplayFormatAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellMoneyDisplayStyleAttribute">
            <summary>
            GridColumn单元格资金显示格式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellMoneyDisplayStyleAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellMoneyDisplayStyleAttribute.CustomColumnDisplayText(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellMoneyDisplayStyleAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellDictionaryAttribute">
            <summary>
            GridColumn单元格字典设置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellDictionaryAttribute.#ctor(System.Int32,System.String[],System.String[])">
            <summary>
            hsGridControl单元格字典设置
            </summary>
            <param name="dictionaryNo">字典号</param>
            <param name="excludes">排除值，用于编辑时</param>
            <param name="includes">包含值，用于编辑时</param>
        </member>
        <member name="M:HSUCF.Controls.CellDictionaryAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellDictionaryAttribute.CustomColumnDisplayText(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellDictionaryAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellDisplayColorAttribute">
            <summary>
            GridColumn单元格根据条件显示颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellDisplayColorAttribute._propertyName">
            <summary>
            与之比较的属性名
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellDisplayColorAttribute._moreThanColor">
            <summary>
            大于比较值的颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellDisplayColorAttribute._lessThanColor">
            <summary>
            小于比较值的颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellDisplayColorAttribute._equalColor">
            <summary>
            等于比较值的颜色 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="propertyName">比较值的属性名</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.Decimal,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="compareValue">比较值</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.Double,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="compareValue">比较值</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.Single,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="compareValue">比较值</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="compareValue">比较值</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.#ctor(System.Int64,System.String,System.String,System.String)">
            <summary>
            hsGridControl单元格显示颜色
            </summary>
            <param name="compareValue">比较值</param>
            <param name="moreThanColor">大于比较值时的颜色</param>
            <param name="lessThanColor">小于比较值时的颜色</param>
            <param name="equalColor">等于比较值的颜色，默认显示小于比较值的颜色</param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.RowCellStyle(System.Object,DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellDisplayColorAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellNullValueAttribute">
            <summary>
            GridColumn单元格空值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellNullValueAttribute.#ctor(System.Object)">
            <summary>
            hsGridControl单元格空值
            </summary>
            <param name="nullValue">显示为空的值</param>
        </member>
        <member name="M:HSUCF.Controls.CellNullValueAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellNullValueAttribute.CustomColumnDisplayText(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellNullValueAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellTranslateAttribute">
            <summary>
            GridColumn单元格翻译
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellTranslateAttribute._providerCache">
            <summary>
            缓存生产接口缓存
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellTranslateAttribute._getRecordCache">
            <summary>
            GetRecord方法缓存
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CellTranslateAttribute._setParamTypes">
            <summary>
            是否已经设置GetRecord的入参类型
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.#ctor(System.Type,System.Type,System.String,System.String[],System.Type[])">
            <summary>
            hsGridControl字典设置
            </summary>
            <param name="entityType">当前属性所在类的类型</param>
            <param name="cacheProviderType">缓存接口类型，包含GetRecord方法，如IBaseTdictionary</param>
            <param name="displayFieldName">显示字段名称</param>
            <param name="paramNames">当前属性所在类型其他公有可读属性名，用于作为GetRecord的入参，必须按GetRecord方法的入参顺序填写</param>
            <param name="paramTypes">
            GetRecord方法入参类型，与paramNames一一对应，如果传null，则使用属性定义类型
            注意：类型个数必须与属性个数相同，否则视为null
            </param>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.#ctor(System.Type,System.String,System.String[],System.Type[])">
            <summary>
            hsGridControl字典设置
            </summary>
            <param name="cacheProviderType">缓存接口类型，包含GetPK方法，如IFundCacheTable</param>
            <param name="displayFieldName">显示字段名称</param>
            <param name="paramNames">当前属性所在类型其他公有可读属性名，用于作为GetPK的入参，必须按GetPK方法的入参顺序填写</param>
            <param name="paramTypes">
            GetRecord方法入参类型，与paramNames一一对应，如果传null，则使用属性定义类型
            注意：类型个数必须与属性个数相同，否则视为null
            </param>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.#ctor(System.Type,System.String,System.String,System.String[],System.Type[])">
            <summary>
            hsGridControl字典设置
            </summary>
            <param name="cacheProviderType">缓存接口类型，包含获取缓存单挑记录的方法，如IFundCacheTable</param>
            <param name="getRecordMethodName">根据索引获取缓存的方法名，如GetPK，Get1,Get2等，传入唯一索引字段值，返回缓存单条记录</param>
            <param name="displayFieldName">显示字段名称</param>
            <param name="paramNames">当前属性所在类型其他公有可读属性名，用于获取缓存单挑记录的方法的入参，必须按方法入参顺序填写</param>
            <param name="paramTypes">
            GetRecord方法入参类型，与paramNames一一对应，如果传null，则使用属性定义类型
            注意：类型个数必须与属性个数相同，否则视为null
            </param>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.SetColumn">
            <summary>
            设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.CustomColumnDisplayText(System.Object,DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.UnSetColumn">
            <summary>
            取消设置列
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.GetRecordMethodInfo(System.String[],System.Type[]@,System.Collections.Generic.List{System.Reflection.PropertyInfo}@)">
            <summary>
            获取GetRecord方法
            </summary>
            <param name="paramNames"></param>
            <param name="paramTypes"></param>
            <param name="paramInputs"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.GetProvider">
            <summary>
            缓存生产者接口类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.CellTranslateAttribute.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CellTranslateAttribute.MyBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CellTranslateAttribute.MyBinder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            类型转换
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsGridControl">
            <summary>
            hsGridControl
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridControl._dragSelectAnchorRowHandle">
            <summary>
            拖拽选择的锚点行
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridControl._doScrollTimer">
            <summary>
            执行内容滚动的计时器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridControl._lastRefreshDataTime">
            <summary>
            上次刷新数据的时间
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridControl._doDragSelectNow">
            <summary>
            是否正在拖拽选择
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.CreateDefaultView">
            <summary>
            创建一个默认的视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.RegisterAvailableViewsCore(DevExpress.XtraGrid.Registrator.InfoCollection)">
            <summary>
            注册视图
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.OnLoaded">
            <summary>
            加载完成
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.DragSelectMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            处理鼠标拖动事件，实现滑动选择行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.DragSelectRow(System.Drawing.Point)">
            <summary>
            拖拽选择行
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.DragSelectMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            处理鼠标弹起事件，实现滑动选择行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.DragSelectMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            处理鼠标按下事件，实现滑动选择行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.ScrollTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            滚动计时器
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.ScrollView(System.Drawing.Point)">
            <summary>
            滚动视图
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.RenderMasterHeader(System.Windows.Forms.PaintEventArgs,DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            渲染表头
            </summary>
            <param name="e"></param>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.GetColumnPanelHeight">
            <summary>
            获取列表头高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.GetValue``1(``0,System.String)">
            <summary>
            反射获取私有属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="view"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.OnRefreshData(System.Object,System.EventArgs)">
            <summary>
            引发数据刷新事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            重写键盘按下方法，如果是F5，则引发刷新事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:HSUCF.Controls.hsGridControl.RefreshData">
            <summary>
            数据刷新事件，在控件上按下F5时触发，两次触发有事件间隔，RefreshDataTimeInterval属性可设置时间间隔，单位毫秒
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.RefreshDataTimeInterval">
            <summary>
            用户按下F5时，两次触发刷新事件的最小间隔，单位毫秒
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.IsDrawHeaderLine">
            <summary>
            是否绘制表格头部横线
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.IsDrawHeaderLine2">
            <summary>
            是否绘制表格头部两边渐变线条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.HeaderLineColor">
            <summary>
            表格头部横线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.HeaderLineColor2">
            <summary>
            表格头部两边渐变线条渐变颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.hsMainView">
            <summary>
            获取当前显示的hsGridView
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.AvailableViews">
            <summary>
            可用视图列表
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.DragSelectEnabled">
            <summary>
            获取或设置是否启用拖拽选择
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridControl.DoDragSelectNow">
            <summary>
            获取是否正在拖拽选择行
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridHandler">
            <summary>
            hsGridHandler
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridHandler.#ctor(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridHandler.CreateGridViewColumnMenu(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            创建列菜单 
            </summary>
            <param name="gridView"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsGridInfoRegistrator">
            <summary>
            hsGridView注册类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridInfoRegistrator.CreateHandler(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            创建视图处理方法
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridInfoRegistrator.CreateView(DevExpress.XtraGrid.GridControl)">
            <summary>
            创建视图
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridInfoRegistrator.CreateViewInfo(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            获取视图信息对象
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridInfoRegistrator.RegisterViewPaintStyles">
            <summary>
            注册绘制样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridInfoRegistrator.PaintStyles">
            <summary>
            绘制样式集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridInfoRegistrator.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="T:HSUCF.Controls.H3CreateViewPaintStyle">
            <summary>
            H3视图绘制样式委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3reateInfoRegistrator">
            <summary>
            H3基础信息注册器委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3FakeViewPaintStyle">
            <summary>
            H3视图样式封装，用于构造H3视图样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsFakeBaseInfoRegistrator">
            <summary>
            H3基础信息注册器封装，用于构造H3视图信息注册器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsInfoCollection">
            <summary>
            hsView信息集合
            </summary>
        </member>
        <member name="T:HSUCF.Controls.H3PaintStyleCollection">
            <summary>
            H3绘制样式集合
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridPainter">
            <summary>
            hsGrid绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridPainter.#ctor(HSUCF.Controls.hsGridView)">
            <summary>
            初始化绘制器
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridPainter.DrawColumnPanelBackground(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs)">
            <summary>
            绘制表头背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridPainter.DrawColumnPanel(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs)">
            <summary>
            绘制列头
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridPainter.DrawRowFocus(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs,DevExpress.XtraGrid.Views.Grid.ViewInfo.GridRowInfo)">
            <summary>
            绘制行焦点
            </summary>
            <param name="e"></param>
            <param name="ri"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridPainter.DrawRegularRowCell(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs,DevExpress.XtraGrid.Views.Grid.ViewInfo.GridCellInfo)">
            <summary>
            绘制单元格
            </summary>
            <param name="e"></param>
            <param name="ci"></param>
        </member>
        <member name="T:HSUCF.Controls.hsGridScrollInfo">
            <summary>
            H3滚动条信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridScrollInfo.#ctor(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            初始化滚动条信息
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridScrollInfo.CreateHScroll">
            <summary>
            创建水平滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridScrollInfo.CreateVScroll">
            <summary>
            创建垂直滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollInfo.ScrollWidth">
            <summary>
            滚动条宽度/高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollInfo.Pad">
            <summary>
            与滚动内容的距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollInfo.ScrollSize">
            <summary>
            获取滚动条宽度
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IhsGridScrollBar">
            <summary>
            H3滚动条接口
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IhsGridScrollBar.ScrollInfo">
            <summary>
            获取滚动条信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridHCrkScrollBar">
            <summary>
            H3水平滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridHCrkScrollBar.#ctor(HSUCF.Controls.hsGridScrollInfo)">
            <summary>
            初始化水平滚动条
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridHCrkScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridHCrkScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsGridHCrkScrollBar.ScrollInfo">
            <summary>
            获取滚动条信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.H3VCrkScrollBar">
            <summary>
            H3垂直滚动条
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3VCrkScrollBar.#ctor(HSUCF.Controls.hsGridScrollInfo)">
            <summary>
            初始化垂直滚动条
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:HSUCF.Controls.H3VCrkScrollBar.CreateScrollBarViewInfo">
            <summary>
            创建滚动条视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.H3VCrkScrollBar.CreateScrollBarPainter">
            <summary>
            创建滚动条绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.H3VCrkScrollBar.ScrollInfo">
            <summary>
            获取滚动条信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridScrollBarViewInfo">
            <summary>
            滚动条视图信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridScrollBarViewInfo.#ctor(DevExpress.XtraEditors.IScrollBar)">
            <summary>
            初始化
            </summary>
            <param name="scrollBar"></param>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.H3ScrollBar">
            <summary>
            H3滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.ButtonWidth">
            <summary>
            返回按钮的宽度/高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.CalcThumbButtonBounds">
            <summary>
            获取滑块的位置和大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.VisibleDecButtonBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.VisibleIncButtonBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridScrollBarViewInfo.ScrollBarHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridSkinScrollBarPainter">
            <summary>
            H3Skin滚动条绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.CreateScrollBarButtonPainter">
            <summary>
            创建滚动条按钮绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.CreateScrollBarThumbPainter">
            <summary>
            创建滚动条滑块绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.DrawNormalScrollArea(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            绘制空白区域
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
            <param name="isInc"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.DrawPressedScrollArea(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
            <param name="isInc"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.DrawThumbTrack(DevExpress.XtraEditors.ViewInfo.ScrollBarInfoArgs,System.Drawing.Rectangle)">
            <summary>
            绘制滑块轨道
            </summary>
            <param name="e"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinScrollBarPainter.CalcAreaRegion(System.Drawing.Rectangle,DevExpress.XtraEditors.ScrollBarType)">
            <summary>
            获取滑块区域
            </summary>
            <param name="bounds"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3SkinScrollBarButtonPainter">
            <summary>
            滚动条按钮绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawObject(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制对象
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.UpdateInfo(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            更新信息
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawButtonBackground(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
            <summary>
            绘制背景
            </summary>
            <param name="e"></param>
            <param name="style"></param>
            <param name="r"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawHot(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制焦点
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawNormal(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制正常模式
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawPressed(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制鼠标按下
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawSelectedFrame(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制选中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.DrawButton(DevExpress.Utils.Drawing.ObjectInfoArgs,System.Drawing.Color,System.Drawing.Point[])">
            <summary>
            绘制按钮
            </summary>
            <param name="e"></param>
            <param name="color"></param>
            <param name="points"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.CalcButtonPolygon(System.Drawing.Rectangle,System.Windows.Forms.ScrollButton)">
            <summary>
            获取按钮顶点坐标
            </summary>
            <param name="bounds"></param>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarButtonPainter.CalcButtonBounds(System.Drawing.Rectangle,System.Windows.Forms.ScrollButton)">
            <summary>
            获取按钮大小和位置
            </summary>
            <param name="bounds"></param>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3SkinScrollBarThumbPainter">
            <summary>
            滚动条滑块绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.#ctor(DevExpress.Skins.ISkinProvider)">
            <summary>
            初始化
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawObject(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制滑块
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.UpdateInfo(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            更新信息
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawButtonBackground(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
            <summary>
            绘制背景
            </summary>
            <param name="e"></param>
            <param name="style"></param>
            <param name="r"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawHot(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制焦点
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawNormal(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制正常模式
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawPressed(DevExpress.Utils.Drawing.ObjectInfoArgs,DevExpress.Utils.AppearanceObject)">
            <summary>
            绘制鼠标按下
            </summary>
            <param name="e"></param>
            <param name="style"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawSelectedFrame(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制选中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.DrawThumb(DevExpress.Utils.Drawing.ObjectInfoArgs,System.Drawing.Color,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            绘制滑块
            </summary>
            <param name="e"></param>
            <param name="color"></param>
            <param name="path"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinScrollBarThumbPainter.CalcThumbPath(System.Drawing.Rectangle,DevExpress.XtraEditors.ScrollBarType)">
            <summary>
            获取滑块绘制路径
            </summary>
            <param name="bounds"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.hsGridSkinPaintStyle">
            <summary>
            hsGrid皮肤绘制样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinPaintStyle.CreateElementsPainter(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            创建皮肤元素绘制器
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinPaintStyle.CreatePainter(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            初始化绘制器
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinPaintStyle.GetDefaultShowHorizontalLines(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            获取默认是否显示水平线
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridSkinPaintStyle.GetDefaultShowVerticalLines(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            获取默认是否显示垂直线
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsGridSkinPaintStyle.Name">
            <summary>
            皮肤名称
            </summary>
        </member>
        <member name="T:HSUCF.Controls.H3GridSkinElementsPainter">
            <summary>
            H3皮肤元素绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3GridSkinElementsPainter.#ctor(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.H3GridSkinElementsPainter.CreateColumnPainter">
            <summary>
            获取列绘制器
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3SkinHeaderObjectPainter">
            <summary>
            hs皮肤表头绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3SkinHeaderObjectPainter.#ctor(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinHeaderObjectPainter.DrawButtonObject(DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
            绘制表头背景和边框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.H3SkinHeaderObjectPainter.DrawCaptionText(DevExpress.Utils.Drawing.HeaderObjectInfoArgs,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
            绘制表头文字
            </summary>
            <param name="ee"></param>
            <param name="bounds"></param>
            <param name="foreBrush"></param>
        </member>
        <member name="T:HSUCF.Controls.hsGridView">
            <summary>
            扩展GridView，具有定制属性，自动绘制行序号等特性
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView.CNS_LocateKeyPassInternvl">
            <summary>
            定位时按键事件间隔
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView.CNS_NumberTypes">
            <summary>
            数据类型常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView.NumberValueTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._columnAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._locateText">
            <summary>
            定位文本
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._lastKeyPassTime">
            <summary>
            上一次按键时间
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._dataSourceEntityType">
            <summary>
            数据源实体类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._isDataSourceChangeNow">
            <summary>
            是否正在修改数据源
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGridView._errorCellList">
            <summary>
            取值错误的单元格，row_column
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.#ctor(DevExpress.XtraGrid.GridControl)">
            <summary>
            初始化
            </summary>
            <param name="grid">所属Grid</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.Init">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.Clear">
            <summary>
            清除所有行
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.DeleteRow(System.Int32,System.Int32)">
            <summary>
            从指定行开始删除指定行数的行
            </summary>
            <param name="startHandel">开始删除行</param>
            <param name="count">删除行数</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetGridCellInfo(System.Int32,DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            获取单元格信息
            </summary>
            <param name="rowHandle">行索引</param>
            <param name="column">列</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetDataSourceEntityType">
            <summary>
            获取数据源实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CreateOptionsView">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CreateOptionsBehavior">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CreateOptionsDetail">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CreateOptionsSelection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CreateScrollInfo">
            <summary>
            创建滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.CalcHScrollRange">
            <summary>
            计算水平滚动条滚动区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.OnRowMouseEnter(System.Int32)">
            <summary>
            光标进入行
            </summary>
            <param name="rowHandle"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.OnRowMouseLeave(System.Int32)">
            <summary>
            光标离开行
            </summary>
            <param name="rowHandle"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetRowCellRepositoryItem(System.Int32,DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            公开GetRowCellRepositoryItem方法，用于获取单元格内控件
            </summary>
            <param name="rowHandle"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.InitColumn(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            初始化列特性
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.DefaultEditor(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            默认编辑器
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetStyleByDataSourseEntityType(System.Type)">
            <summary>
            根据数据源实体类型，获取列外观样式
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.UpdateColumnStyle">
            <summary>
            更新列样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.OnDataController_DataSourceChanged(System.Object,System.EventArgs)">
            <summary>
            数据源变化事件
            在这个事件中处理了数据源实体类特性
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.BestFitColumns">
            <summary>
            计算最佳列宽
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.OnColumnWidthChanged(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            宽度变化事件
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.SaveColumnWidth(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            保存列宽
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.RaiseColumnPositionChanged(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            显示隐藏顺序变化事件
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.SaveColumnIndex(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            保存列顺序
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetRowCellValue(System.Int32,DevExpress.XtraGrid.Columns.GridColumn,DevExpress.Data.OperationCompleted)">
            <summary>
            
            </summary>
            <param name="rowHandle"></param>
            <param name="column"></param>
            <param name="completed"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.GetRowCellValue(System.Int32,System.String,DevExpress.Data.OperationCompleted)">
            <summary>
            
            </summary>
            <param name="rowHandle"></param>
            <param name="fieldName"></param>
            <param name="completed"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.H3CustomDrawCell(System.Object,DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs)">
            <summary>
            绘制单元格
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.LocateByDisplayText(System.Int32,DevExpress.XtraGrid.Columns.GridColumn,System.String)">
            <summary>
            根据显示文本定位行
            定位规则
            默认忽略大小写，支持设置为不忽略
            从首字母开始定位，如果首字母没有匹配，则从第二个字母开始匹配
            </summary>
            <param name="startRowHandle">起始行</param>
            <param name="column">定位列</param>
            <param name="text">定位字符串</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.LocateKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            处理按键事件，实现快捷定位功能
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.ReDraw">
            <summary>
            重绘
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.ExecException(System.Exception)">
            <summary>
            异步任务发生异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.LocateColumnInternal">
            <summary>
            获取定位列
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.FastLocate">
            <summary>
            快速定位
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridView.AsyncFastLocate">
            <summary>
            异步快速定位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.GridViewName">
            <summary>
            GridView名称，必须全局唯一。
            命名规则：模块名_表格名，不能出现文件名不支持的字符
            如期货自由交易下的合约行情，命名为：期货自由交易_合约行情
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LocateEnabled">
            <summary>
            是否启用快捷定位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LocateFieldName">
            <summary>
            快捷定位列
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LocateBy">
            <summary>
            定位方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LocateMode">
            <summary>
            定位模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LocateIgnore">
            <summary>
            定位时是否忽略大小写
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.BestFitColumnsAfterDataSourceChanged">
            <summary>
            在数据源修改以后，自动应用最合适宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.ColumnPanelRowHeight">
            <summary>
            列头面板高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.FocusRectStyle">
            <summary>
            焦点绘制样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.PaintStyleName">
            <summary>
            绘制样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.RowHeight">
            <summary>
            行高
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.LevelIndent">
            <summary>
            缩进
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.ViewName">
            <summary>
            View名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.CellPadding">
            <summary>
            表头和表体单元格内边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.CaptionBottonLineColor1">
            <summary>
            表头下边线的第一根线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.CaptionBottonLineColor2">
            <summary>
            表头下边线的第二根线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.FocuseRowBorderColor">
            <summary>
            焦点行边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.FocuseRowBorderDashStyle">
            <summary>
            焦点行边框线段样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.MouseEnterRowBackColor">
            <summary>
            鼠标经过行背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.DataViewRect">
            <summary>
            表格视图的大小和位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.H3ScrollInfo">
            <summary>
            滚动条信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.HScroll">
            <summary>
            水平滚动条
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGridView.VScroll">
            <summary>
            垂直滚动条
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LocateBy">
            <summary>
            定位方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LocateBy.DisplayText">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LocateBy.Value">
            <summary>
            数据源值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LocateMode">
            <summary>
            定位模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LocateMode.FirstChar">
            <summary>
            从首字符开始，如果首字符不匹配，则不匹配
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LocateMode.FullString">
            <summary>
            从首字符开始，如果首字符不匹配，则匹配第二个字符，以此类推
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridViewColumnMenu">
            <summary>
            hsGrid列菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewColumnMenu.#ctor(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            初始化列菜单
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:HSUCF.Controls.hsGridViewInfo">
            <summary>
            hsGrid视图信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.#ctor(HSUCF.Controls.hsGridView)">
            <summary>
            初始化绘制器
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.CalcRectsColumnPanel(System.Int32)">
            <summary>
            计算表头
            </summary>
            <param name="startY"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.CalcColumnBestWidth(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            计算最佳列宽
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.CalcDataRight">
            <summary>
            计算数据右边位置-距左边
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.UpdateRowAppearance(DevExpress.XtraGrid.Views.Grid.ViewInfo.GridRowInfo,System.Boolean)">
            <summary>
            更细行样式
            </summary>
            <param name="ri"></param>
            <param name="always"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.UpdateCellAppearance(DevExpress.XtraGrid.Views.Grid.ViewInfo.GridCellInfo,System.Boolean)">
            <summary>
            更新单元格样式
            </summary>
            <param name="cell"></param>
            <param name="always"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.CreateRowInfo(System.Int32,System.Int32)">
            <summary>
            初始化行信息
            </summary>
            <param name="rowHandle"></param>
            <param name="rowLevel"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.CreateCellInfo(DevExpress.XtraGrid.Views.Grid.ViewInfo.GridDataRowInfo,DevExpress.XtraGrid.Drawing.GridColumnInfoArgs)">
            <summary>
            初始化单元格信息
            </summary>
            <param name="ri"></param>
            <param name="columnInfo"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewInfo.IsAutoFilterRow(System.Int32)">
            <summary>
            是否自动过滤行
            </summary>
            <param name="rowHandle"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.H3GridDataRowInfo">
            <summary>
            H3Grid数据行信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3GridDataRowInfo.#ctor(HSUCF.Controls.hsGridViewInfo,System.Int32,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="viewInfo"></param>
            <param name="rowHandle"></param>
            <param name="level"></param>
        </member>
        <member name="P:HSUCF.Controls.H3GridDataRowInfo.MouseEnter">
            <summary>
            光标是否进入行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.H3GridDataRowInfo.ChangeAppearanceWhenMouseEnter">
            <summary>
            在鼠标进入时已经改变了外观
            </summary>
        </member>
        <member name="T:HSUCF.Controls.H3GridCellInfo">
            <summary>
            H3Grid单元格信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3GridCellInfo.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HSUCF.Controls.H3GridCellInfo.#ctor(DevExpress.XtraGrid.Drawing.GridColumnInfoArgs,HSUCF.Controls.H3GridDataRowInfo,System.Drawing.Rectangle)">
            <summary>
            初始化
            </summary>
            <param name="column"></param>
            <param name="rowInfo"></param>
            <param name="rect"></param>
        </member>
        <member name="P:HSUCF.Controls.H3GridCellInfo.RowMouseEnter">
            <summary>
            光标是否进入行单元格所在行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.H3GridCellInfo.ChangeAppearanceWhenMouseEnter">
            <summary>
            在鼠标进入时已经改变了外观
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGridViewScrollInfo">
            <summary>
            hsGrid绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewScrollInfo.#ctor(HSUCF.Controls.hsGridView)">
            <summary>
            初始化滚动条信息
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HSUCF.Controls.hsGridViewScrollInfo.CalcRects">
            <summary>
            计算滚动条大小和位置
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSkinGridBorderPainter">
            <summary>
            hsGrid边框绘制器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSkinGridBorderPainter.#ctor(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            初始化绘制器
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:HSUCF.Controls.HsLanguage">
            <summary>
            HsLanguage
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HsLanguage.GetString(System.String)">
            <summary>
            获取字符串
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsLabelProgressBar._speedTextSize">
            <summary>
            进度文本最大尺寸
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelProgressBar.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelProgressBar.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelProgressBar.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.ProgressBarHeight">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.FontColor">
            <summary>
            字体颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.ShadowColor">
            <summary>
            进度条阴影颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.ShowSpeed">
            <summary>
            是否显示进度值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelProgressBar.ForeColor">
            <summary>
            进度条颜色
            </summary>
            <param name="?"></param>
        </member>
        <member name="T:HSUCF.Controls.MessageBoxForm">
            <summary>
            消息提示窗体
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.KEY_ALT">
            <summary>
            Alt键的值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.#ctor">
            <summary>
            消息提示窗体构造
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.#ctor(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Action,System.Boolean,HSUCF.Controls.FocusedMessageBoxButton,System.Windows.Forms.Form)">
            <summary>
            消息提示窗体构造
            </summary>
            <param name="msg">消息</param>
            <param name="caption">消息标题</param>
            <param name="buttons">展示的按钮类型</param>
            <param name="icon">图标类型</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm._ownerForm">
            <summary>
            父亲窗体，用于矫正多屏下消息窗体的显示位置问题
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm._message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm._dialogShownAction">
            <summary>
            消息框显示后当窗体要消失的时候回触发该委托
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm._buttons">
            <summary>
            展示的按钮类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.defaultResult">
            <summary>
            点击窗体关闭按钮或者Alt+F4的情况下默认的返回结果值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.STATIC_MESSAGE_MAX_WIDTH">
            <summary>
            消息区域最大宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.STATIC_MESSAGE_MIN_WIDTH">
            <summary>
            空消息时候消息区域最小宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.STATIC_MESSAGE_MIN_HEIGHT">
            <summary>
            消息区域最小高度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.STATIC_BUTTONs_PLACEHOLDER_WIDTH">
            <summary>
            按钮区占位符宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.STATIC_RESERVED_WIDTH_FOR_MEASURE_STRING">
            <summary>
            为度量字符串函数MeasureString计算的宽度预留的大小。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.GetFormMinHeight">
            <summary>
            窗体的最小高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.GetContentRowMaxWidth">
            <summary>
            窗体的最大宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.GetButtonsWidth">
            <summary>
            按钮区宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.GetSplitMultiLine(System.String,System.Drawing.Graphics)">
            <summary>
            拆分行信息文本，每行信息文本最多显示STATIC_PER_LINE_MAX_STRING_BYTES个字节
            </summary>
            <param name="lineMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.SelfResponsiveCompute">
            <summary>
            自适应计算信息字符，计算高度，宽度，自动改变窗体高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.MessageBoxForm_Load(System.Object,System.EventArgs)">
            <summary>
            窗体初始化
            </summary>
            <remarks>
            处理信息字符，计算高度，宽度，自动改变窗体高度
            </remarks>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.isUserClosed">
            <summary>
            用户点击取消的情况下，或者Alt+F4的情况下默认的返回结果值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.MessageBoxForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            窗体关闭时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.MessageBoxForm_Shown(System.Object,System.EventArgs)">
            <summary>
            窗体第一次打开
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.btn_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            按钮的按键事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            确定按钮单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.btnYes_Click(System.Object,System.EventArgs)">
            <summary>
            是按钮单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.btnNo_Click(System.Object,System.EventArgs)">
            <summary>
            否按钮单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            取消按钮单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.MessageBoxForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            按键事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.ShowDialog">
            <summary>
            显示模式框
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.MessageBeep(System.Int32)">
            <summary>
            Windows 警报声音
            </summary>
            <param name="uType">Windows 警报级别</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.PostMessage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            发送键值
            </summary>
            <param name="hwnd"></param>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.MessageBoxForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.MessageBoxForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.MessageBoxForm.IsWindowsNT6Upper">
            <summary>
            判断操作系统是否为WindowsVista以上
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSMessageBox">
            <summary>
            消息显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Action,System.Boolean,HSUCF.Controls.FocusedMessageBoxButton,System.Windows.Forms.Form)">
            <param name="text">消息</param>
            <param name="caption">消息标题</param>
            <param name="buttons">展示的按钮类型</param>
            <param name="icon">图标类型</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="T:HSUCF.Controls.FocusedMessageBoxButton">
            <summary>
            默认聚焦的按钮
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FocusedButtonYesNo">
            <summary>
            聚焦Yes,No按钮枚举
            </summary>
        </member>
        <member name="T:HSUCF.Controls.FocusedButtonYesNoCancel">
            <summary>
            聚焦Yes,No,Cancel按钮枚举
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBar.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsFlatTrackBar.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBar.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsFlatTrackBar.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.TrackBackColor">
            <summary>
            TrackBar背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.AutoSize">
            <summary>
            获取或设置一个值，该值指示是否自动调整跟踪条的高度或宽度。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.BackgroundImage">
            <summary>
            获取或设置 System.Windows.Forms.TrackBar 控件的背景图像。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.BackgroundImageLayout">
            <summary>
            获取或设置一个 System.Windows.Forms.ImageLayout 值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.ForeColor">
            <summary>
            获取跟踪条的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.ImeMode">
            <summary>
            获取或设置此控件所支持的输入法编辑器 (IME) 模式。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.LargeChange">
            <summary>
            获取或设置一个值，当滚动框长距离移动时向 System.Windows.Forms.TrackBar.Value 属性加上该值或从中减去该值。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Maximum">
            <summary>
            获取或设置此 System.Windows.Forms.TrackBar 使用的范围的上限。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Minimum">
            <summary>
            获取或设置此 System.Windows.Forms.TrackBar 使用的范围的下限。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.SmallChange">
            <summary>
            获取或设置当滚动框短距离移动时对 System.Windows.Forms.TrackBar.Value 属性进行增减的值。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Text">
            <summary>
            获取或设置 System.Windows.Forms.TrackBar 的文本。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.TickFrequency">
            <summary>
            获取或设置一个值，该值指定控件上绘制的刻度之间的增量。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.Value">
            <summary>
            获取或设置表示跟踪条上滚动框的当前位置的数值。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.MaximumSelect">
            <summary>
            最大可选择的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlatTrackBar.MinimumSelect">
            <summary>
            最小可选择的值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.AutoSizeChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.AutoSize 属性的值更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.BackgroundImageChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.BackgroundImage 属性更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.BackgroundImageLayoutChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.BackgroundImageLayout 属性更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.Click">
            <summary>
            Occurs when the user clicks the System.Windows.Forms.TrackBar control.
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.DoubleClick">
            <summary>
            当用户双击 System.Windows.Forms.TrackBar 控件时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.FontChanged">
            <summary>
            Occurs when the System.Windows.Forms.TrackBar.Font property changes.
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.ForeColorChanged">
            <summary>
            Occurs when the System.Windows.Forms.TrackBar.ForeColor property changes.
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.ImeModeChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.ImeMode 属性更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.MouseClick">
            <summary>
            Occurs when the user clicks the System.Windows.Forms.TrackBar control.
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.MouseDoubleClick">
            <summary>
            Occurs when the user double-clicks the System.Windows.Forms.TrackBar control.
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.PaddingChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.Padding 属性的值更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.Paint">
            <summary>
            在绘制 System.Windows.Forms.TrackBar 控件时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.RightToLeftLayoutChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.RightToLeftLayout 属性的值更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.Scroll">
            <summary>
            在通过鼠标或键盘操作移动滚动框时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.TextChanged">
            <summary>
            当 System.Windows.Forms.TrackBar.Text 属性更改时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsFlatTrackBar.ValueChanged">
            <summary>
            当跟踪条的 System.Windows.Forms.TrackBar.Value 属性由于滚动框的移动或者由于代码中的操作而更改时发生。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsPagination">
            <summary>
            分页控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.GoFirst">
            <summary>
            跳转到第一页,如果当前已经是第一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.GoLast">
            <summary>
            跳转到最后一页,如果当前已经是最后一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.GoPrev">
            <summary>
            跳转到前一页,如果当前已经是第一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.GoNext">
            <summary>
            跳转到后一页,如果当前已经是最后一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.GoPage(System.Int32)">
            <summary>
            跳转到特定页码, 如果页码小于 1 或大于PageCount或当前页码就是该页码则不会触发PageIndexChanged事件
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.SetDataSource``1(System.Collections.ObjectModel.ObservableCollection{``0})">
            <summary>
            设置数据源
            </summary>
            <typeparam name="T">强类型</typeparam>
            <param name="dataSource">数据源</param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.InitResource">
            <summary>
            多语言
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.ReCalcPageLabel">
            <summary>
            计算并添加PageLabel
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.pageLabel_Click(System.Object,System.EventArgs)">
            <summary>
            鼠标点击Label事件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.pageLabel_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            鼠标移动到Label内事件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.pageLabel_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            鼠标离开Label事件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.OnPageIndexChanged(HSUCF.Controls.PageIndexChangedEventArgs)">
            <summary>
            触发PageIndechanged事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.RefreshDataSource">
            <summary>
            刷新数据
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.dataSource_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            数据源改变
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.FindAllControls(System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            查找所有子控件
            </summary>
            <param name="c"></param>
            <param name="controls"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.ApplyResource">
            <summary>
            分页控件多语言切换
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.OnSizeChanged(System.EventArgs)">
            <summary>
            SizeChanged事件处理 
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsPagination.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsPagination.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.CurrentPageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.MaxPageCount">
            <summary>
            最大可显示分页页码个数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.PageCount">
            <summary>
            页数=总记录数/每页显示记录数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.CurDataSource">
            <summary>
            当前页的数据
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsPagination.PageIndexChanged">
            <summary>
            页码改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsPagination.DataSourceChanged">
            <summary>
            数据源改变事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.Size">
            <summary>
            获取或设置控件大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPagination.Dock">
            <summary>
            Dock
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PageLabelPool">
            <summary>
            PageLabelPool
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PageLabelPool._avaliable">
            <summary>
            保存所有已被创建,但未被使用的Label
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PageLabelPool.GetAvaliabeLabel(System.Int32)">
            <summary>
            获取一个可用的Label对象
            </summary>
            <param name="pageIndex">Label显示的PageIndex</param>
            <returns>Label对象</returns>
        </member>
        <member name="M:HSUCF.Controls.PageLabelPool.RemoveUnAvaliableLabel(HSUCF.Controls.hsLabel)">
            <summary>
            回收被移除的Label对象
            </summary>
            <param name="label"></param>
        </member>
        <member name="M:HSUCF.Controls.PageLabelPool.CreatePageLabel(System.Int32)">
            <summary>
            创建一个Label对象
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.PageLabelPool.MeasureNumberWidth(System.Int32)">
            <summary>
            计算一个数字的显示大小,在默认Font下可用
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.PageLabelPool.MouseEnterHandler">
            <summary>
            MouseEnterHandler
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PageLabelPool.MouseLeaveHandler">
            <summary>
            MouseLeaveHandler
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PageLabelPool.ClickHandler">
            <summary>
            ClickHandler 
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PageIndexChangedEventArgs">
            <summary>
            分页控件页码改变事件对象
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PageIndexChangedEventArgs.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PageIndexChangedEventArgs.PageSize">
            <summary>
            每页数据条数
            </summary>
        </member>
        <member name="T:HSUCF.Controls.EnumLanguage">
            <summary>
            多语言枚举
            </summary>
        </member>
        <member name="F:HSUCF.Controls.EnumLanguage.zh">
            <summary>
            简体中文
            </summary>
        </member>
        <member name="F:HSUCF.Controls.EnumLanguage.zh_HK">
            <summary>
            香港繁体中文
            </summary>
        </member>
        <member name="F:HSUCF.Controls.EnumLanguage.en">
            <summary>
            英文
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Argument">
            <summary>
              查找类似 按钮与按钮状态数量不一致! 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.btn_keyboard_active">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.btn_keyboard_normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Abolish">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Audit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Build">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Buttom">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Cancel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Check">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.button_checked_background">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.button_checked_image">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_CheckOut">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_CleanAndQuery">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ClearData">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Close">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Computer">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Confirm">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Data">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Delete">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Descend">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Download">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ErrorImage">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ExportExcel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ExportTemplate">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ExportWord">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_File">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Fold">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_FoldTree">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Freeze">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Help">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Home">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_ImportData">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Left">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Linkage">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_MenuSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Modify">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_New">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Path">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Popup">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Print">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_PrintPreview">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_PwdReset">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_PwdSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_PwdSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Query">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_QueryMac">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_QueryToEnd">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_RAudit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Right">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_RoleSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_RoleSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Save">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Set">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Signin">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Start">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Stat">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Stop">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_StopQuery">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Submit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_System">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Thaw">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Tool">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Top">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_UnCheck">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Unfold">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_UnfoldTree">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_UnKnown">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Update">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_View">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_WorksiteSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_WorksiteSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Button_Write">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Cancel">
            <summary>
              查找类似 你要取消本次操作吗? 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ChevronDown">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ChevronLeft">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ChevronRight">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ChevronUp">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ClearTextEnter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ClearTextLeave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.CloseEnter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.CloseLeave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.closePanel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Collapse">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Collapse_h">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Confirm">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.CreatePresenter">
            <summary>
              查找类似 {0} 必须重写CreatePresenter方法。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.DateIntergerValueBetweenFormat">
            <summary>
              查找类似 整型日期值必须在{0}至{1}之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.download">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.download1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.email">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Error">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Expand">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Expand_h">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Abolish">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Audit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Build">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Buttom">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Cancel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Check">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_CheckOut">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_CleanAndQuery">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ClearData">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Close">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Computer">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Confirm">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Data">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Delete">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Descend">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Download">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ErrorImage">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ExportExcel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ExportTemplate">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ExportWord">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_File">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Fold">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_FoldTree">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Freeze">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Help">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Home">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_ImportData">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Left">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Linkage">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_MenuSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Modify">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_New">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Path">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Popup">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Print">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_PrintPreview">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_PwdReset">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_PwdSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_PwdSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Query">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_QueryMac">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_QueryToEnd">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_RAudit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Right">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_RoleSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_RoleSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Save">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Set">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Signin">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Start">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Stat">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Stop">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_StopQuery">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Submit">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_System">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Thaw">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Tool">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Top">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_UnCheck">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Unfold">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_UnfoldTree">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_UnKnown">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Update">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_View">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_WorksiteSearch">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_WorksiteSet">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FLAT_Button_Write">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Close_Enter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Close_Leave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Max_Enter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Max_Leave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Min_Enter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Min_Leave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_ReMax_Enter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Form_Remax_Leave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.FormatTotalPages">
            <summary>
              查找类似 共{0}页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationDi">
            <summary>
              查找类似 第 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationFirstPage">
            <summary>
              查找类似 首页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationLastPage">
            <summary>
              查找类似 末页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationMeiYe">
            <summary>
              查找类似 每页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationNextPage">
            <summary>
              查找类似 下一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationNextPageNotifyTextFormat">
            <summary>
              查找类似 共{0}页  总共{1}条数据 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationPrevPage">
            <summary>
              查找类似 上一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationTiao">
            <summary>
              查找类似 条 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.hsPaginationYe">
            <summary>
              查找类似 页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.icon_arrowdown">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.icon_arrowup">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.IDS_ArgumentException">
            <summary>
              查找类似 Parameter {0} 不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.IDS_InvalidBoundArgument">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;Value&apos; should be between &apos;{2}&apos; and &apos;{3}&apos;.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.IDS_InvalidLowBoundArgument">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;Maximum&apos; must be greater than or equal to 0.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.IDS_InvalidOperationExceptionInteger">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;{1}&apos; must be greater than or equal to {2}.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Image1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Info">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ItemCount">
            <summary>
              查找类似 必须大于零！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.jnavpanechevron">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.LeftArrow">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.LenInMinAndMax">
            <summary>
              查找类似 {0}的长度应为{1}~{2}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.LenShouldInSpec">
            <summary>
              查找类似 {0}的长度应为{1}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.LockEnter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.LockLeave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.MenuViewPanNorth">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.MenuViewPanSouth">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ModifyTimeIntergerValueMaxDateErrorFormat">
            <summary>
              查找类似 当前的日期部分值已经等于最大值{0},请修改日期部分值后才能修改时间部分值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Month">
            <summary>
              查找类似 月 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.NextPage">
            <summary>
              查找类似 后一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.NoPic">
            <summary>
              查找类似 没有可用图片！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.notice">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.NotNull">
            <summary>
              查找类似 不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.NoWorkerMethod">
            <summary>
              查找类似 请指定工作函数！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.NumberError">
            <summary>
              查找类似 输入数字格式错误！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.OK">
            <summary>
              查找类似 确认 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Page">
            <summary>
              查找类似 页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.PleaseWait">
            <summary>
              查找类似 请稍等 ... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.PreviousPage">
            <summary>
              查找类似 前一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Record">
            <summary>
              查找类似 总共 {0} 条记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexChineseChars">
            <summary>
              查找类似 ^[\u4e00-\u9fa5]+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexChineseChars_ErrMsg">
            <summary>
              查找类似 需要都是中文字符。正确的如:恒生电子 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexChineseEnglishChars">
            <summary>
              查找类似 ^([\u4e00-\u9fa5]|[a-z]|[A-Z])+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexChineseEnglishChars_ErrMsg">
            <summary>
              查找类似 需要都是中英文字符。正确的如:恒生电子hundsun 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexEmail">
            <summary>
              查找类似 ^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexEmail_ErrMsg">
            <summary>
              查找类似 不是有效的Email。正确的如:test@hundsun.com 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexEnglishChars">
            <summary>
              查找类似 ^[a-zA-Z]+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexEnglishChars_ErrMsg">
            <summary>
              查找类似 需要都是英文字符。正确的如:hundsun 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIdCard">
            <summary>
              查找类似 ^((\d{15})|(\d{18})|(\d{17}[X|x]))$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIdCard_ErrMsg">
            <summary>
              查找类似 不是有效的身份证号。身份证号是15,18位数字或17位数字加X(x)。正确的如:330313198801010020 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIPv4">
            <summary>
              查找类似 ^([1-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIPv4_ErrMsg">
            <summary>
              查找类似 不是有效的IPv4的IP地址。正确的如:192.168.1.1 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIPv6">
            <summary>
              查找类似 ^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((: [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexIPv6_ErrMsg">
            <summary>
              查找类似 不是有效的IPv6的IP地址。正确的如:FE80:0000:0000:0000:AAAA:0000:00C2:0002 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexPhone">
            <summary>
              查找类似 ^1\d{10}$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexPhone_ErrMsg">
            <summary>
              查找类似 不是有效的中国手机号。正确的如:1305718888 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexTel">
            <summary>
              查找类似 ^\d{2,4}-\d{8}|\d{2,4}-\d{7}$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexTel_ErrMsg">
            <summary>
              查找类似 不是有效的中国电话。正确的如: 0511-4405222 或 571-82128822 或 21-87888822。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexURL">
            <summary>
              查找类似 ^[a-zA-z]+://[^\s]*$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexURL_ErrMsg">
            <summary>
              查找类似 不是有效的URL。正确的如: Http://www.hundsun.com/ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexZipCode">
            <summary>
              查找类似 ^[1-9]\d{5}(?!\d)$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RegexZipCode_ErrMsg">
            <summary>
              查找类似 不是有效的邮编。正确的如:310013 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.RightArrow">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.shadowLine">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ShowConfirm">
            <summary>
              查找类似 确认 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ShowError">
            <summary>
              查找类似 错误消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ShowTips">
            <summary>
              查找类似 提示消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ShowWarning">
            <summary>
              查找类似 警告消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.skinClose">
            <summary>
              查找类似 关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Close_Hovered">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Close_Normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Close_Pressed">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Max_Hovered">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Max_Normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Max_Pressed">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Min_Hovered">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Min_Normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Min_Pressed">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Resume_Hovered">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Resume_Normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.SkinForm_Resume_Pressed">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.skinMax">
            <summary>
              查找类似 最大化 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.skinMin">
            <summary>
              查找类似 最小化 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.skinRestore">
            <summary>
              查找类似 还原 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.TabPageEnter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.TabPageLeave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.TerminateTask">
            <summary>
              查找类似 正在终止任务... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.TimeIntergerValueBetweenFormat">
            <summary>
              查找类似 整型时间值必须在{0}至{1}之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Tip">
            <summary>
              查找类似 提示 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Total">
            <summary>
              查找类似 共 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_left_header">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_right">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_right_header">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_thumb_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_thumb_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_thumb_normal">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_track">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.trackbar_track_gray">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.UnLockEnter">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.UnLockLeave">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.updateSize">
            <summary>
              查找类似 大小 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.WaitingMsg">
            <summary>
              查找类似 正在处理，请等待... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Warn">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.Year">
            <summary>
              查找类似 年 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.ZeroError">
            <summary>
              查找类似 PageSize必须大于0！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.信息提示_小_信息">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.信息提示_小_咨询_帮助">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.信息提示_小_完成">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.信息提示_小_警告">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.信息提示_小_错误">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_正常">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_点击">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_点击_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_禁用1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_禁用2">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.单选_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_不确定">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_不确定_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_正常">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_点击">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_点击_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_禁用">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_禁用1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_禁用2">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.复选_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.按钮_渐变_正常">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.按钮_渐变_焦点">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.按钮_渐变_禁用">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Resources.按钮_渐变_经过">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Properties.Strings">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.AddItem_ErrMsg">
            <summary>
              查找类似 当前的autoComplete项不支持加入。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Argument">
            <summary>
              查找类似 按钮与按钮状态数量不一致! 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.AutoCompleteListView_ErrMsg">
            <summary>
              查找类似 ListView必须是Control的派生类。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.BackColor_ErrMsg">
            <summary>
              查找类似 背景不支持透明 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.buttons_ErrMsg">
            <summary>
              查找类似 目前不支持该按钮类型。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Cancel">
            <summary>
              查找类似 你要取消本次操作吗? 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ChineseNumberAlign_ErrMsg">
            <summary>
              查找类似 将数值控件放在FlowLayoutPanel或者TableLayoutPanel内时候，将直接放在数值控件下方，与该属性无关。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ChineseNumberLabelAutoSize_ErrMsg">
            <summary>
              查找类似 将数值控件放在FlowLayoutPanel或者TableLayoutPanel内时候，该属性与中文金额显示无关。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ChineseNumberLabelSize_ErrMsg">
            <summary>
              查找类似 将数值控件放在FlowLayoutPanel或者TableLayoutPanel内时，中文金额显示的高度是根据文本动态大小的，宽度为数值控件的宽度，与该属性值无关。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ChineseNumberOffset_ErrMsg">
            <summary>
              查找类似 将数值控件放在FlowLayoutPanel或者TableLayoutPanel内时候，该属性不起作用。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.CircleColor_ErrMsg">
            <summary>
              查找类似 正在加载的圆形图案的颜色不能为空或透明色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Commbox_AllItemCaption">
            <summary>
              查找类似 {0}列类型必须为String 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.CreatePresenter">
            <summary>
              查找类似 {0} 必须重写CreatePresenter方法。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.CustomColumnDisplayText_ErrMsg">
            <summary>
              查找类似 类型[{0}]不存在属性[{1}] 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Date_ErrMsg">
            <summary>
              查找类似 输入日期格式不正确，请重新输入 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.DateIntergerValueBetweenFormat">
            <summary>
              查找类似 整型日期值必须在{0}至{1}之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.DisplayCount_ErrMsg">
            <summary>
              查找类似 验证码字符个数必须在1-20之间 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.DisplayerSettings_ErrMsg">
            <summary>
              查找类似 未设置显示配置信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.DoAddColumnOfTargetGrid_ErrMsg">
            <summary>
              查找类似 使用页脚统计功能后，请在动态添加新列的时候，设置新列的Name属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.DoRemoveColumnOfTargetGrid_ErrMsg">
            <summary>
              查找类似 使用页脚统计功能后，请在动态删除列的时候，设置该列的Name属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.EnableEmptyText_ErrMsg">
            <summary>
              查找类似 只有日期格式才支持空显示值，请选择Format属性为Short或Long。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Format_ErrMsg">
            <summary>
              查找类似 因为你已经启用日期显示空值功能，所以请选择目标格式类型为Short或Long或不启用显示空值功能。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.FormatTotalPages">
            <summary>
              查找类似 共{0}页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GenerateValidatingResult_ErrMsg">
            <summary>
              查找类似 必须传入需要验证的控件 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GetRecordMethodInfo_ErrMsg">
            <summary>
              查找类似 获取类型[{0}]的{1}({2})方法失败！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GetTableLayout_ErrMsg">
            <summary>
              查找类似 获取表格布局信息失败,布局信息未初始化。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GreaterValue_ErrMsg">
            <summary>
              查找类似 不支持 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GreaterValue_ErrMsg2">
            <summary>
              查找类似 类型的验证 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.GreaterValue_ErrMsg3">
            <summary>
              查找类似 类型的比较 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationDi">
            <summary>
              查找类似 第 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationFirstPage">
            <summary>
              查找类似 首页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationLastPage">
            <summary>
              查找类似 末页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationMeiYe">
            <summary>
              查找类似 每页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationNextPage">
            <summary>
              查找类似 下一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationNextPageNotifyTextFormat">
            <summary>
              查找类似 共{0}页  总共{1}条数据 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationPrevPage">
            <summary>
              查找类似 上一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationTiao">
            <summary>
              查找类似 条 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.hsPaginationYe">
            <summary>
              查找类似 页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.icon_ErrMsg">
            <summary>
              查找类似 目前不支持该图标类型。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.IDS_ArgumentException">
            <summary>
              查找类似 Parameter {0} 不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.IDS_InvalidBoundArgument">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;Value&apos; should be between &apos;{2}&apos; and &apos;{3}&apos;.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.IDS_InvalidLowBoundArgument">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;Maximum&apos; must be greater than or equal to 0.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.IDS_InvalidOperationExceptionInteger">
             <summary>
               查找类似 Value of &apos;{0}&apos; is not valid for &apos;{1}&apos;. &apos;{1}&apos; must be greater than or equal to {2}.
            Parameter name: {1} 的本地化字符串。
             </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.InitColumn_ErrMsg">
            <summary>
              查找类似 [{0}]列样式设置失败，原因：{1} 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.InitDataSource_ErrMsg">
            <summary>
              查找类似 数据源中不包含当前列 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.InnerCircleRadius_ErrMsg">
            <summary>
              查找类似 内圆半径必须大于1,而且必须小于外圆半径。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ItemCount">
            <summary>
              查找类似 必须大于零！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.LabelWidth_ErrMsg">
            <summary>
              查找类似 标签区域的宽度不能小于0。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.LenInMinAndMax">
            <summary>
              查找类似 {0}的长度应为{1}~{2}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.LenShouldInSpec">
            <summary>
              查找类似 {0}的长度应为{1}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ListToDataTable_ErrMsg">
            <summary>
              查找类似 需转换的集合为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ListToDataTable_ErrMsg2">
            <summary>
              查找类似 要转换的集合元素类型不一致 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.MaxLength_ErrMsg">
            <summary>
              查找类似 该值需要大于等于MinLength的值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.MessageFont_ErrMsg">
            <summary>
              查找类似 消息文本的字体不能为空。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.MessageForeColor_ErrMsg">
            <summary>
              查找类似 消息文本的前景色不能为空或透明色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.MinLength_ErrMsg">
            <summary>
              查找类似 该值需要小于等于MaxLength的值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ModifyTimeIntergerValueMaxDateErrorFormat">
            <summary>
              查找类似 当前的日期部分值已经等于最大值{0},请修改日期部分值后才能修改时间部分值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Month">
            <summary>
              查找类似 月 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NextPage">
            <summary>
              查找类似 后一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NoEqual">
            <summary>
              查找类似 不等于 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NoPic">
            <summary>
              查找类似 没有可用图片！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NotNull">
            <summary>
              查找类似 不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NoWorkerMethod">
            <summary>
              查找类似 请指定工作函数！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NumberError">
            <summary>
              查找类似 输入数字格式错误！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.NumberSpoke_ErrMsg">
            <summary>
              查找类似 辐条数量必须大于6条。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.OK">
            <summary>
              查找类似 确认 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Opacity_ErrMsg">
            <summary>
              查找类似 不透明百分比（0~100） 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.OuterCircleRadius_ErrMsg">
            <summary>
              查找类似 外圆半径必须大于1,而且必须大于内圆半径。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.OutOfRangeException">
            <summary>
              查找类似 索引超出范围 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Page">
            <summary>
              查找类似 页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.PleaseWait">
            <summary>
              查找类似 请稍等 ... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.PreviousPage">
            <summary>
              查找类似 前一页 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Record">
            <summary>
              查找类似 总共 {0} 条记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexChineseChars">
            <summary>
              查找类似 ^[\u4e00-\u9fa5]+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexChineseChars_ErrMsg">
            <summary>
              查找类似 需要都是中文字符。正确的如:恒生电子 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexChineseEnglishChars">
            <summary>
              查找类似 ^([\u4e00-\u9fa5]|[a-z]|[A-Z])+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexChineseEnglishChars_ErrMsg">
            <summary>
              查找类似 需要都是中英文字符。正确的如:恒生电子hundsun 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexEmail">
            <summary>
              查找类似 ^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexEmail_ErrMsg">
            <summary>
              查找类似 不是有效的Email。正确的如:test@hundsun.com 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexEnglishChars">
            <summary>
              查找类似 ^[a-zA-Z]+$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexEnglishChars_ErrMsg">
            <summary>
              查找类似 需要都是英文字符。正确的如:hundsun 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIdCard">
            <summary>
              查找类似 ^((\d{15})|(\d{18})|(\d{17}[X|x]))$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIdCard_ErrMsg">
            <summary>
              查找类似 不是有效的身份证号。身份证号是15,18位数字或17位数字加X(x)。正确的如:330313198801010020 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIPv4">
            <summary>
              查找类似 ^([1-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))\.([0-9]|[1-9]\d|(1\d{2}|2[0-5][0-5]))$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIPv4_ErrMsg">
            <summary>
              查找类似 不是有效的IPv4的IP地址。正确的如:192.168.1.1 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIPv6">
            <summary>
              查找类似 ^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((: [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexIPv6_ErrMsg">
            <summary>
              查找类似 不是有效的IPv6的IP地址。正确的如:FE80:0000:0000:0000:AAAA:0000:00C2:0002 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexPhone">
            <summary>
              查找类似 ^1\d{10}$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexPhone_ErrMsg">
            <summary>
              查找类似 不是有效的中国手机号。正确的如:1305718888 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexTel">
            <summary>
              查找类似 ^\d{2,4}-\d{8}|\d{2,4}-\d{7}$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexTel_ErrMsg">
            <summary>
              查找类似 不是有效的中国电话。正确的如: 0511-4405222 或 571-82128822 或 21-87888822。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexURL">
            <summary>
              查找类似 ^[a-zA-z]+://[^\s]*$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexURL_ErrMsg">
            <summary>
              查找类似 不是有效的URL。正确的如: Http://www.hundsun.com/ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexZipCode">
            <summary>
              查找类似 ^[1-9]\d{5}(?!\d)$ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RegexZipCode_ErrMsg">
            <summary>
              查找类似 不是有效的邮编。正确的如:310013 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RotationSpeed_ErrMsg">
            <summary>
              查找类似 旋转速度必须100毫秒。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RowCellStyle_ErrMsg">
            <summary>
              查找类似 处理单元格显示颜色时找不到公有属性 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.RowCellStyle_ErrMsg2">
            <summary>
              查找类似 计算单元格显示颜色失败： 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SetAlphaChar_ErrMsg">
            <summary>
              查找类似 请设置alpha参数为字母字符。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SetBits_ErrMsg">
            <summary>
              查找类似 图片必须是32位带Alhpa通道的图片。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SetDateValue_ErrMsg">
            <summary>
              查找类似 开始日期值不能比结束日期值大。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SetValue_ErrMsg">
            <summary>
              查找类似 不支持的格式化类型。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ShowConfirm">
            <summary>
              查找类似 确认 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ShowError">
            <summary>
              查找类似 错误消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ShowTips">
            <summary>
              查找类似 提示消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ShowWarning">
            <summary>
              查找类似 警告消息 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Size_ErrMsg">
            <summary>
              查找类似 控件长宽都不能小于10 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.skinClose">
            <summary>
              查找类似 关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.skinMax">
            <summary>
              查找类似 最大化 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.skinMin">
            <summary>
              查找类似 最小化 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.skinRestore">
            <summary>
              查找类似 还原 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SortColumn_ErrMsg">
            <summary>
              查找类似 排序列索引不能大于数据源列，请重新设置排序列。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SortColumn_ErrMsg2">
            <summary>
              查找类似 当前数据源不包含排序列，请重新设置排序列。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.SpokeThickness_ErrMsg">
            <summary>
              查找类似 辐条粗细程度值必须大于1。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.String1">
            <summary>
              查找类似 MaxLength的值需要在{0}到{1}之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.TerminateTask">
            <summary>
              查找类似 正在终止任务... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.TextBox_Boder">
            <summary>
              查找类似 文本框边框不能为None 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Time_ErrMsg">
            <summary>
              查找类似 输入时间格式不正确，请重新输入 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.TimeIntergerValueBetweenFormat">
            <summary>
              查找类似 整型时间值必须在{0}至{1}之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Tip">
            <summary>
              查找类似 提示 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Total">
            <summary>
              查找类似 共 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.updateSize">
            <summary>
              查找类似 大小 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.VisibleColumnNames_ErrMsg">
            <summary>
              查找类似 VisibleColumnNames属性值只能是用逗号隔开的数字索引（或者属性名称）,结尾不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.VisibleColumnNames_ErrMsg2">
            <summary>
              查找类似 VisibleColumnNames属性值只能是用逗号隔开的数字索引（或者属性名称）,且列索引不能大于数据源列索引！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.VisibleColumnNames_ErrMsg3">
            <summary>
              查找类似 VisibleColumnNames属性值只能全部是用逗号隔开的数值（或者属性名称）！错误信息为： 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.WaitingMsg">
            <summary>
              查找类似 正在处理，请等待... 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.Year">
            <summary>
              查找类似 年 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Properties.Strings.ZeroError">
            <summary>
              查找类似 PageSize必须大于0！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.MiddleAppearance.FoucedColor">
            <summary>
            选中时的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.MiddleAppearance.FontColor">
            <summary>
            正常状态下的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.MiddleAppearance.FoucedFontColor">
            <summary>
            选中颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MyHeaderInfo.TabMoveMark">
            <summary>
            选项卡平移尺度
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase">
            <summary>
            gmform is a form that support custom theme
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.ActivateMdiChildForm(System.Windows.Forms.Form)">
            <summary>
            通过sendmessage方式激活子窗体以避免闪烁
            </summary>
            <param name="childToActivate"></param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.IsAboutToMinimize(HSUCF.Controls.ThemeForm.Win32.WinAPI.RECT)">
            <summary>
            判断所接收到的 wm_nc-calc-size 消息是否指示窗体即将最小化
            </summary>        
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.IsAboutToMaximize(HSUCF.Controls.ThemeForm.Win32.WinAPI.RECT)">
            <summary>
            判断所接收到的 wm_nc-calc-size 消息是否指示窗体即将最大化
            </summary>        
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.DrawInsetClientRect(System.Drawing.Graphics)">
            <summary>
            to make the client area to  have 3D view
            </summary>        
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.GetWindowRect">
            <summary>
            获取窗体矩形
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.IsMax">
            <summary>
            是否是最大化状态
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.XTheme">
            <summary>
            该类封装设置一个主题所需的信息，可以继承该类实现不同的主题
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.Resizable">
            <summary>
            是否可拖动改变窗体大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.SideResizeWidth">
            <summary>
            窗体边界大小，鼠标移动到该边界将变成指针形状，拖动可改变窗体大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.BackColor">
            <summary>
            窗体背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.BorderColor">
            <summary>
            边框颜色颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.BorderWidth">
            <summary>
            窗体边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.CaptionFont">
            <summary>
            标题栏字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.CaptionHeight">
            <summary>
            标题栏高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.CaptionBackColor">
            <summary>
            标题栏背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.Radius">
            <summary>
            窗体圆角程度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.Round">
            <summary>
            窗体圆角样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.ControlBoxOffset">
            <summary>
            控制按钮相对于右上角的偏移量
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.ControlBoxSpace">
            <summary>
            关闭/最大化/最小化按钮之间的距离，可以设置成负值使它们重叠
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.IconSize">
            <summary>
            标题栏图标尺寸
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.IconLeftMargin">
            <summary>
            标题栏图标与窗体左边框的距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.TextLeftMargin">
            <summary>
            标题栏文本左边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.CloseBoxSize">
            <summary>
            窗体关闭按钮大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.MaxBoxSize">
            <summary>
            窗体最大化/还原按钮的大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.MinBoxSize">
            <summary>
            窗体最小化按钮的大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.LockWindowBoxSize">
            <summary>
            锁定窗口按钮大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.LockWindowBox">
            <summary>
            是否显示锁定窗体按钮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.UserClientBounds">
            <summary>
            表示去掉自画的边框及标题栏后，剩下的可用的客户区区域，坐标相对于窗体左上角
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.UserClientSize">
            <summary>
            表示去掉自画的边框及标题栏后，剩下的可用的客户区大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Forms.ThemeFormBase.MdiBarBounds">
            <summary>
            表示MDI标签栏的区域，包括bottom-region
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.FormBase.ThemeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.FormBase.ThemeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.FormBase.ThemeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.FormBase.ThemeForm.ClientRectangle">
            <summary>
            获取窗口客户区位置和大小
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.FormBase.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.FormBase.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.FormBase.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.Theme.ThemeBase">
            <summary>
            该类封装设置一个主题所需的信息，可以继承该类实现不同的主题
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ThemeName">
            <summary>
            主题名称，用于标识主题，对主题进行简单描述
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.SideResizeWidth">
            <summary>
            窗体边界大小，鼠标移动到该边界将变成指针形状，拖动可改变窗体大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.BorderWidth">
            <summary>
            窗体边框大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionHeight">
            <summary>
            窗体标题栏高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.IconLeftMargin">
            <summary>
            标题栏图标与窗体左边框的距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.IconSize">
            <summary>
            标题栏图标尺寸
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.TextLeftMargin">
            <summary>
            标题栏文本左边距
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ControlBoxOffset">
            <summary>
            控制按钮（关闭按钮）相对于窗体右上角的偏移量
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CloseBoxSize">
            <summary>
            窗体关闭按钮的尺寸
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.MaxBoxSize">
            <summary>
            窗体最大化/还原按钮的大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.MinBoxSize">
            <summary>
            窗体最小化按钮的大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.LockWindowBoxSize">
            <summary>
            锁定窗口按钮大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ControlBoxSpace">
            <summary>
            关闭/最大化/最小化按钮之间的距离，可以设置成负值使它们重叠
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Radius">
            <summary>
            窗体圆角程度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.RoundedStyle">
            <summary>
            窗体圆角样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.UseDefaultTopRoundingFormRegion">
            <summary>
            是否使用默认的圆角样式，该样式为左上角和右上角圆角，
            最好在窗体边框较粗时才使用该样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.DrawCaptionIcon">
            <summary>
            是否在标题栏上绘制图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.DrawCaptionText">
            <summary>
            是否在标题栏上绘制文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ShowShadow">
            <summary>
            是否显示窗体阴影
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ShadowWidth">
            <summary>
            窗体阴影大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.UseShadowToResize">
            <summary>
            拖动窗体阴影是否可以改变窗体大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ShadowColor">
            <summary>
            阴影的颜色，可以设置成其他颜色而不一定是黑色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ShadowAValueDark">
            <summary>
            阴影从里到外是逐渐变浅的，这个值设置深色部分的透明度，ARGB中的A值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.ShadowAValueLight">
            <summary>
            阴影从里到外是逐渐变浅的，这个值设置浅色部分的透明度，ARGB中的A值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.SetClientInset">
            <summary>
            是否在客户区边界画线使其看起来有立体感
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionTextCenter">
            <summary>
            窗体标题栏文字是否居中显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.FormBorderColor">
            <summary>
            窗体边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.FormBorderOutterColor">
            <summary>
            窗体边框最外一像素的颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.FormBorderInnerColor">
            <summary>
            窗体边框第二最外像素的颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.FormBorderInmostColor">
            <summary>
            窗体边框其他部分颜色，如果窗体边框大小大于2，则其他像素将用此颜色画出
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionBackColorTop">
            <summary>
            标题栏颜色是从上到下渐变的，这个值设置上边的颜色值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionBackColorBottom">
            <summary>
            标题栏颜色是从上到下渐变的，这个值设置下边的颜色值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionFont">
            <summary>
            标题栏字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CaptionTextColor">
            <summary>
            标题栏文字颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.FormBackColor">
            <summary>
            窗体背景颜色，该值将覆盖窗体自带的BackColor属性值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.CloseBoxColor">
            <summary>
            窗体关闭按钮的颜色集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.MaxBoxColor">
            <summary>
            窗体最大化/还原按钮的颜色集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.MinBoxColor">
            <summary>
            窗体最小化按钮的颜色集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.LockWindowBoxColor">
            <summary>
            锁定窗口按钮的颜色集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_UseMsgToActivateChild">
            <summary>
            是否用SendMessage的方式切换子窗体，以避免子窗体切换时产生的闪烁
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_BarMargin">
            <summary>
            Mdi-Bar与窗体左、上、右边界的距离，只用到这三个值，Bottom值没用到。
            用这三个值来确定Mdi-Bar的宽度及其在窗体中的位置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_BarLeftPadding">
            <summary>
            内部左边空白，第一个标签将从这个空白距离之后开始
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_BarRightPadding">
            <summary>
            内部右边空白
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabHeight">
            <summary>
            标签高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabHeightActive">
            <summary>
            被选中的标签高度，可以设置成与TabHeight不一样的值，以突出显示被选中状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabAndTabSpace">
            <summary>
            标签之间的距离，设成负值可以使标签有重叠的效果
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabMaxWidth">
            <summary>
            标签的最大宽度，任何情况下标签都不能超过这个宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabNormalWidth">
            <summary>
            标签正常宽度，如果标签需要很短的宽度（比如20像素）就可以显示完上面的文字，
            但是Mdi-Bar上有足够的空间时，标签会以正常宽度（比如100像素）显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabMinWidth">
            <summary>
            标签最小宽度，当标签小于这个宽度时将被隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabSlopeWidth">
            <summary>
            标签梯度大小，标签可以不以矩形方式显示，而是有一个梯度/斜度。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabTopSpace">
            <summary>
            标签顶部空白，这个值用于参与计算Mdi-Bar高度，计算方式为：
            Mdi-Bar Height = BottomRegionHeight + TabHeight + TabTopSpace
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_ShowTabIcon">
            <summary>
            标签上是否显示子窗体图标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabActiveBackColorTop">
            <summary>
            选中状态的标签的上部背景色，与下部背景色不同时，标签背景色就有渐变效果
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabDeactiveBackColorTop">
            <summary>
            非选中状态的标签的上部背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabOutterBorderColor">
            <summary>
            标签外边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_TabInnerBorderColor">
            <summary>
            标签内边框颜色，这个颜色一般具有一定的透明度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_ShowNewTabBtn">
            <summary>
            是否显示默认的新建标签按钮(NewTabBtn)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_NewTabBtnBottomSpace">
            <summary>
            NewTabBtn与下边框的距离，这个值用来定位按钮的Y坐标
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_NewTabBtnColor">
            <summary>
            按钮颜色集合
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.Theme.ThemeBase.Mdi_AlwaysShowListAllBtn">
            <summary>
            是否一直显示ListAllBtn，即使在没有标签被隐藏的情况下
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Forms.ThemeShadow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeShadow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.Forms.ThemeShadow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.MyGraphics.GraphicsPathHelper">
            <summary>
            提供产生各种路径的静态方法，比如圆角路径、关闭按钮上的x路径、+号路径
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.MyGraphics.RoundStyle">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController">
            <summary>
            该类处理mdi-bar的绘制及鼠标事件管理
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.CheckTabItemsWithOwnerMdiForm">
            <summary>
            同步_listTabItems与mdi主窗体实际存在的子form
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.CalculateSpaceForEachTab">
            <summary>
            为每个tab分配空间，如果tab数目太多，则有些会被隐藏
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.RenderTheBar(System.Drawing.Graphics)">
            <summary>
            重绘整个标签栏
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.MouseOperation(System.Drawing.Point,HSUCF.Controls.ThemeForm.SelfRenderControl.MouseOperationType)">
            <summary>
            处理鼠标事件。该方法会触发一些click事件，重刷一些按钮等
            </summary>
            <param name="location"></param>
            <param name="type"></param>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.Margin">
            <summary>
            use left,top,right to location the bar in owner form,
            the margin is from Form.ClientRectangle
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.BarHeight">
            <summary>
            the whole height of the bar, including bottom region, tab, tab-top-space
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.BarBottomRegionHeight">
            <summary>
            the region under the tabs
            </summary>
        </member>
        <!-- 对于成员“P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.BarLeftPadding”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.TabTopSpace">
            <summary>
            tab顶部与bar顶部的空间,这个值用来计算 BarHeight
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.TabSlopeWidth">
            <summary>
            每个标签的左右边界可以不是垂直的，而是都有一个斜度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.TabAndTabSpace">
            <summary>
            tab与tab之间的距离，用负值可以使tab有重叠的效果
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.NewTabBtnBottomSpace">
            <summary>
            按钮与Bar底部的距离
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.TabMinWidth">
            <summary>
            一个tab允许的最小宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiBarController.TabMaxWidth">
            <summary>
            一个tab允许的最大显示宽度
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem">
            <summary>
            该类表示一个单独的标签项
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.GetFullTextLength">
            <summary>
            返回全部显示该标签文本所需的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.GetFullShowTabWidth">
            <summary>
            返回显示全部文本时该tab所需的宽度,该宽度不超过bar-container
            规定的tabmaxwidth
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.form">
            <summary>
            该标签所对应的窗体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.FinalWidth">
            <summary>
            最终分配到的整个tab的宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.IsStillValid">
            <summary>
            表示所对应的form是否仍未被关闭
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.MdiGMTabItem.IsHidden">
            <summary>
            是否因空间不足而被隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.SelfRenderButton.Capture">
            <summary>
            是否在这个按钮上按下了鼠标未释放
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.SelfRenderButton.DrawForePathTwice">
            <summary>
            画两次可以加深颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ThemeForm.SelfRenderControl.SelfRenderButton.ClickSendBackOject">
            <summary>
            用于在click事件中传回数据
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST">
            <summary>
            Location of cursor hot spot returnet in WM_NCHITTEST.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows 
            (same as HTNOWHERE, except that the DefWindowProc function produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTTRANSPARENT">
            <summary>
            In a window currently covered by another window in the same thread 
            (the message will be sent to underlying windows in the same thread until one of them returns a code that is not HTTRANSPARENT).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTNOWHERE">
            <summary>
            On the screen background or on a dividing line between windows.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTCLIENT">
            <summary>In a client area.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTCAPTION">
            <summary>In a title bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTGROWBOX">
            <summary>In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTMENU">
            <summary>In a menu.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTHSCROLL">
            <summary>In a horizontal scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTVSCROLL">
            <summary>In the vertical scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTMINBUTTON">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTMAXBUTTON">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTLEFT">
            <summary>In the left border of a resizable window 
            (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTRIGHT">
            <summary>
            In the right border of a resizable window 
            (the user can click the mouse to resize the window horizontally).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTTOP">
            <summary>In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTTOPLEFT">
            <summary>In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTBOTTOM">
            <summary>	In the lower-horizontal border of a resizable window 
            (the user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTBOTTOMLEFT">
            <summary>In the lower-left corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTBOTTOMRIGHT">
            <summary>	In the lower-right corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTBORDER">
            <summary>In the border of a window that does not have a sizing border.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTCLOSE">
            <summary>In a Close button.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCHITTEST.HTHELP">
            <summary>In a Help button.</summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCCALCSIZE_PARAMS.rectNewForm">
            <summary>
            Contains the new coordinates of a window that has been moved or resized, that is, it is the proposed new window coordinates.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCCALCSIZE_PARAMS.rectOldForm">
            <summary>
            Contains the coordinates of the window before it was moved or resized.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCCALCSIZE_PARAMS.rectOldClient">
            <summary>
            Contains the coordinates of the window's client area before the window was moved or resized.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.NCCALCSIZE_PARAMS.lpPos">
            <summary>
            Pointer to a WINDOWPOS structure that contains the size and position values specified in the operation that moved or resized the window.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.MINMAXINFO.reserved">
            <summary>
            不用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.MINMAXINFO.maxSize">
            <summary>
            最大范围
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.MINMAXINFO.maxPosition">
            <summary>
            最大的放置点
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.MINMAXINFO.minTrackSize">
            <summary>
            最大拖动范围
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ThemeForm.Win32.WinAPI.MINMAXINFO.maxTrackSize">
            <summary>
            最小拖动范围，可用于限定的最小区域
            </summary>
        </member>
        <member name="M:HSUCF.Controls.UpdateNoticeForm.SetMessage(System.String,System.String)">
            <summary>
            设置弹窗信息
            </summary>
            <param name="size"></param>
            <param name="time"></param>
        </member>
        <member name="M:HSUCF.Controls.UpdateNoticeForm.ForceUpdate">
            <summary>
            强制更新
            </summary>
        </member>
        <member name="M:HSUCF.Controls.UpdateNoticeForm.NoticeForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            窗口关闭事件
            强制更新时，任何关闭原因都要更新
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.UpdateNoticeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.UpdateNoticeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.UpdateNoticeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IDic">
            <summary>
            该接口实现初始化字典控件的数据
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IDataSource`1">
            <summary>
            数据源接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HSUCF.Controls.IDataSource`1.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IDataSource`1.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSControlUtility">
            <summary>
            控件帮助工具类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSControlUtility.DisplayTextJoinStr">
            <summary>
            显示时候的连接符号
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSControlUtility.DisplayValueJoinStr">
            <summary>
            取值时候的连接符号（必须是单字符）
            Includes 、Excludes 、取值时使用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSControlUtility.CludesJoinStr">
            <summary>
            Includes和Excludes必须使用连接符号
            暂时不公开给开发人员属性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.Has(System.String[],System.String)">
            <summary>
            判断一个字符串数组是否完全包含一个字符串
            数据源不需要判断
            </summary>
            <param name="ss"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.CaculateWidth(System.Windows.Forms.Control,System.String)">
            <summary>
            计算控件宽度
            </summary>
            <param name="ctrl"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.CaculateHeight(System.Windows.Forms.Control,System.String)">
            <summary>
            计算控件高度
            </summary>
            <param name="ctrl"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.MeasureString(System.Windows.Forms.Control,System.String)">
            <summary>
            计算字体大小
            </summary>
            <param name="ctrl"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.IsDigit(System.Char)">
            <summary>
            判断是否是数字 
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.IsChinese(System.Char)">
            <summary>
            判断是否是汉字 
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.IsLetter(System.Char)">
            <summary>
            判断是否是字母 
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.CreateDataSource(System.Collections.Generic.List{System.String},System.Char)">
            <summary>
            将字符串集合转换成数据源
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.CreateDataSource(System.String,System.Char)">
            <summary>
            将字符串集合转换成数据源
            </summary>
            <param name="s"></param>
            <param name="splitChar"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.ListToDataTable``1(System.Collections.Generic.List{``0})">
            <summary>
            将泛类型集合List类转换成DataTable
            </summary>
            <param name="list">泛类型集合</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSControlUtility.Split(System.String,System.String)">
            <summary>
            字符串拆分
            </summary>
            <param name="str"></param>
            <param name="joinStr"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.ComboBoxStringEqualType">
            <summary>
            字符串检查方式
            Strict:严格 ，区分大小写
            Ignore:不严格，忽略大小写
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DataTableToListModel`1">
            <summary>
            DataTable转换为List&lt;Model&gt;
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSControlScaleBase">
            <summary>
            恒生扩展控件的缩放总接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSControlScaleBase.ControlScale(System.Drawing.SizeF)">
            <summary>
            实现控件缩放接口
            </summary>
            <param name="factor">缩放因子</param>
        </member>
        <member name="T:HSUCF.Controls.HSCategoryAttribute">
            <summary>
            恒生系列控件新增或重写属性在属性窗口中的分类
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSControl_THEME">
            <summary>
            系统主题
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSButton_CommandType">
            <summary>
            按钮操作类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.New">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Modify">
            <summary>
            修改
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Abolish">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.PrintPreview">
            <summary>
            预览
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Stat">
            <summary>
            统计
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Computer">
            <summary>
            计算
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Help">
            <summary>
            帮助
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Submit">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Signin">
            <summary>
            签收
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Popup">
            <summary>
            弹出
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Descend">
            <summary>
            下发
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.RAudit">
            <summary>
            反审核
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Write">
            <summary>
            填写
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Start">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Stop">
            <summary>
            停用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Download">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.ExportExcel">
            <summary>
            导出Excel
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.ExportWord">
            <summary>
            导出Word
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.ImportData">
            <summary>
            导入数据
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.ClearData">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.ExportTemplate">
            <summary>
            导出模板
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.View">
            <summary>
            视图
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Build">
            <summary>
            建立
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Home">
            <summary>
            主页
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Linkage">
            <summary>
            联动
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.System">
            <summary>
            系统
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Tool">
            <summary>
            工具
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Thaw">
            <summary>
            解冻
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Freeze">
            <summary>
            冻结
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.PwdReset">
            <summary>
            密码重置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.PwdSearch">
            <summary>
            密码查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.PwdSet">
            <summary>
            密码设置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.WorksiteSet">
            <summary>
            站点设置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.WorksiteSearch">
            <summary>
            站点查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.RoleSearch">
            <summary>
            角色查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.RoleSet">
            <summary>
            角色设置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.MenuSearch">
            <summary>
            菜单查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.QueryToEnd">
            <summary>
            查询至表尾
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.CleanAndQuery">
            <summary>
            清空并查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.QueryMac">
            <summary>
            查询Mac地址
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Confirm">
            <summary>
            确认
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Set">
            <summary>
            设置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.StopQuery">
            <summary>
            停止查询
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Unfold">
            <summary>
            展开
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Fold">
            <summary>
            折叠
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.UnfoldTree">
            <summary>
            展开树
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.FoldTree">
            <summary>
            折叠树
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Path">
            <summary>
            选择路径
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Buttom">
            <summary>
            下
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSButton_CommandType.Other">
            <summary>
            其它(没有图标)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IKeyProcess.KeyProcess(System.Windows.Forms.Keys)">
            <summary>
            按键处理，返回是否需要继续处理按键消息
            </summary>
            <param name="key">按键</param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.CommonKeyProcess">
            <summary>
            实现输入控件的按键处理
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ApiHook">
            <summary>
            API钩子
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ApiHook.Hook">
            <summary>
            安装钩子
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ApiHook.Unhook">
            <summary>
            卸载钩子
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ApiHook.MouseHookProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            鼠标钩子
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ApiHook.Application_ApplicationExit(System.Object,System.EventArgs)">
            <summary>
            应用程序关闭事件方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HSUCF.Controls.CurrencyUtility">
            <summary>
            金额相关工具类
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.A2CConverter">
            <summary>
            阿拉伯金额转换为中国的金额
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.GetTraditionalChineseAmount(System.Decimal,System.String)">
            <summary>
            返回人民币繁体字样的金额;如果小数位在上位内这以毫厘分的形式显示或者就以中文大写数字显示
            </summary>
            <param name="amount">阿拉伯数字金额值</param>
            <param name="unit">单位</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="P:HSUCF.Controls.CurrencyUtility.IsUseA2CLimitedConverter">
            <summary>
            阿拉伯数字转换中文大写的时候使用O32类型的转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter">
            <summary>
            阿拉伯金融转换为中国金额（只支持到万亿，之后不支持）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.CTN">
            <summary>
            中文0-9
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.A_CTAU">
            <summary>
            大写金额
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.P_CTAU">
            <summary>
            大写金额单位
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.CONST_PARSE_MAX_INTEGRER_LENGTH">
            <summary>
            整数部分解析最大长度，目前是万亿
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.CONST_PARSE_MAX_DECIMAL_LENGTH">
            <summary>
            小数部分解析最大长度，目前是到厘
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.GetTraditionalChineseAmount(System.Decimal)">
            <summary>
            返回人民币繁体字样的金额
            </summary>
            <param name="value">阿拉伯数字金额值</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.ConvertIntToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换整数为繁体字样 
            </summary>
            <param name="capValue">整数值</param>
            <returns>返回整数的繁体金额</returns> 
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换小数为繁体字样
            </summary>
            <param name="capValue">小数值</param>
            <param name="addZero">是否增加零位</param>
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmountLess4(System.String,System.Boolean)">
            <summary>
            针对小于等于4位小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter">
            <summary> 
            阿拉伯金额转换为中国的金额
            </summary>
            <remarks> 
            http://wuu.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99
            http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E6%95%B0%E5%AD%97
            </remarks> 
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.CTN">
            <summary>
            Chinese Traditional Numbers
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.A_CTAU">
            <summary>
            All Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.P_CTAU">
            <summary>
            Part Chinese Traditional Amount Unit
            </summary>
        </member>
        <!-- 对于成员“M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertIntToTraditionalAmount(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmountLess4(System.String,System.Boolean)">
            <summary>
            针对小于等于4位小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseAmountConverter.GetTraditionalChineseAmount(System.Decimal)">
            <summary>
            返回人民币繁体字样的金额
            </summary>
            <param name="value">阿拉伯数字金额值</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="T:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter">
            <summary> 
            阿拉伯金额转换为中国的金额
            </summary>
            <remarks> 
            http://wuu.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99
            http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E6%95%B0%E5%AD%97
            </remarks> 
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.CTN">
            <summary>
            Chinese Traditional Numbers
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.A_CTAU">
            <summary>
            All Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="F:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.P_CTAU">
            <summary>
            Part Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertIntToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换整数为繁体字样 
            </summary>
            <param name="capValue">整数值</param>
            <returns>返回整数的繁体金额</returns> 
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.CurrencyUtility.ArabiaToChineseNumberConverter.GetTraditionalChineseAmount(System.Decimal,System.String)">
            <summary>
            返回人民币繁体字样的数字
            </summary>
            <param name="value">阿拉伯数字值</param>
            <returns>返回人民币繁体字样的数字</returns>
        </member>
        <member name="T:HSUCF.Controls.DateTimePickerUtility">
            <summary>
            DateTimePicker工具类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DateTimePickerUtility.RefreshText(HSUCF.Controls.hsDateTimePicker)">
            <summary>
            刷新文本（Text属性）；主要用于解决Value和Text值在Load中的不同步问题
            </summary>
            <param name="dtp"></param>
        </member>
        <member name="T:HSUCF.Controls.GDIUtility">
            <summary>
            GDI 画图工具类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GDIUtility.DrawWaveLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            画波浪线
            </summary>
            <param name="g">画布</param>
            <param name="x1">起始点X坐标</param>
            <param name="y1">起始点Y</param>
            <param name="x2">终点X坐标</param> 
            <param name="lineColor">线条的颜色</param>
            <param name="lineWidth">线条宽度</param>
            <param name="step">决定波长大小</param>
            <param name="space">决定波峰大小</param>
        </member>
        <member name="M:HSUCF.Controls.GDIUtility.DrawFocusCues(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            绘制聚焦宽度
            </summary>
            <param name="HWnd">消息窗口的句柄，通过它回去设备接口</param>
            <param name="width">聚焦宽度</param>
            <param name="height">聚焦高度</param>   
        </member>
        <member name="T:HSUCF.Controls.KeyboardKeys">
            <summary>
            键盘按键的值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.KeyboardKeys.KEY_ALT">
            <summary>
            Alt键的值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ReadOnlyUtility">
            <summary>
            控件只读功能帮助函数；控件只读需要屏蔽鼠标消息，需要屏蔽键盘操作（除了Tab,UP,DOWN,ENTER键）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ReadOnlyUtility.IsReadOnlyKey(System.Windows.Forms.Keys)">
            <summary>
            是否是控件只读时需要过滤的键盘代码
            </summary>
            <param name="keyData">键盘代码或修饰符</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ReadOnlyUtility.IsReadOnlyMouseMessage(System.Int32)">
            <summary>
            是否是控件只读时需要过滤的鼠标类型的消息号
            </summary>
            <param name="msg">Windows消息号</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ReadOnlyUtility.IsFocusOnReadOnlyMouseMessage(System.Int32)">
            <summary>
            是否是控件只读时需要设置焦点的鼠标类型的消息号
            </summary>
            <param name="msg">Windows消息号</param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.WindowsAPIUtility">
            <summary>
            Windows API 函数，如USER32.DLL内的函数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.WindowsAPIUtility.SetTimer(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            设置定时器
            </summary>
            <param name="hWnd"></param>
            <param name="nIDEvent"></param>
            <param name="uElapse"></param>
            <param name="lpTimerFunc"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.WindowsAPIUtility.KillTimer(System.Runtime.InteropServices.HandleRef,System.Int32)">
            <summary>
            关闭定时器
            </summary>
            <param name="hwnd"></param>
            <param name="idEvent"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.WindowsAPIUtility.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.WindowsAPIUtility.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            释放设备接口
            </summary>
            <param name="hWnd"></param>
            <param name="hDC"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.WindowsAPIUtility.PostMessage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            发送键值
            </summary>
            <param name="hwnd"></param>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.RequiredDisplay">
            <summary>
            必输入项提示标签以及它显示逻辑
            （目前提示是红色的 *）
            </summary>
        </member>
        <!-- 对于成员“M:HSUCF.Controls.RequiredDisplay.#ctor(System.Windows.Forms.Control,System.Func{System.Boolean})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:HSUCF.Controls.RequiredDisplay.requiredLogicFunc”忽略有格式错误的 XML 注释 -->
        <member name="F:HSUCF.Controls.RequiredDisplay.parentCtrl">
            <summary>
            必输控件的容器控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RequiredDisplay.requiredCtrl">
            <summary>
            必输控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RequiredDisplay.lblRequired">
            <summary>
            必输项提示标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.RequiredDisplay.ShowRequiredLabel">
            <summary>
            显示必必输项提示标签（目前提示是红色的 *）
            </summary>
            <returns></returns>  
        </member>
        <member name="M:HSUCF.Controls.RequiredDisplay.HideRequiredLabel">
            <summary>
            隐藏必输项提示标签
            </summary>
        </member>
        <member name="T:HSUCF.Controls.EncodingUtility">
            <summary>
            编码工具类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.EncodingUtility.GetByteCount(System.String)">
            <summary>
            得到字符串字节数。除了ASCII码值为1个字节，其他都为2字节处理
            </summary>
            <param name="s">指定的字符串</param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.WindowsMessage">
            <summary>
            The class contains const value of windows message.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_NCCALCSIZE">
            <summary>
            当某个窗口的客户区域必须被核算时发送此消息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_SYSCOLORCHANGE">
            <summary>
            当系统颜色改变时，发送此消息给所有顶级窗口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_ENABLE">
            <summary>
            改变enable状态 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_SETFOCUS">
            <summary>
            获得焦点后
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_KILLFOCUS">
            <summary>
            失去焦点 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_NCACTIVATE">
            <summary>
            此消息发送给某个窗口 仅当它的非客户区需要被改变来显示是激活还是非激活状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MOVING">
            <summary>
            移动时
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WS_EX_TRANSPARENT">
            <summary>
            控件透明样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_SIZE">
            <summary>
            SIZE改变时的通知消息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_SIZING">
            <summary>
            当用户正在调整窗口大小时发送此消息给窗口；
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_SYSCOMMAND">
            <summary>
            命令消息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_TIMER">
            <summary>
            计时器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_ERASEBKGND">
            <summary>
            背景绘制
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function. 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_NCPAINT">
            <summary>
            绘制系统区域
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed. 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus. 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed. 
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_MOUSEMOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:HSUCF.Controls.WindowsMessage.WM_ACTIVATEAPP">
            <summary>
            Sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.A window receives this message through its WindowProc function.
            http://msdn.microsoft.com/en-us/library/ms632614.aspx
            </summary>
        </member>
        <member name="T:HSUCF.Controls.EnvironmentUtility">
            <summary>
            环境工具类
            </summary>
        </member>
        <member name="P:HSUCF.Controls.EnvironmentUtility.IsWindowsNT6Upper">
            <summary>
            判断操作系统是否为WindowsVista以上
            </summary>
        </member>
        <member name="M:HSUCF.Controls.KeyBoard.Key.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.KeyBoard.Key.Draw(System.Drawing.Graphics)">
            <summary>
            此方法用于根据传入的参数绘制控件界面
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.KeyBoard.Key.IsMousePressed">
            <summary>
            是否鼠标按下该键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoard.Key.IsMouseHover">
            <summary>
            是否鼠标经过该键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoard.AlphaKey.IsCapsLock">
            <summary>
            是否大写锁定
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoard.AlphaKey.IsShift">
            <summary>
            是否按住Shift键盘
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoard.PairCharKey.IsShift">
            <summary>
            是否按住Shift键盘
            </summary>
        </member>
        <member name="T:HSUCF.Controls.KeyBoardPopupForm">
            <summary>
            全键盘弹出窗体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PopupFormBase">
            <summary>
            置顶窗基类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.KeyBoardPopupForm.#ctor(System.Windows.Forms.Control)">
            <summary>
             全键盘弹出窗体
            </summary>
            <param name="targetControl">目标输入控件，一般为文本框，数值框类控件</param>
        </member>
        <member name="F:HSUCF.Controls.KeyBoardPopupForm.targetInputControl">
            <summary>
            目标输入控件
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.KeyBoardPopupForm.isFirstLoad">
            <summary>
            时候初次加载当前窗体
            </summary>
        </member>
        <member name="M:HSUCF.Controls.KeyBoardPopupForm.RefreshAllKeysColor">
            <summary>
            刷新按钮的颜色值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.KeyBoardPopupForm.RandomKeyText">
            <summary>
            设置当前窗体内的按键码为随机值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.KeyBoardPopupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.KeyBoardPopupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.KeyBoardPopupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.IsRandom">
            <summary>
            是否每次打开窗体都随机显示按键（对于每一行）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.CloseIconRect">
            <summary>
            关闭按钮的矩形区域
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.FormBeginBackColor">
            <summary>
            窗体背景色的开始的渐变色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.FormEndBackColor">
            <summary>
            窗体背景色的结束的渐变色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.FormCloseNormalColor">
            <summary>
            窗体关闭按钮的正常状态的颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.KeyBoardPopupForm.FormCloseHoverColor">
            <summary>
            窗体关闭按钮的正常状态的颜色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NoRepeatRandomHelper">
            <summary>
            随机数帮助器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDataTimeEdit">
            <summary>
            带标签的日期时间范围组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataTimeEdit.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDataTimeEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDataTimeEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsDataTimeEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDataTimeEdit.CloseUp">
            <summary>
             当下拉日历被关闭并消失时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDataTimeEdit.DropDown">
            <summary>
            当显示下拉日历时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDataTimeEdit.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDataTimeEdit.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelComboBox">
            <summary>
            带标签的下拉控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBox.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.SetRequiredVisible">
            <summary>
            设置必输项前面的红星是否显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.GetSelectItem">
            <summary>
            获取选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.GetSelectItem``1">
            <summary>
            获取选中项
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.GetSelectIndex">
            <summary>
            获取选中索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBox.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.hsLookUpEdite1_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            值发生改变时需要自动解锁
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelComboBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelComboBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.Excludes">
            <summary>
            排除项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.Includes">
            <summary>
            包含项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.ItemHeight">
            <summary>
            设置下拉可见项数目
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.DataSourceEx">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.DataSource">
            <summary>
            数据源
            如果是第一次加载或者数据源有变化，请调用这个方法
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.Value">
            <summary>
            取值、赋值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.VisibleColumnNames">
            <summary>
            下拉列表要包含显示的数据项索引列表，以','分隔
            比如"0,1"代表只显示数据源中的第0列和第1列，其它列则隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.InsertNullItem">
            <summary>
            是否添加空行
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelComboBox.AllItems">
            <summary>
            该属性提供给测试性能组用
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.BeforeShowDropDown">
            <summary>
            下拉框展开前事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.ValueChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.TextChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.KeyDown">
            <summary>
            下拉框键盘按下事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.KeyPress">
            <summary>
            下拉框展开前事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelComboBox.DrawRowEvent">
            <summary>
            绘制行事件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimeEdit.CONST_DateIntegerFormat">
            <summary>
            整型日期格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimeEdit.CONST_TimeIntegerFormat">
            <summary>
            整型时间格式化字符串
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.SetRequiredVisible">
            <summary>
            设置必输项前面的红星是否显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.hsDateTimePicker1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.hsDateTimePicker1_CloseUp(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.hsDateTimePicker1_DropDown(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimeEdit.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.hsDateTimePicker1_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.ClearDisplayText">
            <summary>
            清空显示文本使日期的显示为空
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimeEdit.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimeEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimeEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.DateIntegerValue">
            <summary>
             整型日期值，如果复选框显示而且未选中复选框则返回-1;它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要小于等于控件本身的能支持的最大值[DateTimePicker.MaximumDateTime]
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.TimeIntegerValue">
            <summary>
             整型时间值，如果复选框显示而且未选中复选框则返回-1；它的值需要在000000和235959之间。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.Value">
            <summary>
            DateTimePicker的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.Format">
            <summary>
            日期和时间格式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.CustomFormat">
            <summary>
            自定义日期/时间格式字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.MaxDate">
            <summary>
            选择的最大日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.MinDate">
            <summary>
            选择的最小日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.AllowEmpty">
            <summary>
            是否允许为空或是否运行无效值
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimeEdit.CloseUp">
            <summary>
             当下拉日历被关闭并消失时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimeEdit.DropDown">
            <summary>
            当显示下拉日历时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimeEdit.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimeEdit.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimeEdit.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimeEdit.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelMultiComboBox">
            <summary>
            带标签的下拉控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiComboBox.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.SetRequiredVisible">
            <summary>
            设置必输项前面的红星是否显示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.GetSelectItems">
            <summary>
            获取选中项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.GetSelectItems``1">
            <summary>
            获取选中项
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.DrawBorderForControl(System.Windows.Forms.Control)">
            <summary>
            绘制控件边框右侧圆角
            </summary>
            <param name="control"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiComboBox.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiComboBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiComboBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.Excludes">
            <summary>
            排除项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.Includes">
            <summary>
            包含项，以','隔开
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.ItemHeight">
            <summary>
            设置下拉可见项数目
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.DataSourceEx">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.DataSource">
            <summary>
            数据源
            如果是第一次加载或者数据源有变化，请调用这个方法
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.KeyName">
            <summary>
            主键字段或属性名称
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.Value">
            <summary>
            取值、赋值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.VisibleColumnNames">
            <summary>
            下拉列表要包含显示的数据项索引列表，以','分隔
            比如"0,1"代表只显示数据源中的第0列和第1列，其它列则隐藏
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.ColumnsWidth">
            <summary>
            每列显示长度，不足长度则用空格补齐
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.AllItems">
            <summary>
            该属性提供给测试性能组用
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiComboBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiComboBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiComboBox.BeforeShowDropDown">
            <summary>
            下拉框展开前事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiComboBox.ValueChanged">
            <summary>
            用户自定义选中值改变事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiComboBox.ErrorMessage">
            <summary>
            为空时的错误提示信息
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelRangeDateTimeEdit">
            <summary>
            带标签的日期时间范围组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.CONST_DateIntegerFormat">
            <summary>
            整型日期格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.CONST_TimeIntegerFormat">
            <summary>
            整型时间格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.DateCustomFormat">
            <summary>
            日期的显示格式字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.TimeCustomFormat">
            <summary>
            时间的显示格式字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.ctrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.SetDateValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法设置日期范围
            </summary>
            <param name="beginDateValue">开始日期值</param>
            <param name="endDateValue">结束日期值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.SetTimeValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法设置时间范围
            </summary>
            <param name="beginTimeValue">开始时间值</param>
            <param name="endTimeValue">结束时间值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.SetValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法可以自动检测当前控件的是日期范围或时间范围
            </summary>
            <param name="beginValue">开始值</param>
            <param name="endValue">结束值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimeEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimeEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.BeginDateValue">
            <summary>
             整型开始日期值,它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要小于等于EndDateValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EndDateValue">
            <summary>
             整型结束日期值,它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要大于BeginDateValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.BeginTimeValue">
            <summary>
             整型开始时间值,它的值需要在000000和235959之间，而且它的值需要小于等于EndTimeValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EndTimeValue">
            <summary>
             整型结束时间值,它的值需要在000000和235959之间，而且它的值需要大于BeginTimeValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.BeginValue">
            <summary>
            DateTimePicker的开始值,该值需要小于等于EndValue,而且需要在最大，最小值之间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.EndValue">
            <summary>
            DateTimePicker的结束值,该值需要大于等于BeginValue,而且需要在最大，最小值之间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.FormatType">
            <summary>
            日期和时间格式类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.Format">
            <summary>
            日期和时间格式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.MaxDate">
            <summary>
            选择的最大日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.MinDate">
            <summary>
            选择的最小日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.Checked">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.ShowCheckBox">
            <summary>
            是否显示一个复选框
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.BeginValueChanged">
            <summary>
            当开始DateTimePicker的日期时间的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.EndValueChanged">
            <summary>
            当开始DateTimePicker的日期时间的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimeEdit.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimeEdit.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelDateTimePicker">
            <summary>
            带标签的日期时间组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.CONST_DateIntegerFormat">
            <summary>
            整型日期格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.CONST_TimeIntegerFormat">
            <summary>
            整型时间格式化字符串
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.Internal_IsSkipNextControlByEnter">
            <summary>
            这个属性内部用来表示是否启用Enter键盘跳转，主要用于临时不启用Enter键盘跳转开关
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.hsDateTimePicker1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.hsDateTimePicker1_CloseUp(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.hsDateTimePicker1_DropDown(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.hsDateTimePicker1_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.ClearDisplayText">
            <summary>
            清空显示文本使日期的显示为空
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDateTimePicker.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDateTimePicker.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.DateTimePickerBackColor">
            <summary>
            DateTimePicker1的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.DateTimePickerForeColor">
            <summary>
            DateTimePicker的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.DateTimePickerFont">
            <summary>
            DateTimePicker的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.DateIntegerValue">
            <summary>
             整型日期值，如果复选框显示而且未选中复选框则返回-1;它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要小于等于控件本身的能支持的最大值[DateTimePicker.MaximumDateTime]
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.TimeIntegerValue">
            <summary>
             整型时间值，如果复选框显示而且未选中复选框则返回-1；它的值需要在000000和235959之间。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Value">
            <summary>
            DateTimePicker的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Format">
            <summary>
            日期和时间格式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.CustomFormat">
            <summary>
            自定义日期/时间格式字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.Checked">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.ShowCheckBox">
            <summary>
            是否显示一个复选框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.ShowUpDown">
            <summary>
            是否使用数值调节钮控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.DropDownAlign">
            <summary>
            控件上下拉日历的对齐方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.MaxDate">
            <summary>
            选择的最大日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.MinDate">
            <summary>
            选择的最小日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.AllowEmpty">
            <summary>
            是否允许为空或是否运行无效值
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.CloseUp">
            <summary>
             当下拉日历被关闭并消失时发生。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.DropDown">
            <summary>
            当显示下拉日历时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDateTimePicker.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDateTimePicker.IsWindowsNT5">
            <summary>
            判断操作系统是否为WindowsXP/Windows2003
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelDomainUpDown">
            <summary>
            带标签的对象的UpDown组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDomainUpDown.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelDomainUpDown.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDomainUpDown.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.hsDomainUpDown1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.hsDomainUpDown1_SelectedItemChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDomainUpDown.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelDomainUpDown.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelDomainUpDown.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DomainUpDownForeColor">
            <summary>
            DomainUpDown的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DomainUpDownBackColor">
            <summary>
            DomainUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DisabledDomainUpDownBackColor">
            <summary>
            DomainUpDown不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DisabledDomainUpDownForeColor">
            <summary>
            DomainUpDown不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DomainUpDownFont">
            <summary>
            DomainUpDown的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DomainUpDownItems">
            <summary>
            DomainUpDown的Items
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Value">
            <summary>
            DomainUpDown的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.DomainUpDownUnit">
            <summary>
            DomainUpDown的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Sorted">
            <summary>
            获取或设置一个值，该值指示项集合是否排序。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.Wrap">
            <summary>
            获取或设置一个值，该值指示如果用户继续滚动时超过了列表的末尾，项的集合是否继续第一项或最后一项。默认值为 false。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.SelectedIndex">
            <summary>
            获取或设置选定项的索引值。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelDomainUpDown.SelectedItem">
            <summary>
            获取或设置基于集合中选定项的索引值的选定项。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelDomainUpDown.SelectedItemChanged">
            <summary>
            在更改SelectedItem 属性后发生。
            </summary> 
        </member>
        <member name="T:HSUCF.Controls.hsLabelNumericUpDownBak">
            <summary>
            带标签的数值组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.BOTTOM_CHINESE_NUMBER_SPACE">
            <summary>
            底部中文显示的是时候默认的分隔高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.chineseNumberLabel">
            <summary>
            中文金额提示标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToInt16">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToInt32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToInt64">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToFloat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.RefreshChineseNumberVisibility">
            <summary>
            刷新中文大写显示的可见性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ShowChineseNumerLabelForSpeical">
            <summary>
            显示中文大写（特殊的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ShowChineseNumerLabel">
            <summary>
            显示中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HideChineseNumerLabel">
            <summary>
            隐藏中文大写
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ShowChineseNumerLabelEx">
            <summary>
            显示中文大写（一般的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.HideChineseNumerLabelEx">
            <summary>
            隐藏中文大写（一般的panel)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.AdjustHeight">
            <summary>
            矫正控件的高度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.hsNumericUpDown1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.hsNumericUpDown1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.hsNumericUpDown1_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.lblUnit_TextChanged(System.Object,System.EventArgs)">
            <summary>
            单位文本变化事件，通过它自动变化单位的宽度大小
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelNumericUpDownBak.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelNumericUpDownBak.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.NumericUpDownForeColor">
            <summary>
            NumericUpDown的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.NumericUpDownBackColor">
            <summary>
            NumericUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.DisabledNumericUpDownBackColor">
            <summary>
            NumericUpDown不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.DisabledNumericUpDownForeColor">
            <summary>
            NumericUpDown不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.NumericUpDownFont">
            <summary>
            NumericUpDown的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.IsAssociateUnitAndChineseNumber">
            <summary>
            是否自动关联单位和中文大写
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Value">
            <summary>
            NumericUpDown的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.NumericUpDownUnit">
            <summary>
            NumericUpDown的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.MaxAllow">
            <summary>
            是否允许到达最大值,默认值是false
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.MinAllow">
            <summary>
            是否允许到达最小值,默认值是true
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Maximum">
            <summary>
            最大值，默认值是79228162514264337593543950335。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Minimum">
            <summary>
            最小值，默认值是0。其中只有在数值范围没有设定的时候（即NumericRangeType设置为Any）才能设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.DecimalPlaces">
            <summary>
            获取或设置要显示的十进制小数位数,默认值为 0,只有在数值范围设定为的Float,PFloat,NFloat,Decimal,PDecimal,Decimal,Any时候才能设置小数位数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.DataRangeType">
            <summary>
            数值范围类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.Increment">
            <summary>
            获取或设置单击向上或向下按钮时，数字显示框（也称作 up-down 控件）递增或递减的值。
             单击数字显示框上的向上或向下按钮时 System.Windows.Forms.NumericUpDown.Value 属性要递增或递减的值。默认值为1。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.ShowChineseNumberInGotFocus">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.ShowChineseNumber">
            <summary>
            是否提示中文样式的金额,默认值不显示
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.ChineseNumberAlign">
            <summary>
            中文样式的金额的显示位置,默认是控件底部下
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.ChineseNumberOffset">
            <summary>
            大写金额提示信息显示的位置偏移
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelNumericUpDownBak.ThousandsSeparator">
            <summary>
             获取或设置一个值，该值指示在适当的时候数字显示框（也称作 up-down 控件）中是否显示千位分隔符。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.ValueChanged">
            <summary>
            当Value 属性更改后发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelNumericUpDownBak.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ChineseNumberAlign">
            <summary>
            中文金额的相对位置对齐方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ChineseNumberAlign.Top">
            <summary>
            上边缘
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ChineseNumberAlign.Bottom">
            <summary>
            下边缘
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ChineseNumberAlign.Left">
            <summary>
            左边缘
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ChineseNumberAlign.Right">
            <summary>
            右边缘
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericRangeType">
            <summary>
            数值范围类型（用于规范数值在某一范围内）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.PInt16">
            <summary>
            正短整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.PInt32">
            <summary>
            正整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.PInt64">
            <summary>
            正长整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.PFloat">
            <summary>
            正浮点型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.PDecimal">
            <summary>
            正Decimal
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.NInt16">
            <summary>
            负短整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.NInt32">
            <summary>
            负整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.NInt64">
            <summary>
            负长整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.NFloat">
            <summary>
            负浮点型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.NDecimal">
            <summary>
            正Decimal
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Int16">
            <summary>
            正负短整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Int32">
            <summary>
            正负整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Int64">
            <summary>
            正负长整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Float">
            <summary>
            正负浮点型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Decimal">
            <summary>
            正负Deciaml
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeType.Any">
            <summary>
            任意十进制数类型（没规定大小范围）
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LabelInputDesigner">
            <summary>
            带标签的输入性控件的设计器
            不允许上下调整控件大小
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ConnectorStringConverter">
            <summary>
            连接符转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLinkLabel">
            <summary>
            可链接标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLinkLabel.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLinkLabel.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLinkLabel.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLinkLabel.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLinkLabel.LinkColor">
            <summary>
            链接颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLinkLabel.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelVerificationCodeTextBox">
            <summary>
            验证码输入组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelVerificationCodeTextBox.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.hsPictureBox1_Click(System.Object,System.EventArgs)">
            <summary>
            单击图片事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.GetLimitedRandomString">
            <summary>
            得到限制个数的随机字符串 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.BindImageForRandom">
            <summary>
            随机生成验证码图片绑定到图片控件上
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.GetLimitedSpecString">
            <summary>
            得到指定限制个数的指定字符串 
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.BindImageForSpecString">
            <summary>
            通过指定字符串生成验证码图片绑定到图片控件上
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.BuildImageByVerifyCode(System.String)">
            <summary>
            根据验证码生成图片
            </summary>
            <param name="verifyCode">验证码</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.BindImageByDiffMode">
            <summary>
            根据不同模式（随机，指定字符串）绑定新的图片
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelVerificationCodeTextBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelVerificationCodeTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelVerificationCodeTextBox.isSkipNextControl">
            <summary>
            获取或设置一个值，该值指示是否跳转到上或下一个控件，默认是启用跳转。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelVerificationCodeTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelVerificationCodeTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.DisplayCount">
            <summary>
            验证码字符的个数,默认为4个字符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.IsRandom">
            <summary>
            验证码为随机生成或指定字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.SpecString">
            <summary>
            当不是随机生成的验证码的时候用来生成验证码的指定字符串
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.VerificationCodeClick">
            <summary>
            当验证码图片被单击时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.TextBoxBackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.Value">
            <summary>
            TextBox的文本
            </summary> 
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelVerificationCodeTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelTrackerBar">
            <summary>
            带标签的对象的TrackBar组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTrackerBar.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelTrackerBar.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTrackerBar.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTrackerBar.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelTrackerBar.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelTrackerBar.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelTrackerBar.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.TrackBarBackColor">
            <summary>
            DomainUpDown的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.DisabledTrackBarBackColor">
            <summary>
            TrackBar不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.TrackBarUnit">
            <summary>
            TrackBar的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.Value">
            <summary>
            获取或设置表示跟踪条上滚动框的当前位置的数值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelTrackerBar.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelRangeDateTimePicker">
            <summary>
            带标签的日期时间范围组合控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.CONST_DateIntegerFormat">
            <summary>
            整型日期格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.CONST_TimeIntegerFormat">
            <summary>
            整型时间格式化字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.DateCustomFormat">
            <summary>
            日期的显示格式字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.TimeCustomFormat">
            <summary>
            时间的显示格式字符串
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.ctrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.SetDateValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法设置日期范围
            </summary>
            <param name="beginDateValue">开始日期值</param>
            <param name="endDateValue">结束日期值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.SetTimeValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法设置时间范围
            </summary>
            <param name="beginTimeValue">开始时间值</param>
            <param name="endTimeValue">结束时间值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.SetValue(System.Int32,System.Int32)">
            <summary>
            同时设置开始值和结束值，该方法可以自动检测当前控件的是日期范围或时间范围
            </summary>
            <param name="beginValue">开始值</param>
            <param name="endValue">结束值</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeDateTimePicker.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeDateTimePicker.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.BeginDateValue">
            <summary>
             整型开始日期值,它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要小于等于EndDateValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EndDateValue">
            <summary>
             整型结束日期值,它的值需要在当前控件的MinDate和MaxDate之间，而且它的值需要大于BeginDateValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.BeginTimeValue">
            <summary>
             整型开始时间值,它的值需要在000000和235959之间，而且它的值需要小于等于EndTimeValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EndTimeValue">
            <summary>
             整型结束时间值,它的值需要在000000和235959之间，而且它的值需要大于BeginTimeValue
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.BeginValue">
            <summary>
            DateTimePicker的开始值,该值需要小于等于EndValue,而且需要在最大，最小值之间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.EndValue">
            <summary>
            DateTimePicker的结束值,该值需要大于等于BeginValue,而且需要在最大，最小值之间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.FormatType">
            <summary>
            日期和时间格式类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.MaxDate">
            <summary>
            选择的最大日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.MinDate">
            <summary>
            选择的最小日期和时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.Checked">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.ShowCheckBox">
            <summary>
            是否显示一个复选框
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.BeginValueChanged">
            <summary>
            当开始DateTimePicker的日期时间的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.EndValueChanged">
            <summary>
            当开始DateTimePicker的日期时间的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeDateTimePicker.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DateTimeFormatType">
            <summary>
            日期时间类型的格式化类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DateTimeFormatType.Date">
            <summary>
            格式化为日期显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DateTimeFormatType.Time">
            <summary>
            格式化为时间显示
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelMultiTextBox">
            <summary>
            带标签的普通文本输入组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.hsCtrlValidator">
            <summary>
            HS控件校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.validatedText">
            <summary>
            已校验的文本，用于ESC键回退到之前的文本信息。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.ResetSize">
            <summary>
            改方法只是VS在重置Size大小的时候调用
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.hsTextBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.hsTextBox1_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.CtrlV">
            <summary>
            处理 Ctrl+V
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.isSkipNextControl">
            <summary>
            获取或设置一个值，该值指示是否跳转到上或下一个控件，默认是启用跳转。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.initialized">
            <summary>
            是否初始化Onload
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelMultiTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelMultiTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.ValueChanged">
            <summary>
            当Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.TextBoxForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.TextBoxBackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.TextBoxFont">
            <summary>
            TextBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.ReqLogicFunc">
            <summary>
            必输项的判断逻辑，True表示必须输入，false不必须输入
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.Value">
            <summary>
            TextBox的文本
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.RequiredForeColor">
            <summary>
            获取或设置必输项提示的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.AllowEmpty">
            <summary>
            是否允许为空
            </summary>      
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.MinLength">
            <summary>
            最小字节长度
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.MaxLength">
            <summary>
            最大字节长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.SelectedText">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.SelectionLength">
            <summary>
            获取或设置一个值，该值指示控件中当前选定的文本的长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.SelectionStart">
            <summary>
            获取或设置文本框中选定的文本起始点。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.RegularMode">
            <summary>
            文本数据正则校验模式，如校验文本为URL,Email,中国邮编，中国身份证等等
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.CustomRegExp">
            <summary>
            获取或设置正则表达式，只当校验模式为Custom时。无须首位加入^$,系统会默认加入。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.CustomErrorMessage">
            <summary>
            获取或设置正则校验错误时的提示信息，只当校验模式为Custom时
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelMultiTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelMultiTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelRangeNumericEditor">
            <summary>
            带标签的数值编辑组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeNumericEditor.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeNumericEditor.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeNumericEditor.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToInt16">
            <summary>
            将数值类型转换成Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToInt32">
            <summary>
            将数值类型转换成Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToInt64">
            <summary>
            将数值类型转换成Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToFloat">
            <summary>
            将数值类型转换成float
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToDouble">
            <summary>
            将数值类型转换成double
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ToString">
            <summary>
            将数值类型转换成字符串形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeNumericEditor.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeNumericEditor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeNumericEditor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.NumericEditorForeColor">
            <summary>
            NumericEditor字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.NumericEditorBackColor">
            <summary>
            NumericEditor的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.DisabledNumericEditorBackColor">
            <summary>
            NumericEditor不可使用时的背景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.DisabledNumericEditorForeColor">
            <summary>
            NumericEditor不可使用时的前景色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelUnitBackColor">
            <summary>
            LabelUnit的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelUnitForeColor">
            <summary>
            LabelUnit的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.NumericEditorFont">
            <summary>
            NumericEditor的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.NumericEditorUnit">
            <summary>
            NumericEditor的单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.BeginValue">
            <summary>
            开始的NumericEditor的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.EndValue">
            <summary>
            结束的NumericEditor的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.LabelUnitFont">
            <summary>
            LabelUnit的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.MaxAllow">
            <summary>
            是否允许到达最大值,默认值是false
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.MinAllow">
            <summary>
            是否允许到达最小值,默认值是true
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.Maximum">
            <summary>
            最大值，默认值是79228162514264337593543950335。其中只有在数值范围没有设定的时候（即NumericRangeTypeSimple设置为Any）才能设置最大值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.Minimum">
            <summary>
            最小值，默认值是0。其中只有在数值范围没有设定的时候（即NumericRangeTypeSimple设置为Any）才能设置最小值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.DecimalPlaces">
            <summary>
            获取或设置要显示的十进制小数位数,默认值为 0,只有在数值范围设定为的Float,Decimal,Any时候才能设置小数位数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.DataRangeType">
            <summary>
            数值范围类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeNumericEditor.ThousandsSeparator">
            <summary>
             获取或设置一个值，该值指示是否显示千位分隔符。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.BeginValueChanged">
            <summary>
            当开始的NumericEditor的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.EndValueChanged">
            <summary>
            当结束NumericEditor的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeNumericEditor.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="T:HSUCF.Controls.NumericRangeTypeSimple">
            <summary>
            数值范围类型（用于规范数值在某一范围内）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeTypeSimple.Int16">
            <summary>
            短整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeTypeSimple.Int32">
            <summary>
            整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeTypeSimple.Int64">
            <summary>
            长整型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeTypeSimple.Float">
            <summary>
            浮点型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NumericRangeTypeSimple.Decimal">
            <summary>
            Deciaml
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsLabelRangeYearComboBox">
            <summary>
            带标签的数值编辑组合控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeYearComboBox.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeYearComboBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeYearComboBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.GetInputControls">
            <summary>
            返回组合类型内部的输入性控件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.SetInputToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            设置组合控件tooltip提示
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.ChangeImgForLabelLock">
            <summary>
            改变解锁标签的显示图片
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeYearComboBox.isEnterLockLabel">
            <summary>
            是否鼠标进入标签
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLabelRangeYearComboBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsLabelRangeYearComboBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.ComboBoxDropDown">
            <summary>
            设置下拉模式：1.不能输入只能选  2.可以输入可以选
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.YearStart">
            <summary>
            获取、设置起始年份
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.YearIncrease">
            <summary>
            获取、设置起始年份基础上的增量年数
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.LabelForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.LabelBackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.ComboBoxForeColor">
            <summary>
            ComboBox字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.ComboBoxBackColor">
            <summary>
            ComboBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.DisabledComboBoxBackColor">
            <summary>
            选择框不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.DisabledComboBoxForeColor">
            <summary>
            选择框不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.LabelFont">
            <summary>
            Label的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.ComboBoxFont">
            <summary>
            ComboBox的字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.IsLeftLabel">
            <summary>
            获取或设置一个值，该值指示左侧区域的内标签的Dock属性是不是DockLeft。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.IsSpecParent">
            <summary>
            父容器是特殊的容器类型？（FlowLayoutPanel，TableLayoutPanel）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.Focused">
            <summary>
            是否有输入焦点
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.TagEx">
            <summary>
            TagEx值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.LabelText">
            <summary>
            Label的文本
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.Connectors">
            <summary>
            获取或设置标签和输入框之间的的连接符
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.BeginValue">
            <summary>
            开始的ComboBox的值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLabelRangeYearComboBox.EndValue">
            <summary>
            结束的ComboBox的值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.BeginValueChanged">
            <summary>
            当开始的ComboBox的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.EndValueChanged">
            <summary>
            当结束ComboBox的Value属性值更改时发生
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsLabelRangeYearComboBox.EnabledChanged">
            <summary>
            在更改控件的启用状态时发生
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DefaultLoadingCircleDisplayer">
            <summary>
            用该控件作为呈现器,只是为了便以以后扩展.如修改显示器的外观(加入文字,3D边框等）
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ILoadingCircleDisplayer">
            <summary>
            正在加载的呈现器接口，目前默认是hsLoadingCircleDisplayer，其主要是一个加载的圆形图案
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.SetDisplayedTarget(System.Windows.Forms.Control)">
            <summary>
            设置呈现器的目标
            </summary>
            <param name="displayedTarget"></param>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.SetDisplayerSettings(HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            设置呈现器的信息
            </summary>
            <param name="displayerSettings"></param>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.SetDisplayMessage(System.String)">
            <summary>
            设置将要在呈现器上显示的消息文本
            </summary>
            <param name="message"></param>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.ShowDisplayer">
            <summary>
            显示呈现器(该方法内部应该调用RefreshDisplayLayout方法来第一次布局）
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.RefreshDisplayLayout">
            <summary>
            刷新呈现器的布局(可能会跨线程调用，所以该方法内部应该是将UI操作同步到UI线程上执行才对)
            </summary>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.ILoadingCircleDisplayer.CloseDisplayer">
            <summary>
            关闭呈现器(可能会跨线程调用，所以该方法内部应该是将UI操作同步到UI线程上执行才对)
            </summary>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="P:HSUCF.Controls.ILoadingCircleDisplayer.CanClose">
            <summary>
            是否能关闭
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="P:HSUCF.Controls.ILoadingCircleDisplayer.UseDefaultBackground">
            <summary>
            使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="E:HSUCF.Controls.ILoadingCircleDisplayer.ClickCloseIcon">
            <summary>
            单击关闭图标的事件
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="E:HSUCF.Controls.ILoadingCircleDisplayer.ParentFormClosing">
            <summary>
            呈现器的父窗体正在关闭事件
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="E:HSUCF.Controls.ILoadingCircleDisplayer.Disposed">
            <summary>
            呈现器被销毁了（无论是用户关闭窗体，关闭整个工作区导致控件被释放导致销毁），这个时候需要已经不可能阻止关闭了，只能关闭任务
            </summary>
            <remarks>
            UI线程上操作
            </remarks>
        </member>
        <member name="F:HSUCF.Controls.DefaultLoadingCircleDisplayer.displayedTarget">
            <summary>
            呈现器的显示目标控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.SetDisplayedTarget(System.Windows.Forms.Control)">
            <summary>
            设置显示目标
            </summary>
            <param name="displayedTarget"></param>
        </member>
        <member name="F:HSUCF.Controls.DefaultLoadingCircleDisplayer.displayerSettings">
            <summary>
            显示配置
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.SetDisplayerSettings(HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            正在加载图案控件的设置
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DefaultLoadingCircleDisplayer.displayMessage">
            <summary>
            将要显示的文本信息
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.SetDisplayMessage(System.String)">
            <summary>
            设置将要在呈现器上显示的消息文本
            </summary>
            <param name="message"></param>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.CloseDisplayer">
            <summary>
            关闭显示器（加载图案控件）
            </summary>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.ShowDisplayer">
            <summary>
            显示显示器（加载图案控件）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.RefreshDisplayLayout">
            <summary>
            刷新界面布局(可能会跨线程调用，所以该方法内部应该是将UI操作同步到UI线程上执行才对)
            </summary>
            <remarks>
            有跨线程调用
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.GetDisplyerBackgroundImg">
            <summary>
            得到目标控件的背景图
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.RefreshDisplayLayoutInternal">
            <summary>
            刷新界面布局（主要是重新定位正在加载图案的大小，位置，已经消息文本的标签的位置）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.DefaultLoadingCircleDisplayer_Resize(System.Object,System.EventArgs)">
            <summary>
            呈现器大小变化的时候重新显示布局
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.displerFrm_Disposed(System.Object,System.EventArgs)">
            <summary>
            父窗体正在销毁
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.displerFrm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            正在加载图案控件绑定它的父窗体关闭事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.GetCanContainMsgSize(System.Drawing.Font,System.String,System.Int32)">
            <summary>
            得到能包含消息文本的大小
            </summary>
            <param name="msgBelongsControl"></param>
            <param name="totalStr"></param>
            <param name="maxSingleLineWidth"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.picClose_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            引发单击关闭图标的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.picClose_Click(System.Object,System.EventArgs)">
            <summary>
            引发单击关闭图标的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.DefaultLoadingCircleDisplayer.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.DefaultLoadingCircleDisplayer.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.DefaultLoadingCircleDisplayer.ClickCloseIcon">
            <summary>
            单击关闭图标的事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.DefaultLoadingCircleDisplayer.ParentFormClosing">
            <summary>
            呈现器的父窗体正在关闭事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DefaultLoadingCircleDisplayer.CanClose">
            <summary>
            是否允许关闭
            </summary>
        </member>
        <member name="P:HSUCF.Controls.DefaultLoadingCircleDisplayer.UseDefaultBackground">
            <summary>
            使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LoadingWaitingSettings">
            <summary>
            正在加载呈现器设置信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.InnerCircleRadius">
            <summary>
            获取和设置内圆半径
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.NumberSpoke">
            <summary>
            获取和设置辐条数量
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.OuterCircleRadius">
            <summary>
            外圆半径
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.SpokeThickness">
            <summary>
            辐条粗细程度值
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.RotationSpeed">
            <summary>
            旋转速度。
            </summary>  
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.MessageForeColor">
            <summary>
            消息文本的前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingSettings.MessageFont">
            <summary>
            消息文本的字体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LoadingWaitingTask`1">
            <summary>
            该类表示一个正在加载任务
            </summary>
            <typeparam name="TArgs">任务参数</typeparam>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.taskThread">
            <summary>
            执行任务方法的线程
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.taskMethod">
            <summary>
            具体的执行任务的方法，有业务开发人员实现
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.taskInfo">
            <summary>
            任务参数
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.displayer">
            <summary>
            呈现器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.displayedTarget">
            <summary>
            显示目标
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.BeforeCancel">
            <summary>
            取消任务前事件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.AfterCancel">
            <summary>
            取消任务后事件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.taskingTargets">
            <summary>
            正在执行任务的目标。为了使用户重复调用不至于重复渲染，这里保存显示目标，判断目标是否存在这个里面中来判断目前是否存在当前目标的任务
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingWaitingTask`1.lockTaskingTargets">
            <summary>
            用于同步操作taskingTargets
            </summary>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.Show(System.Windows.Forms.Control,System.Action{HSUCF.Controls.LoadingWaitingTaskInfo{`0}},`0,System.String,System.Boolean,System.Boolean,HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            显示正在加载图案，并开始执行任务
            </summary>
            <param name="target">需要显示正在加载任务的目标控件</param>
            <param name="taskMethod">执行的任务，该任务将会开一个线程进行执行，请注意跨线程调用的问题</param>
            <param name="args">表示任务参数</param>
            <param name="canClose">是否在右上角出现关闭图标</param>
            <param name="displayMessage">显示的消息文本</param> 
            <param name="useDefaultBackground">使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。</param>
            <param name="settings">正在加载的配置信息</param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.taskInfo_DisplayMessageChanged(System.String)">
            <summary>
            任务显示的提示信息改变事件
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.displayer_ParentFormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            用户承载显示器的窗体事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.displayer_Disposed(System.Object,System.EventArgs)">
            <summary>
            呈现器被销毁了（无论是用户关闭窗体，关闭整个工作区导致控件被释放导致销毁），这个时候需要已经不可能阻止关闭了，只能关闭任务
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.displayer_ClickCloseIcon(System.Object,System.EventArgs)">
            <summary>
            用户单击了正在加载图案控件关闭图标事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.AfterStopTask">
            <summary>
            任务结束后的处理（无论是自动结束还是手动结束)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.StartTask">
            <summary>
            启动任务
            </summary>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.StopTask">
            <summary>
            结束任务
            </summary>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTask`1.Finalize">
            <summary>
            可以不编写析构。一般情况下（任务自然结束，用户单击关闭图标，正在加载显示控件的父窗体关闭，正在加载显示控件销毁）都会自动调用StopTask结束任务。
            这里只是做个保护，在析构的时候绝对可以关闭任务。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LoadingWaitingTaskInfo`1">
            <summary>
            正在加载任务的任务信息（任务的执行参数和呈现器上的显示信息）
            </summary>
            <typeparam name="TArgs"></typeparam>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingTaskInfo`1.#ctor(`0)">
            <summary>
            正在加载任务的任务信息（任务的执行参数和呈现器上的显示信息）
            </summary>
            <param name="args">任务的执行参数</param>
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingTaskInfo`1.TaskArgs">
            <summary>
            任务的执行参数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.LoadingWaitingTaskInfo`1.DisplayMessage">
            <summary>
            消息的文本信息,设置该文本信息，将动态改变界面上的显示文本
            </summary>
        </member>
        <member name="E:HSUCF.Controls.LoadingWaitingTaskInfo`1.DisplayMessageChanged">
            <summary>
            呈现器上的信息改变事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LoadingWaitingUtility">
            <summary>
            正在加载任务加载器工具类
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingUtility.Show(System.Windows.Forms.Control,System.Action{HSUCF.Controls.LoadingWaitingTaskInfo{System.Object}},System.Object,System.String,System.Boolean,System.Boolean,HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            显示任务加载器。
            该方法有使用约束，需要在窗体或插件已经显示的情况下使用，比如用户单击查询操作
            </summary>
            <param name="targetControl">需要显示正在加载任务的目标控件</param>
            <param name="taskMethod">执行的任务，该任务将会开一个线程进行执行，请注意跨线程调用的问题</param>
            <param name="args">任务参数</param>
            <param name="canClose">是否在右上角出现关闭图标</param>
            <param name="useDefaultBackground">使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。</param>
            <param name="settings">正在加载功能的配置信息</param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingUtility.Show``1(System.Windows.Forms.Control,System.Action{HSUCF.Controls.LoadingWaitingTaskInfo{``0}},``0,System.String,System.Boolean,System.Boolean,HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            显示任务加载器。
            该方法有使用约束，需要在窗体或插件已经显示的情况下使用，比如用户单击查询操作
            </summary>
            <typeparam name="TArgs">任务参数类型</typeparam>
            <param name="targetControl">需要显示正在加载任务的目标控件</param>
            <param name="taskMethod">执行的任务，该任务将会开一个线程进行执行，请注意跨线程调用的问题</param>
            <param name="args"><typeparamref name="TArgs"/>类型参数，表示任务参数</param>
            <param name="canClose">是否在右上角出现关闭图标</param>
            <param name="useDefaultBackground">使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。</param>
            <param name="settings">正在加载功能的配置信息</param>
        </member>
        <member name="M:HSUCF.Controls.LoadingWaitingUtility.Show``2(``0,System.Action{HSUCF.Controls.LoadingWaitingTaskInfo{``1}},``1,System.String,System.Boolean,System.Boolean,HSUCF.Controls.LoadingWaitingSettings)">
            <summary>
            显示任务加载器。
            该方法有使用约束，需要在窗体或插件已经显示的情况下使用，比如用户单击查询操作
            </summary>
            <typeparam name="Target">需要显示正在加载任务的目标控件类型</typeparam>
            <typeparam name="TArgs">任务参数类型</typeparam>
            <param name="targetControl">需要显示正在加载任务的目标控件</param>
            <param name="taskMethod">执行的任务，该任务将会开一个线程进行执行，请注意跨线程调用的问题</param>
            <param name="args"><typeparamref name="TArgs"/>类型参数，表示任务参数</param>
            <param name="canClose">是否在右上角出现关闭图标</param>
            <param name="useDefaultBackground">使用默认背景色（灰色）, 还是使用截屏方式来设置底图；true表示使用默认背景色（灰色），false则表示使用截屏。</param>
            <param name="settings">正在加载功能的配置信息</param>
        </member>
        <member name="T:HSUCF.Controls.MsgBoxUtility">
            <summary>
            消息提示工具类
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowTips(System.String)">
            <summary>
            弹出提示消息
            </summary>
            <param name="message">提示消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowTips(System.String,System.Action,System.Boolean,System.Windows.Forms.Form)">
            <summary>
            显示一般的提示信息
            </summary>
            <param name="message">提示信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowTipsYesNoCancel(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNoCancel,System.Windows.Forms.Form)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNoCancel">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowTipsYesNo(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNo,System.Windows.Forms.Form)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNo">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowConfirmYesNo(System.String)">
            <summary>
            弹出普通确认框
            </summary>
            <param name="message">确认消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowWarning(System.String)">
            <summary>
            弹出警告消息
            </summary>
            <param name="message">警告消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowWarning(System.String,System.Action,System.Boolean,System.Windows.Forms.Form)">
            <summary>
            显示警告信息
            </summary>
            <param name="message">警告信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowWarningYesNo(System.String)">
            <summary>
            以警告方式弹出确认消息
            </summary>
            <param name="message">确认消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowWarningYesNo(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNo,System.Windows.Forms.Form)">
            <summary>
            显示询问用户信息，并显示警告标志
            </summary>
            <param name="message">警告信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNo">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowError(System.String)">
            <summary>
            弹出错误消息
            </summary>
            <param name="message">错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowError(System.String,System.Action,System.Boolean,System.Windows.Forms.Form)">
            <summary>
            显示错误信息
            </summary>
            <param name="message">错误信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowErrorYesNo(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNo,System.Windows.Forms.Form)">
            <summary>
            显示询问用户信息，并显示错误标志
            </summary>
            <param name="message">错误信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNo">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowConfirmYesNo(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNo,System.Windows.Forms.Form)">
            <summary>
            显示一个YesNo选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNo">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
            <returns>如果选择Yes则返回true，否则返回false</returns>
        </member>
        <member name="M:HSUCF.Controls.MsgBoxUtility.ShowConfirmYesNoCancel(System.String,System.Action,System.Boolean,HSUCF.Controls.FocusedButtonYesNoCancel,System.Windows.Forms.Form)">
            <summary>
            显示一个YesNoCancel选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <param name="dialogShownAction">消息框显示后当窗体要消失的时候回触发该委托</param>
            <param name="useMnemonic">获取或设置一个值，该值指示控件是否将控件的 System.Windows.Forms.Control.Text 属性中的“and”符 (&amp;) 解释为访问键前缀字符。</param>
            <param name="yesNoCancel">默认要聚焦的按钮</param>
            <param name="ownerForm">父亲窗体，用于矫正多屏下消息窗体的显示位置问题</param>
            <returns>返回选择结果的的DialogResult值</returns>
        </member>
        <member name="T:HSUCF.Controls.hsLoadingCircle">
            <summary>
            正在加载圆形控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLoadingCircle.closeIconColorOnMouseOver">
            <summary>
            //鼠标经过关闭图标的时候图标的颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLoadingCircle.closeIconColorOnNormal">
            <summary>
            一般情况下关闭图标的颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLoadingCircle.closeSpace">
            <summary>
            关闭按钮离控件右边距或上边距的距离
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsLoadingCircle.closeSize">
            <summary>
            关闭按钮的大小
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLoadingCircle.DrawLabelCloseIcon(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            绘制关闭按钮
            </summary>
            <param name="g"></param>
            <param name="closeColor"></param>
        </member>
        <member name="M:HSUCF.Controls.hsLoadingCircle.SetLoadingCircleStyle(HSUCF.Controls.LoadingCircleStyle)">
            <summary>
            快速设置预定义风格
            </summary>  
        </member>
        <member name="M:HSUCF.Controls.hsLoadingCircle.GetPreferredSize(System.Drawing.Size)">
            <summary>
            获取适合控件区域的矩形大小。
            </summary>
            <param name="proposedSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
        </member>
        <member name="M:HSUCF.Controls.hsLoadingCircle.SetCircleAppearance(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置控件的外观
            </summary>
            <param name="numberSpoke">条数</param>
            <param name="spokeThickness">粗细</param>
            <param name="innerCircleRadius">内圆半径</param>
            <param name="outerCircleRadius">外圆半径</param>
        </member>
        <member name="F:HSUCF.Controls.hsLoadingCircle.DEFAULT_SIZE">
            <summary>
            默认大小，只是用于Size重置使用的。只用于设计时
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsLoadingCircle.ResetSize">
            <summary>
            改方法只是VS在重置Size大小的时候调用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.CloseIconRect">
            <summary>
            关闭按钮的矩形区域(工作区）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.CircleColor">
            <summary>
            正在加载的圆形图案的颜色值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.InnerCircleRadius">
            <summary>
            获取和设置内圆半径
            </summary>
            <value>内圆半径</value>
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.OuterCircleRadius">
            <summary>
            外圆半径
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.NumberSpoke">
            <summary>
            获取和设置辐条数量
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.SpokeThickness">
            <summary>
            辐条粗细程度值
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.RotationSpeed">
            <summary>
            旋转速度。
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsLoadingCircle.Active">
            <summary>
            获取和设置一个布尔值，表示当前控件<see cref="T:hsLoadingCircle"/>是否激活。
            </summary>
            <value><c>true</c> 表示激活；否则，为<c>false</c>。</value>
        </member>
        <member name="T:HSUCF.Controls.LoadingCircleStyle">
            <summary>
            预定义正在加载圆形图案的风格枚举
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingCircleStyle.MacOSX">
            <summary>
            MacOSX样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingCircleStyle.Firefox">
            <summary>
            Firefox样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LoadingCircleStyle.IE7">
            <summary>
            IE7样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.MessageUtility">
            <summary>
            消息提示工具类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowTips(System.String)">
            <summary>
            显示一般的提示信息  姜亮 20131017
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowTips(System.String,System.Action)">
            <summary>
            显示一般的提示信息  姜亮 20131017
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowTipsYesNoCancel(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowTipsYesNo(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowWarning(System.String)">
            <summary>
            显示警告信息
            </summary>
            <param name="message">警告信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowWarningYesNo(System.String)">
            <summary>
            显示询问用户信息，并显示警告标志
            </summary>
            <param name="message">警告信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowError(System.String)">
            <summary>
            显示错误信息  姜亮 20131017
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowError(System.String,System.Action)">
            <summary>
            显示错误信息  姜亮 20131017
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowErrorYesNo(System.String)">
            <summary>
            显示询问用户信息，并显示错误标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowConfirmYesNo(System.String)">
            <summary>
            显示一个YesNo选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <returns>如果选择Yes则返回true，否则返回false</returns>
        </member>
        <member name="M:HSUCF.Controls.MessageUtility.ShowConfirmYesNoCancel(System.String)">
            <summary>
            显示一个YesNoCancel选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <returns>返回选择结果的的DialogResult值</returns>
        </member>
        <member name="F:HSUCF.Controls.OKForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.OKForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.OKForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.NavPane.About.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NavPane.About.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.About.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNavPane.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsNavPane.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNavPane.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsNavPane.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPanePageRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This methid must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This methid must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.OnBackColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control backColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBackColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.DrawSquareBackgound(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws a square background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:HSUCF.Controls.NavPane.NavPaneRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.CaptionGradientHighColor">
            <summary>
            Gets or sets the caption gradient high color.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.CaptionGradientLowColor">
            <summary>
            Gets or sets the caption gradient low color.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.CaptionGradientMode">
            <summary>
            Specifies the direction of a linear gradient for the caption.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.RightToLeft">
            <summary>
            Gets or sets if the control should render text right to left.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.ShowImageInCaption">
            <summary>
            Gets or sets if the currently active button image is shown in the caption.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.DisplayOrder">
            <summary>
            Gets or sets the display order list.
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.NavPaneRender.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="T:HSUCF.Controls.NavPane.Resource.DefaultResource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AcceptChangesAndCloseDialogToolTip">
            <summary>
              查找类似 保存更改并关闭对话框。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionCategory">
            <summary>
              查找类似 动作 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListAppearanceCategory">
            <summary>
              查找类似 外观 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListAppearanceTextItem">
            <summary>
              查找类似 影响控件外观的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameAntiAlias">
            <summary>
              查找类似 柔化 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameBumpCount">
            <summary>
              查找类似 原点数量 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameDirection">
            <summary>
              查找类似 方向 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameDock">
            <summary>
              查找类似 停靠 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameFont">
            <summary>
              查找类似 字体 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameGradientHighColor">
            <summary>
              查找类似 渐变色起始颜色 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameGradientLowColor">
            <summary>
              查找类似 渐变色终止颜色 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameGradientMode">
            <summary>
              查找类似 渐变色填充模式 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameImage">
            <summary>
              查找类似 图片 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameImageAlign">
            <summary>
              查找类似 图片对齐方式 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameName">
            <summary>
              查找类似 名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameRenderMode">
            <summary>
              查找类似 呈现方式 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameText">
            <summary>
              查找类似 文本 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListDisplayNameTextAlign">
            <summary>
              查找类似 文本对齐方式 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListLayoutCategory">
            <summary>
              查找类似 布局 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActionListLayoutTextItem">
            <summary>
              查找类似 影响控件布局的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveChangedEventDescription">
            <summary>
              查找类似 当控件的Alpha属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveDescription">
            <summary>
              查找类似 控件是否已经被激活，被激活的控件将显示不同的背景色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveGradientHighColorDescription">
            <summary>
              查找类似 控件被激活状态下过渡背景色浅色部分的起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveGradientHighColorEventDescription">
            <summary>
              查找类似 当控件的ActiveGradientHighColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveGradientLowColorDescription">
            <summary>
              查找类似 控件被激活状态下过渡背景色深色部分的起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveGradientLowColorEventDescription">
            <summary>
              查找类似 当控件的ActiveGradientLowColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveOnClickDescription">
            <summary>
              查找类似 当控件被单击时是否转换为激活状态。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ActiveOnClickEventDescription">
            <summary>
              查找类似 当控件的ActiveOnClick属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AllowAddOrRemoveDescription">
            <summary>
              查找类似 指定控件上是否显示添加删除按钮菜单。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AllowAnimationDescription">
            <summary>
              查找类似 制定一个值，表示控件上是否允许以动画方式显示图片。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AllowOptionsDescription">
            <summary>
              查找类似 指定控件上是否显示选项菜单。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AlphaChangedDescription">
            <summary>
              查找类似 当控件的Alpha属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AlphaDescription">
            <summary>
              查找类似 获取或设置控件填充的alpha（透明度）值（0 - 255）。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AntiAliasChangedDescription">
            <summary>
              查找类似 控件的AntiAlias属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AntiAliasDescription">
            <summary>
              查找类似 是否对控件显示进行柔化处理。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AppearanceCategory">
            <summary>
              查找类似 外观 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AppearanceTextItem">
            <summary>
              查找类似 影响控件外观的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.AutoSizeDescription">
            <summary>
              查找类似 Enables automatic resizing based on font size. 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BackColorDescription">
            <summary>
              查找类似 组件的背景色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BehaviorCategory">
            <summary>
              查找类似 行为 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BorderChangedDescription">
            <summary>
              查找类似 当控件的Border属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BorderColorChangedDescription">
            <summary>
              查找类似 当控件的BorderColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BorderColorDescription">
            <summary>
              查找类似 指定控件各边框的颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BorderDescription">
            <summary>
              查找类似 指定控件各边框的宽度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BumpCountChangedDescription">
            <summary>
              查找类似 当控件的BumpCount属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.BumpCountDescription">
            <summary>
              查找类似 控件上原点的数量。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ButtonDescription">
            <summary>
              查找类似 控件按钮相关的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ButtonFontDescription">
            <summary>
              查找类似 控件上按钮的字体。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ButtonHeightDescription">
            <summary>
              查找类似 指定控件上按钮的高度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CancelChangesAndCloseDialogToolTip">
            <summary>
              查找类似 取消更改并关闭对话框。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CancelText">
            <summary>
              查找类似 取消 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CaptionDescription">
            <summary>
              查找类似 控件标题相关属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CaptionFontDescription">
            <summary>
              查找类似 控件上标题所使用的字体。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CaptionGradientModeDescription">
            <summary>
              查找类似 指定标题背景色的过渡方向。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CaptionHeightDescription">
            <summary>
              查找类似 指定标题的高度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ConfigureButtonsToolTipText">
            <summary>
              查找类似 更改按钮设置 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CornerRadiusChangedDescription">
            <summary>
              查找类似 当控件的CornerRadius属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.CornerRadiusDescription">
            <summary>
              查找类似 指定控件各角的圆弧半径。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DehighlightedDescription">
            <summary>
              查找类似 当控件上的高亮被取消时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DeselectedDescription">
            <summary>
              查找类似 当取消选定一个HSNaPanePage时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DeselectingDescription">
            <summary>
              查找类似 当取消选定一个HSNaPanePage前发生，处理该事件的方法可以取消反选动作。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DirectionChangedDescription">
            <summary>
              查找类似 当控件的Direction属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayButtonsInThisOrderText">
            <summary>
              查找类似 按钮显示顺序 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActive">
            <summary>
              查找类似 Active 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveChanged">
            <summary>
              查找类似 ActiveChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveGradientHighColor">
            <summary>
              查找类似 ActiveGradientHighColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveGradientHighColorChanged">
            <summary>
              查找类似 ActiveGradientHighColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveGradientLowColor">
            <summary>
              查找类似 ActiveGradientLowColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveGradientLowColorChanged">
            <summary>
              查找类似 ActiveGradientLowColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveOnClick">
            <summary>
              查找类似 ActiveOnClick 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameActiveOnClickChanged">
            <summary>
              查找类似 ActiveOnClickChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAllowAddOrRemove">
            <summary>
              查找类似 AllowAddOrRemove 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAllowAnimation">
            <summary>
              查找类似 AllowAnimation 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAllowOptions">
            <summary>
              查找类似 AllowOptions 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAlpha">
            <summary>
              查找类似 Alpha 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAlphaChanged">
            <summary>
              查找类似 AlphaChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAntiAlias">
            <summary>
              查找类似 AntiAlias 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameAntiAliasChanged">
            <summary>
              查找类似 AntiAliasChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBackColor">
            <summary>
              查找类似 BackColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBorder">
            <summary>
              查找类似 Border 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBorderChanged">
            <summary>
              查找类似 BorderChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBorderColor">
            <summary>
              查找类似 BorderColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBorderColorChanged">
            <summary>
              查找类似 BorderColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBumpCount">
            <summary>
              查找类似 BumpCount 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameBumpCountChanged">
            <summary>
              查找类似 BumpCountChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameButton">
            <summary>
              查找类似 Button 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameButtonExpanding">
            <summary>
              查找类似 ButtonExpanding 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameButtonFont">
            <summary>
              查找类似 Font 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameButtonHeight">
            <summary>
              查找类似 ButtonHeight 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameButtonVisible">
            <summary>
              查找类似 ButtonVisible 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCaption">
            <summary>
              查找类似 Caption 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCaptionFont">
            <summary>
              查找类似 Font 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCaptionGradientMode">
            <summary>
              查找类似 GradientMode 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCaptionHeight">
            <summary>
              查找类似 Height 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCornerRadious">
            <summary>
              查找类似 CornerRadious 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameCornerRadiusChanged">
            <summary>
              查找类似 CornerRadiusChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameDehighlighted">
            <summary>
              查找类似 Dehighlighted 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameDeselected">
            <summary>
              查找类似 Deselected 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameDeselecting">
            <summary>
              查找类似 Deselecting 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameDirection">
            <summary>
              查找类似 Direction 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameDirectionChanged">
            <summary>
              查找类似 DirectionChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameFocusHighlight">
            <summary>
              查找类似 FocusHighlight 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameFooter">
            <summary>
              查找类似 Footer 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameFooterHeight">
            <summary>
              查找类似 FooterHeight 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameForeColor">
            <summary>
              查找类似 ForeColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientHighColor">
            <summary>
              查找类似 GradientHighColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientHighColorChanged">
            <summary>
              查找类似 GradientHighColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientLowColor">
            <summary>
              查找类似 GradientLowColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientLowColorChanged">
            <summary>
              查找类似 GradientLowColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientMode">
            <summary>
              查找类似 GradientMode 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameGradientModeChanged">
            <summary>
              查找类似 GradientModeChange 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHidePrefix">
            <summary>
              查找类似 HidePrefix 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighColorLuminance">
            <summary>
              查找类似 HighColorLuminance 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightBorder">
            <summary>
              查找类似 HighlightBorder 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlighted">
            <summary>
              查找类似 Highlighted 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightGradientHighColor">
            <summary>
              查找类似 HighlightGradientHighColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightGradientHighColorChanged">
            <summary>
              查找类似 HighlightGradientHighColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightGradientLowColor">
            <summary>
              查找类似 HighlightGradientLowColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightGradientLowColorChanged">
            <summary>
              查找类似 HighlightGradientLowColorChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameHighlightTransitionPercent">
            <summary>
              查找类似 HighlightTransitionPercent 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImage">
            <summary>
              查找类似 Image 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageAlign">
            <summary>
              查找类似 ImageAlign 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageAlignChanged">
            <summary>
              查找类似 ImageAlignChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageChanged">
            <summary>
              查找类似 ImageChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageInCaption">
            <summary>
              查找类似 DisplayImage 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageIndex">
            <summary>
              查找类似 ImageIndex 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageIndexChanged">
            <summary>
              查找类似 ImageIndexChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageIndexFooterChanged">
            <summary>
              查找类似 ImageIndexFooterChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageKey">
            <summary>
              查找类似 ImageKey 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageList">
            <summary>
              查找类似 ImageList 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameImageListFooter">
            <summary>
              查找类似 ImageListFooter 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameInterval">
            <summary>
              查找类似 Interval 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameKey">
            <summary>
              查找类似 Key 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameLowColorLuminance">
            <summary>
              查找类似 LowColorLuminance 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameMouseOverHighlight">
            <summary>
              查找类似 MouseOverHighlight 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameMouseOverHighlightChanged">
            <summary>
              查找类似 MouseOverHighlightChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameNavigationPages">
            <summary>
              查找类似 NavigationPages 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameRenderMode">
            <summary>
              查找类似 RenderMode 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSelected">
            <summary>
              查找类似 Selected 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSelectedIndexChanged">
            <summary>
              查找类似 SelectedIndexChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSelecting">
            <summary>
              查找类似 Selecting 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameShowBorderOnHighlight">
            <summary>
              查找类似 ShowBorderOnHighlight 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameShowDisabledBackgroundColor">
            <summary>
              查找类似 ShowDisabledBackgroundColor 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSpeed">
            <summary>
              查找类似 Speed 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSplitBar">
            <summary>
              查找类似 SplitBar 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameSplitBarHeight">
            <summary>
              查找类似 Height 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameStayActiveAfterClick">
            <summary>
              查找类似 StayActiveAfterClick 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameTabStop">
            <summary>
              查找类似 TabStop 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameText">
            <summary>
              查找类似 Text 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameTextAlign">
            <summary>
              查找类似 TextAlign 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameTextAlignChanged">
            <summary>
              查找类似 TextAlignChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameToolTipText">
            <summary>
              查找类似 ToolTipText 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameUseCompatibleTextRendering">
            <summary>
              查找类似 UseCompatibleTextRendering 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameVisibleButtonCount">
            <summary>
              查找类似 VisibleButtonCount 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkAlpha">
            <summary>
              查找类似 WatermarkAlpha 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkAlphaChanged">
            <summary>
              查找类似 WatermarkAlphaChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkDisplayStyle">
            <summary>
              查找类似 WatermarkDisplayStyle 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkDisplayStyleChanged">
            <summary>
              查找类似 WatermarkDisplayStyleChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkImage">
            <summary>
              查找类似 WatermarkImage 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkImageAlign">
            <summary>
              查找类似 WatermarkImageAlign 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkImageAlignChanged">
            <summary>
              查找类似 WatermarkImageAlignChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DisplayNameWatermarkImageChanged">
            <summary>
              查找类似 WatermarkImageChanged 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.DockedDescription">
            <summary>
              查找类似 指定控件停靠方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.FailedParseFormatError">
            <summary>
              查找类似 解析失败。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.FocusHighlightDescription">
            <summary>
              查找类似 指定当控件获取到焦点时是否高亮显示。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.FontDescription">
            <summary>
              查找类似 控件上文本的字体。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.FooterDescription">
            <summary>
              查找类似 控件底部（页脚）相关的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.FooterHeightDescription">
            <summary>
              查找类似 指定控件底部的高度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ForeColorDescription">
            <summary>
              查找类似 指定控件的前景色，主要用于文字的颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GAPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的GradientAnimation属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GCPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的GradientCaption属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GPPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的GradientPanel属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientAnimationDesription">
            <summary>
              查找类似 渐变色动画显示控件。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientCaptionDescription">
            <summary>
              查找类似 具有过渡背景色的标题面板。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientHighColorChangedDescription">
            <summary>
              查找类似 当控件的GradientHighColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientHighColorDescription">
            <summary>
              查找类似 设置控件背景渐变色的浅色部分起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientLineDescription">
            <summary>
              查找类似 过渡色线段。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientLowColorChangedDescription">
            <summary>
              查找类似 当控件的GradientLowColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientLowColorDescription">
            <summary>
              查找类似 设置控件背景渐变色的深色部分起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientModeChangedDescription">
            <summary>
              查找类似 当控件的GradientMode属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GradientModeDescription">
            <summary>
              查找类似 指定控件上颜色渐变的过渡方向。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.GSBPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的GradientSplitBar属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HidePrefixDescription">
            <summary>
              查找类似 指定是否隐藏文字前缀。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighColorLuminanceDescription">
            <summary>
              查找类似 设置过渡色浅色部分启始色的亮度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightBorderDescription">
            <summary>
              查找类似 边框内侧是否高亮显示。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightedDescription">
            <summary>
              查找类似 当控件高亮显示时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightGradientHighColorDescription">
            <summary>
              查找类似 当鼠标经过时，控件上过渡背景色浅色部分的起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightGradientHighColorEventDescription">
            <summary>
              查找类似 当控件的HighlightGradientHighColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightGradientLowColorDescription">
            <summary>
              查找类似 当鼠标经过时，控件上过渡背景色深色部分的起始颜色。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightGradientLowColorEventDescription">
            <summary>
              查找类似 当控件的HighlightGradientLowColor属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HighlightTransitionPercentDescription">
            <summary>
              查找类似 控件过渡色的启始位置，以百分比表示(.01 至 .99)。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSNavButtonDescription">
            <summary>
              查找类似 具有过渡背景色的导航按钮，当鼠标经过时会高亮显示。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSNavPaneDescription">
            <summary>
              查找类似 可包含多个页面的导航面板。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSNavPaneOptionsDialogAvialableListToolTip">
            <summary>
              查找类似 所有可用的按钮 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSNavPaneOptionsDialogTitle">
            <summary>
              查找类似 导航面板选项 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSPanelDescription">
            <summary>
              查找类似 具有过渡背景色的Panel控件。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSSplitBarDescription">
            <summary>
              查找类似 具有过度背景色和立体原点的分隔条。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.HSSplitBarDirectionDescription">
            <summary>
              查找类似 分隔条的显示方向。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageAlignChangedEventDescription">
            <summary>
              查找类似 当控件的ImageAlign属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageAlignmentDescription">
            <summary>
              查找类似 指定控件上图片的对齐方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageChangedEventDescription">
            <summary>
              查找类似 当控件的Image属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageDescription">
            <summary>
              查找类似 控件上显示的图片。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageInCaptionDescription">
            <summary>
              查找类似 指定当前被激活的页面标题图片是否显示在导航面板标题栏中。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageIndexChangedEventDescription">
            <summary>
              查找类似 当控件的ImageIndex属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageIndexDescription">
            <summary>
              查找类似 控件所显示的图片在ImageList控件中的索引值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageIndexFooterChangedEventDescription">
            <summary>
              查找类似 当ImageIndexFooter属性值改变时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageListDescription">
            <summary>
              查找类似 包含要在控件上显示的图片的ImageList控件。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ImageListFooterDescription">
            <summary>
              查找类似 包含控件底部工具栏按钮图片的ImageList。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.IntervalDescription">
            <summary>
              查找类似 动画播放时，每一帧的间隔时间（值越大速度越慢）。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.IsAnimatingDescription">
            <summary>
              查找类似 获取一个值，指定控件当前是否在动画显示图片。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.KeyDescription">
            <summary>
              查找类似 该控件的唯一键值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.LayoutCategory">
            <summary>
              查找类似 布局 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.LayoutTextItem">
            <summary>
              查找类似 影响控件布局的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.LowColorLuminanceDescription">
            <summary>
              查找类似 设置过渡色深色部分启始色的亮度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.Maximized">
            <summary>
              查找类似 Maximized 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MaximizedDescription">
            <summary>
              查找类似 当控件最大化时发生 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MouseOverHighlightDescription">
            <summary>
              查找类似 当鼠标经过时是否高亮显示。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MouseOverHighlightEventDescription">
            <summary>
              查找类似 当控件的MouseOverHighlight属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MoveDownText">
            <summary>
              查找类似 下移 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MoveSelectedButtonDownInOrderToolTip">
            <summary>
              查找类似 将选中的按钮下移一位。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MoveSelectedButtonUpInOrderToolTip">
            <summary>
              查找类似 将选中的按钮上移一位。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.MoveUpText">
            <summary>
              查找类似 上移 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NameDescription">
            <summary>
              查找类似 代码中用于指定此控件实例使用的名称。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NavigationPageCollectionDescription">
            <summary>
              查找类似 控件中的导航页面集合。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPAddVerbDescription">
            <summary>
              查找类似 添加一个导航页面。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPAddVerbText">
            <summary>
              查找类似 添加页面 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPMenuAddRemoveButtonsText">
            <summary>
              查找类似 增加或删除按钮 (&amp;A) 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPMenuOptionsText">
            <summary>
              查找类似 导航面板选项... (&amp;A) 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPMenuShowFewerButtonsText">
            <summary>
              查找类似 减少按钮 (&amp;F) 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPMenuShowMoreButtonsText">
            <summary>
              查找类似 增加按钮 (&amp;M) 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPPPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的HSNaPanePage属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPPropertyNotFoundExceptionText">
            <summary>
              查找类似 未找到匹配的HSNavPane属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPRemoveVerbDescription">
            <summary>
              查找类似 删除一个导航页面。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.NPRemoveVerbText">
            <summary>
              查找类似 删除页面 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.OkText">
            <summary>
              查找类似 确定 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.PropertyChangedCategory">
            <summary>
              查找类似 属性值更改 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.RenderModeDescription">
            <summary>
              查找类似 指定背景图片的显示方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ResetButtonOrderAndVisibilityToOriginalText">
            <summary>
              查找类似 重置按钮设置为初始值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ResetText">
            <summary>
              查找类似 重置 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SelectedDescription">
            <summary>
              查找类似 当一个HSNaPanePage被选中时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SelectedIndexChangedDescription">
            <summary>
              查找类似 当控件的SelectedIndex属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SelectingDescription">
            <summary>
              查找类似 在一个HSNaPanePage被选中之前发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ShowBorderOnHighlightDescription">
            <summary>
              查找类似 指定当控件高亮显示时是否使边框宽度增加1像素。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ShowDisabledBackgroundColorDescription">
            <summary>
              查找类似 指定当控件的Enable属性设置为false时，控件的背景颜色是否显示为不可用（的颜色）。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SpeedDescription">
            <summary>
              查找类似 动画播放速度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SplitBarDescription">
            <summary>
              查找类似 控件分割栏相关属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.SplitBarHeightDescription">
            <summary>
              查找类似 获取或设置一个值，指定控件上分割条的高度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.StayActiveAfterClickDescription">
            <summary>
              查找类似 指定当按钮被单击后是否保持激活状态。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.TabStopDescription">
            <summary>
              查找类似 获取或设置一个值，制定用户是否能够通过TAB键访问到该控件。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.TextAlignChangedEventDescription">
            <summary>
              查找类似 当控件的TextAlign property属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.TextAlignmentDescription">
            <summary>
              查找类似 指定控件上文字的对齐方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.TextDescription">
            <summary>
              查找类似 控件上所显示的文字。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.ToolTipDescription">
            <summary>
              查找类似 控件的提示信息。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.UseCompatibleTextRenderingDescription">
            <summary>
              查找类似 制定文字的呈现是否与上一版本的Windows窗体兼容。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.VisibleButtonCountDescription">
            <summary>
              查找类似 设置控件上可见按钮（即未最小化的按钮）的起始数量。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkAlphaChangedDescription">
            <summary>
              查找类似 当控件的WatermarkAlpha属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkAlphaDescription">
            <summary>
              查找类似 控件上水印的alpha（透明度）值（0 - 255）。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkDisplayStyleChangedDescription">
            <summary>
              查找类似 当控件的WatermarkDisplayStyle属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkDisplayStyleDescription">
            <summary>
              查找类似 指定水印图片的显示方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkImageAlignChangedEventDescription">
            <summary>
              查找类似 当控件的WatermarkImageAlign属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkImageAlignmentDescription">
            <summary>
              查找类似 指定水印图片的对齐方式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkImageChangedDescription">
            <summary>
              查找类似 当控件的WatermarkImage属性值更改时发生。 的本地化字符串。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.NavPane.Resource.DefaultResource.WatermarkImageDescription">
            <summary>
              查找类似 控件上显示为水印的图像。 的本地化字符串。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsPictureBox">
            <summary>
            Windows图片框控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPictureBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPictureBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPictureBox.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsPictureBox.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsPictureBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsScrollBar">
            <summary>
            水平滚动条控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsScrollBar.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsScrollBar.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollBar.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSeparator">
            <summary>
            分隔线
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.hsSeparator.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSeparator.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSeparator.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsSeparator.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="P:HSUCF.Controls.hsSeparator.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSeparator.ForeColor">
            <summary>
            前景色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsVScrollBar">
            <summary>
            垂直滚动条控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVScrollBar.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsVScrollBar.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVScrollBar.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVScrollBar.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsVScrollBar.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsWebBrowser">
            <summary>
            用于承载网页的控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsWebBrowser.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsWebBrowser.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsWebBrowser.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsWebBrowser.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsWebBrowser.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsPager">
            <summary>
            分页控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.InitClientPageInfo(System.Int32)">
            <summary>
            初始客户端分页信息 
            </summary>
            <param name="recordCount">总记录数</param>
        </member>
        <member name="F:HSUCF.Controls.hsPager._pageSize">
            <summary>
            每页显示记录数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.OnPaging">
            <summary>
            引发分页事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.OnPagingClientByTable(System.Int32,System.Int32)">
            <summary>
            通过数据表格方式进行客户端分页（这个更耗内存，因为每次都绘制指定分页大小的数据表）
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GetPrimaryKeyPair(System.Data.DataTable)">
            <summary>
            得到数据源的主键名称
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPager.OnPagingClientByView(System.Int32,System.Int32,System.Collections.Generic.KeyValuePair{System.String,HSUCF.Controls.hsPager.PrimaryKeyDataType})">
            <summary>
            通过数据视图方式进行客户端分页
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
            <param name="primaryKey"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.SetPageCount">
            <summary>
            重新计算页数并设置PageCount
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.RefreshText">
            <summary>
            刷新标签的显示文本，纠正属性值，控制按钮的可用性
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GoFirst">
            <summary>
            跳到首页
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GoPrev">
            <summary>
            跳到上一页
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GoNext">
            <summary>
            跳到下一页
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GoLast">
            <summary>
            跳到最后一页
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.GoPage(System.Int32)">
            <summary>
            跳转到第几页
            </summary>
            <param name="pageIndex">页号</param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.btnFirst_Click(System.Object,System.EventArgs)">
            <summary>
            跳到首页
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.btnPrev_Click(System.Object,System.EventArgs)">
            <summary>
            跳到上一页
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.btnNext_Click(System.Object,System.EventArgs)">
            <summary>
            跳到下一页
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.btnLast_Click(System.Object,System.EventArgs)">
            <summary>
            跳到最后一页
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.btnGo_Click(System.Object,System.EventArgs)">
            <summary>
            按Go按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.FindAllControls(System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            查找所有子控件
            </summary>
            <param name="c"></param>
            <param name="controls"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.ApplyResource">
            <summary>
            分页控件多语言切换
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPager.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <!-- 对于成员“F:HSUCF.Controls.hsPager.hsTheme”忽略有格式错误的 XML 注释 -->
        <member name="M:HSUCF.Controls.hsPager.FirePageSizeChanged">
            <summary>
            触发页数大小改变
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.cbPageSize_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            页数大小选择器选项改变
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.cbPageSize_CmdKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            页数大小选择器处理Tab,Esc键
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.cbPageSize_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            页数大小选择器处理一般按键
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.cbPageSize_Validated(System.Object,System.EventArgs)">
            <summary>
            页数大小选择器处理Validated事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsPager.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPager.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsPager.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsPager.AfterAutoPaging">
            <summary>
            采用自动分页后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsPager.EventPaging">
            <summary>
            分页事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.TargetGrid">
            <summary>
            设置客户端分页的目标Grid
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.TargetDataSource">
            <summary>
            设置客户端分页的数据源(用于分页的数据源)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.IsFirstPage">
            <summary>
            是否首页
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.IsLastPage">
            <summary>
            是否末页
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.PageSize">
            <summary>
            每页显示记录数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.PageSizeInSelector">
            <summary>
            在选择器上的分页大小。如果页数是错误的格式，则范围为空；如果页数小于等于0，也返回空；
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.PageCount">
            <summary>
            页数=总记录数/每页显示记录数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.CurrentPageIndex">
            <summary>
            当前页号(页索引是从1开始的)
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPager.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsPager.PrimaryKeyDataType">
            <summary>
            客户端分页数据列类型
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PagerToolStripComboBox">
            <summary>
            专用于分页控件内，做为页数大小选择器
            </summary>
        </member>
        <member name="E:HSUCF.Controls.PagerToolStripComboBox.CmdKeyDown">
            <summary>
            命令键按下事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.EventPagingHandler">
            <summary>
            分页事件委托
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.EventPagingArg">
            <summary>
            自定义事件数据基类
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GridReferenceConverter">
            <summary>
            Grid引用转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsFlowLayoutPanel">
            <summary>
            流水形式布局的面板，用于包含其他控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlowLayoutPanel.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsFlowLayoutPanel.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlowLayoutPanel.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlowLayoutPanel.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsFlowLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlowLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsFlowLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsGroupBox">
            <summary>
            带标题的Panel控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGroupBox.CNS_TitlePadding">
            <summary>
            标题内边距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsGroupBox.CNS_TitleIcoWidth">
            <summary>
            标题图标宽度
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsGroupBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBox.TitleAppearance">
            <summary>
            带标题panel样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsGroupBox.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:HSUCF.Controls.GroupBoxAppearance">
            <summary>
            描述hsPanel外观
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSGroupBoxAppearance">
            <summary>
            描述Panel外观
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSGroupBoxAppearance.#ctor(System.Windows.Forms.GroupBox)">
            <summary>
            初始化一个外观
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:HSUCF.Controls.HSGroupBoxAppearance.InitStyle">
            <summary>
            初始化外观样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSGroupBoxAppearance.OnAppearanceChange">
            <summary>
            引发外观变化事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSGroupBoxAppearance.RefreshOwner">
            <summary>
            重绘控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.OuterBorderColor">
            <summary>
            外边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.OuterBorderWidth">
            <summary>
            外边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.InnerBorderColor">
            <summary>
            内边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.InnerBorderEnabled">
            <summary>
            是否启用内边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSGroupBoxAppearance.InnerBorderWidth">
            <summary>
            内边框宽度
            </summary>
        </member>
        <member name="E:HSUCF.Controls.HSGroupBoxAppearance.AppearanceChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GroupBoxAppearance.#ctor(System.Windows.Forms.GroupBox)">
            <summary>
            初始化一个外观
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:HSUCF.Controls.GroupBoxAppearance.OnAppearanceChange">
            <summary>
            引发外观变化事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.GroupBoxAppearance.RefreshOwner">
            <summary>
            重绘控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.TitleHeight">
            <summary>
            标题栏高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.TitleFont">
            <summary>
            标题字体
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.TitleColor">
            <summary>
            标题颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.SeparateLineColor">
            <summary>
            分割线颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.SeparateLineStyle">
            <summary>
            分割线样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.IcoColor1">
            <summary>
            ICO颜色1
            </summary>
        </member>
        <member name="P:HSUCF.Controls.GroupBoxAppearance.IcoColor2">
            <summary>
            ICO颜色2
            </summary>
        </member>
        <member name="E:HSUCF.Controls.GroupBoxAppearance.AppearanceChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="F:HSUCF.Controls.GroupBoxStyle.TitleGroupBox">
            <summary>
            带标题的分组框
            </summary>
        </member>
        <member name="F:HSUCF.Controls.GroupBoxStyle.Default">
            <summary>
            默认为带标题的分组框
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsPanel">
            <summary>
            容器面板，用于包含其他控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IRegionalValidateContainer">
            <summary>
            校验控件所在区域容器控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.IRegionalValidateContainer.Controls">
            <summary>
            子控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.ResetChildren(System.Boolean)">
            <summary>
            hsPanel提供重置/清空容器内控件文本或值功能
            </summary>
            <param name="isRecur">是否递归hsPanel重置</param>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutLeft">
            <summary>
            左边距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutTop">
            <summary>
            上边距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutRight">
            <summary>
            右边距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutBottom">
            <summary>
            下边距
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.interval">
            <summary>
            Interval高度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutIntervalButton">
            <summary>
            获取或设置按钮之间的间隔
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.col">
            <summary>
            控件列数
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layouted">
            <summary>
            是否已经布局过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsPanel.layoutedSize">
            <summary>
            返回整个panel布局完成后，panel可以设置的最小Size(宽度和高度）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.DoLayout(System.Boolean)">
            <summary>
            布局管理
            reLayout表示是否刷新布局；True 表示刷新布局；false表示不刷新；默认为false
            </summary>
            <param name="reLayout">是否刷新布局；True 表示刷新布局；false表示不刷新；默认为false</param>
            <remarks>
            一、按照TabIndex垂直、水平排列，按钮被排在最后一列。
            1. 可以设置整个布局的边缘（上下左右）;
            2. 可以设置每一列间的左右间隔
            3. 可以设置每一行间的上下间隔
            4. 可以设置列数
            5. 列中控件都是靠右对齐
            
            二、K列的列宽度和列高度计算公式如下，其中以下的表述K从1开始计数：
            1. K列的列宽为K列中宽度最大的控件的宽度
            2. K列的高度为K列最后一行之前的K列每一行控件的高度和 + K列最后一行之前的行数*上下间隔数 + K列最后一行的高度
            
            三、I行K列的控件的位置(Left,Top)，其中以下的表述I,K从1开始计数
            1. I行K列的控件的Left 
            1) 当是第一列的时：整个布局的左边缘(LayoutLeft) + ( 第一列的列宽 - 该控件的宽度 )
            2) 当不是第一列的时：整个布局的左边缘(LayoutLeft) + ( 前K-1个列的列宽的和 + 前K-1个左右间隔和 )
            
            2. I行K列的控件的Top
            1) 当是第一行的时：整个布局的上边缘(LayoutTop)
            2) 当不是第一行的时：整个布局的上边缘(LayoutTop) + ( 前I-1行的控件的高度和 + 前I-1个上下间隔和 )
            </remarks>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.DoLayoutVertical(System.Boolean)">
            <summary>
            垂直布局 
            </summary>
            <param name="reLayout">是否刷新布局；True 表示刷新布局；false表示不刷新；默认为false</param> 
        </member>
        <member name="M:HSUCF.Controls.hsPanel.DoLayoutHorizontal(System.Boolean)">
            <summary>
            水平布局
            </summary>
            <param name="reLayout">是否刷新布局；True 表示刷新布局；false表示不刷新；默认为false</param> 
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.DoLayoutCtrlsAndButtons(System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.Windows.Forms.Control}})">
            <summary>
            对组装完毕的输入性控件的二维表和按钮控件行布局
            </summary>
            <param name="colCount">目标列数</param>
            <param name="ctrlTable">输入性控件的二维表</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.DoLayoutChineseNumberLabel">
            <summary>
            使中文大写重新定位
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPanel.GetValidateControl">
            <summary>
            获取所有校验子控件
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.LayoutOrientation">
            <summary>
            自动布局方式，默认按照Tab顺序垂直布局
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsPanel.HSUCF#Controls#IRegionalValidateContainer#Controls">
            <summary>
            得到子控件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.LayoutOrientation">
            <summary>
            布局方式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LayoutOrientation.Horizontal">
            <summary>
            水平放置控件或元素
            </summary>
        </member>
        <member name="F:HSUCF.Controls.LayoutOrientation.Vertical">
            <summary>
            垂直放置控件或元素
            </summary>
        </member>
        <!-- 对于成员“T:HSUCF.Controls.Reverser`1”忽略有格式错误的 XML 注释 -->
        <member name="M:HSUCF.Controls.Reverser`1.#ctor(System.Type,System.String,HSUCF.Controls.ReverserInfo.Direction)">
            <summary>
            构造函数
            </summary>
            <param name="type">进行比较的类类型</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="direction">比较方向(升序/降序)</param>
        </member>
        <member name="M:HSUCF.Controls.Reverser`1.#ctor(System.String,System.String,HSUCF.Controls.ReverserInfo.Direction)">
            <summary>
            构造函数
            </summary>
            <param name="className">进行比较的类名称</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="direction">比较方向(升序/降序)</param>
        </member>
        <member name="M:HSUCF.Controls.Reverser`1.#ctor(`0,System.String,HSUCF.Controls.ReverserInfo.Direction)">
            <summary>
            构造函数
            </summary>
            <param name="t">进行比较的类型的实例</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="direction">比较方向(升序/降序)</param>
        </member>
        <!-- 对于成员“M:HSUCF.Controls.Reverser`1.System#Collections#Generic#IComparer{T}#Compare(`0,`0)”忽略有格式错误的 XML 注释 -->
        <member name="M:HSUCF.Controls.Reverser`1.Swap(System.Object@,System.Object@)">
            <summary>
            交换操作数
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:HSUCF.Controls.ReverserInfo">
            <summary>
            对象比较时使用的信息类
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ReverserInfo.Direction">
            <summary>
            比较的方向，如下：
            ASC：升序
            DESC：降序
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitContainer">
            <summary>
            大小可调的两个面板的组合面板容器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitContainer.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitContainer.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.SplitterColor">
            <summary>
            分隔条颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainer.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSplitter">
            <summary>
            拆分器控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitter.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSplitter.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSplitter.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitter.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitter.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitter.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTableLayoutPanel">
            <summary>
            网格形式布局的面板
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTableLayoutPanel.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTableLayoutPanel.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTableLayoutPanel.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTableLayoutPanel.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsTableLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTableLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTableLayoutPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PushPanel.ControlState">
            <summary>
            控件的状态。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.ControlState.Normal">
            <summary>
             正常。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.ControlState.Hover">
            <summary>
            鼠标进入。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.ControlState.Pressed">
            <summary>
            鼠标按下。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.ControlState.Focused">
            <summary>
            获得焦点。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.PushPanel.GraphicsPathHelper.CreatePath(System.Drawing.Rectangle,System.Int32,HSUCF.Controls.PushPanel.RoundStyle,System.Boolean)">
            <summary>
            建立带有圆角样式的路径。
            </summary>
            <param name="rect">用来建立路径的矩形。</param>
            <param name="_radius">圆角的大小。</param>
            <param name="style">圆角的样式。</param>
            <param name="correction">是否把矩形长宽减 1,以便画出边框。</param>
            <returns>建立的路径。</returns>
        </member>
        <member name="T:HSUCF.Controls.PushPanel.hsPushPanel">
            <summary>
            PushPanel容器面板，用于包含其他控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.hsPushPanel.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.hsPushPanel.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.Handle">
            <summary>
            获取句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.Height">
            <summary>
            控件高度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.IsHandleCreated">
            <summary>
            是否创建句柄
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.Width">
            <summary>
            控件宽度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.PushPanel.hsPushPanel.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.None">
            <summary>
            四个角都不是圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.TopLeft">
            <summary>
            左上角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.TopRight">
            <summary>
            右上角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.BottomLeft">
            <summary>
            左下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.BottomRight">
            <summary>
            右下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.Left">
            <summary>
            左边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.Right">
            <summary>
            右边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.Top">
            <summary>
            上边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.Bottom">
            <summary>
            下边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.RoundStyle.All">
            <summary>
            四个角都为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTCLIENT">
            <summary>In a client area.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTCAPTION">
            <summary>In a title bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTGROWBOX">
            <summary>In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTMENU">
            <summary>In a menu.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTHSCROLL">
            <summary>In a horizontal scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTVSCROLL">
            <summary>In the vertical scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTMINBUTTON">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTMAXBUTTON">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTLEFT">
            <summary>In the left border of a resizable window 
            (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTRIGHT">
            <summary>
            In the right border of a resizable window 
            (the user can click the mouse to resize the window horizontally).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTTOP">
            <summary>In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTTOPLEFT">
            <summary>In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTBOTTOM">
            <summary>	In the lower-horizontal border of a resizable window 
            (the user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTBOTTOMLEFT">
            <summary>In the lower-left corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTBOTTOMRIGHT">
            <summary>	In the lower-right corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTBORDER">
            <summary>In the border of a window that does not have a sizing border.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTCLOSE">
            <summary>In a Close button.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.HITTEST.HTHELP">
            <summary>In a Help button.</summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_LISTVIEW_CLASSES">
            <summary>
            listview, header
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_TREEVIEW_CLASSES">
            <summary>
            treeview, tooltips
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_BAR_CLASSES">
            <summary>
            注册工具栏、状态栏、Trackbar和Tooltip类。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_TAB_CLASSES">
            <summary>
            tab, tooltips
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_UPDOWN_CLASS">
            <summary>
            updown
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_PROGRESS_CLASS">
            <summary>
            progress
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_HOTKEY_CLASS">
            <summary>
            hotkey
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_ANIMATE_CLASS">
            <summary>
            animate
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_DATE_CLASSES">
            <summary>
            month picker, date picker, time picker, updown
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_USEREX_CLASSES">
            <summary>
            comboex
            </summary>
        </member>
        <member name="F:HSUCF.Controls.PushPanel.Win32.Const.ICC.ICC_COOL_CLASSES">
             <summary>
            注册Rebar类。
             </summary>
        </member>
        <member name="T:HSUCF.Controls.SplitContainer.CollapsePanel">
            <summary>
            点击SplitContainer控件收缩按钮时隐藏的Panel。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.SplitContainer.ControlState">
            <summary>
            控件的状态。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.ControlState.Normal">
            <summary>
             正常。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.ControlState.Hover">
            <summary>
            鼠标进入。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.ControlState.Pressed">
            <summary>
            鼠标按下。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.ControlState.Focused">
            <summary>
            获得焦点。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.SplitContainer.GraphicsPathHelper.CreatePath(System.Drawing.Rectangle,System.Int32,HSUCF.Controls.SplitContainer.RoundStyle,System.Boolean)">
            <summary>
            建立带有圆角样式的路径。
            </summary>
            <param name="rect">用来建立路径的矩形。</param>
            <param name="_radius">圆角的大小。</param>
            <param name="style">圆角的样式。</param>
            <param name="correction">是否把矩形长宽减 1,以便画出边框。</param>
            <returns>建立的路径。</returns>
        </member>
        <member name="T:HSUCF.Controls.hsSplitContainerEx">
            <summary>
            扩展的大小可调的两个面板的组合面板容器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitContainerEx.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSplitContainerEx.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainerEx.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainerEx.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainerEx.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainerEx.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSplitContainerEx.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.SplitContainer.RoundStyle">
            <summary>
            建立圆角路径的样式。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.None">
            <summary>
            四个角都不是圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.All">
            <summary>
            四个角都为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.Left">
            <summary>
            左边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.Right">
            <summary>
            右边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.Top">
            <summary>
            上边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.Bottom">
            <summary>
            下边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.BottomLeft">
            <summary>
            左下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.SplitContainer.RoundStyle.BottomRight">
            <summary>
            右下角为圆角。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.PenPools">
            <summary>
            画笔池
            </summary>
        </member>
        <member name="T:HSUCF.Controls.BrushPools">
            <summary>
            画笔池
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnOpened(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnClosing(System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.UpdateRegion">
            <summary>
            
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.Show(System.Windows.Forms.Control)">
            <summary>
            显示下拉容器
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.Show(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            显示下拉容器
            </summary>
            <param name="control"></param>
            <param name="center"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.Show(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>
            显示下拉容器
            </summary>
            <param name="control"></param>
            <param name="rect"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.Show(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            显示下拉容器
            </summary>
            <param name="control"></param>
            <param name="rect"></param>
            <param name="center"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.SetOwnerItem(System.Windows.Forms.Control)">
            <summary>
            设置节点
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.CreateHost(System.Windows.Forms.Control)">
            <summary>
            创建载体
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.PopupControlRegionChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.ProcessGrip(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnGetMinMaxInfo(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsPopupControlHost.OnNcHitTest(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.hsPopupControlHost.ChangeRegion">
            <summary>
            获取或设置是否显示区域边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPopupControlHost.OpenFocused">
            <summary>
            获取或设置是否把焦点设置到弹出窗体上
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPopupControlHost.AcceptAlt">
            <summary>
            获取或设置是否接受ALT键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPopupControlHost.CanResize">
            <summary>
            获取或设置是否弹出框大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsPopupControlHost.BorderColor">
            <summary>
            获取或设置是否弹出框边框颜色
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Scroll.ScrollEventArgs">
            <summary>
            跑马灯事件参数
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Scroll.ScrollElement">
            <summary>
            跑马灯滚动元素
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Scroll.ScrollElement.DoDraw(System.Single)">
            <summary>
            初始化时绘制
            </summary>
            <param name="x">X坐标</param>
        </member>
        <member name="M:HSUCF.Controls.Scroll.ScrollElement.Draw(System.Drawing.Graphics,System.Drawing.Image,System.Boolean)">
            <summary>
            条件：图片、文字、X坐标
            ImgRec、TextRec
            </summary>
            <param name="canvas"></param>
            <param name="img"></param>
            <param name="showImg">是否显示图片</param>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.Text">
            <summary>
            重写Text属性，可以自定义显示的文字内容
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.BuildImage">
            <summary>
            重写BuildImage属性，可以自定义显示的图片内容
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.ForeColor">
            <summary>
            文字前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.Scroll.ScrollElement.X">
            <summary>
            X坐标
            </summary>
        </member>
        <member name="E:HSUCF.Controls.Scroll.ScrollElement.ImageClick">
            <summary>
            图片单击事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.Scroll.ScrollElement.TextClick">
            <summary>
            文字单击事件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsScrollingTextEx.ImgGap">
            <summary>
            图片间距
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingTextEx.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingTextEx.ScrollingTextEx_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标右键弹菜单
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingTextEx.DoDraw(System.Boolean)">
            <summary>
            重绘
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsScrollingTextEx.DoInvalidate">
            <summary>
            重绘
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.Message">
            <summary>
            返回消息列表（不能修改）
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.ItemCount">
            <summary>
            元素个数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.ID">
            <summary>
            返回当前选中元素ID
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.ContextMenuStrip">
            <summary>
            设置右键菜单
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.IsShowImage">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.TextScrollSpeed">
            <summary>
            文本滚动速度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.TextScrollRate">
            <summary>
            文本滚动频率，以毫秒为单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.TextScrollDistance">
            <summary>
            移动速度,以像素为单位
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.ScrollDirection">
            <summary>
            文本移动方向
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.VerticleTextPosition">
            <summary>
            文本排列方式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.ShowBorder">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsScrollingTextEx.StopScrollOnMouseOver">
            <summary>
            鼠标移动上去是否停止滚动
            </summary>
        </member>
        <member name="T:HSUCF.Controls.TextBoxFlatState">
            <summary>
            文本框状态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.TextBoxAppearance._backColorNormal">
            <summary>
            正常状态下背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.TextBoxAppearance._foreColorNormal">
            <summary>
            正常状态下前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BorderColorNormal">
            <summary>
            正常状态下边框色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.UnitColorNormal">
            <summary>
            正常状态下单位背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BackColorActive">
            <summary>
            点击状态下背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.ForeColorActive">
            <summary>
            点击状态下前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BorderColorActive">
            <summary>
            点击状态下边框色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.UnitColorActive">
            <summary>
            点击状态下单位背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BackColorDisable">
            <summary>
            禁用状态下单位背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.ForeColorDisable">
            <summary>
            禁用状态下前景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BorderColorDisable">
            <summary>
            禁用状态下边框色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.UnitColorDisable">
            <summary>
            禁用状态下单位背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BorderColorReadOnly">
            <summary>
            只读状态下边框色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.TextBoxAppearance.BackColorReadOnly">
            <summary>
            只读状态下背景色
            </summary>
        </member>
        <member name="E:HSUCF.Controls.TextBoxAppearance.CustomColorsChanged">
            <summary>
            样式属性改变时需要调用这个事件触发设计时和运行时效果
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ResourceCache">
            <summary>
            资源缓存
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Skin.ShadowForm.CanPenetrate">
            <summary>
            使窗口有鼠标穿透功能
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.ShadowForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Skin.ShadowForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.Skin.ShadowForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_HOR_POSITIVE">
            <summary>
            从左到右显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_HOR_NEGATIVE">
            <summary>
            从右到左显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_VER_POSITIVE">
            <summary>
            从上到下显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_VER_NEGATIVE">
            <summary>
            从下到上显示
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_CENTER">
            <summary>
            若使用了AW_HIDE标志，则使窗口向内重叠，即收缩窗口；否则使窗口向外扩展，即展开窗口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_HIDE">
            <summary>
            隐藏窗口，缺省则显示窗口
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_ACTIVATE">
            <summary>
            激活窗口。在使用了AW_HIDE标志后不能使用这个标志
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_SLIDE">
            <summary>
            使用滑动类型。缺省则为滚动动画类型。当使用AW_CENTER标志时，这个标志就被忽略
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.Win32.AW_BLEND">
            <summary>
            透明度从高到低
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Skin.Win32.AnimateWindow(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            执行动画
            </summary>
            <param name="whnd">控件句柄</param>
            <param name="dwtime">动画时间</param>
            <param name="dwflag">动画组合名称</param>
            <returns>bool值，动画是否成功</returns>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            绘制选中颜色
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            绘制背景设
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.RenderToolStripDropDownBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            绘制边框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.RenderToolStripDropDownBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            绘制背景设
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            绘制分割线
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.MyContexRender.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:HSUCF.Controls.hsMenuStrip">
            <summary>
            菜单栏控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMenuStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsMenuStrip.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMenuStrip.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.CanOverflow">
            <summary>
            是否支持溢出功能
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.FixedOverflow">
            <summary>
            是否固定工具栏上的按钮Overflow属性为AsNeeded
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMenuStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsStatusStrip">
            <summary>
            状态栏控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsStatusStrip.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsStatusStrip.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsStatusStrip.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsStatusStrip.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsStatusStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsStatusStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsStatusStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolStrip">
            <summary>
            工具栏控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStrip.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolStrip.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStrip.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStrip.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsToolStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStrip.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ProfessionalToolStripRendererEx.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            重绘EnabledStripButton为true是的背景颜色和边框
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripContainer">
            <summary>
            在窗体的每一侧提供面板，并提供可以容纳一个或多个控件的中间面板
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripContainer.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripContainer.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripContainer.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripContainer.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolStripDropDown">
            <summary>
            标签控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripDropDown.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolStripDropDown.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDown.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDown.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolStripDropDown.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsToolTip">
            <summary>
            提示控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolTip.TIME_CUE">
            <summary>
            提示信息显示秒数，默认显示3秒
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolTip.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsToolTip.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsToolTip.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            使工具提示文本与指定的控件相关联。
            </summary>
            <param name="control">要将工具提示文本与其关联的控件</param>
            <param name="caption">指针位于控件上方时要显示的工具提示文本。</param>
        </member>
        <member name="P:HSUCF.Controls.hsToolTip.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsToolTip.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="F:Hundsun.Framework.HSControls.hsToolTipEx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Hundsun.Framework.HSControls.hsToolTipEx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Hundsun.Framework.HSControls.hsToolTipEx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsValidateToolTip.Finalize">
            <summary>
            资源释放
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsValidateToolTip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsValidateToolTip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.hsValidateToolTip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Strip.GraphicsPathHelper.CreatePath(System.Drawing.Rectangle,System.Int32,HSUCF.Controls.Strip.RoundStyle,System.Boolean)">
            <summary>
            建立带有圆角样式的路径。
            </summary>
            <param name="rect">用来建立路径的矩形。</param>
            <param name="_radius">圆角的大小。</param>
            <param name="style">圆角的样式。</param>
            <param name="correction">是否把矩形长宽减 1,以便画出边框。</param>
            <returns>建立的路径。</returns>
        </member>
        <member name="T:HSUCF.Controls.Strip.RoundStyle">
            <summary>
            建立圆角路径的样式。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.None">
            <summary>
            四个角都不是圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.All">
            <summary>
            四个角都为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.Left">
            <summary>
            左边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.Right">
            <summary>
            右边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.Top">
            <summary>
            上边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.Bottom">
            <summary>
            下边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.BottomLeft">
            <summary>
            左下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Strip.RoundStyle.BottomRight">
            <summary>
            右下角为圆角。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteTextBox.MoveSelectionInListBox(System.Int32)">
            <summary>
            根据索引选中
            </summary>
            <param name="Index"></param>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteTextBox.UpdateCurrentAutoCompleteList">
            <summary>
            更新
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsAutoCompleteTextBox.UpdateListBoxItems">
            <summary>
            更新
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteTextBox.AutoCompleteList">
            <summary>
            自动完成数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteTextBox.CaseSensitive">
            <summary>
            大小写敏感
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteTextBox.SelectedIndex">
            <summary>
            获取或者设置选中项
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteTextBox.CurrentAutoCompleteList">
            <summary>
            当前显示的数据源
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsAutoCompleteTextBox.ParentForm">
            <summary>
            当前控件的所属窗体
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsSecureTextBox">
            <summary>
            密码控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._syncRoot">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._lastCaptionHitTime">
            <summary>
            上次点击标题栏的时间
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._secureText">
            <summary>
            安全字符串,用于保存输入内容
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._maskText">
            <summary>
            实际显示字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._sendKeyTimer">
            <summary>
            发送随机按键线程
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox.updateCursorTimer">
            <summary>
            更新编辑状态光标定时器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._keyBoard">
            <summary>
            屏幕键盘
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._lastRndChar">
            <summary>
            上一个随机字符
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._pauseThread">
            <summary>
            指示是否暂停定时器和发送按键线程
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._showPaintCursor">
            <summary>
            指示是否显示编辑状态光标
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox._keyBoardButtonActive">
            <summary>
            指示屏幕键盘按钮是否被激活
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsSecureTextBox.randomGen">
            <summary>
            获取随机数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnPopUpKeyBoardClicked(System.Object,System.EventArgs)">
            <summary>
            屏幕键盘被点击时事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnTextChanged(System.Object,System.EventArgs)">
            <summary>
            Text改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnClick(System.EventArgs)">
            <summary>
            OnClick事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            OnPreviewKeyDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            屏蔽左右键
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            OnKeyPress
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            OnGotFocus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnLostFocus(System.EventArgs)">
            <summary>
            OnLostFocus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.Decode(System.String)">
            <summary>
            DES解密
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.Dispose(System.Boolean)">
            <summary>
            资源释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            OnHandleCreated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsSecureTextBox.OnHandleDestroyed(System.EventArgs)">
            <summary>
            OnHandleDestroyed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.PopUpKeyBoardClicked">
            <summary>
            屏幕键盘弹出事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.TextChanged">
            <summary>
            Text改变事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.Encoder">
            <summary>
            自定义加密接口,未指定将返回原文
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.SupportEncoder">
            <summary>
            是否使用加密器将Text加密
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.Size">
            <summary>
            控件大小
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.Text">
            <summary>
            DES加密后的安全字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.SecureText">
            <summary>
            安全字符串
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.TextLength">
            <summary>
            字符长度
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.BorderStyle">
            <summary>
            Border类型
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.ShowPopUpKeyBoard">
            <summary>
            是否显示屏幕键盘
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.MaxLength">
            <summary>
            最大可以输入的字符数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsSecureTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.HSValidating">
            <summary>
            HSValidating事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsSecureTextBox.HSValidated">
            <summary>
            HSValidated事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTextBoxBak">
            <summary>
            标准文本控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.hsCtrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.nullableContextMenuStrip">
            <summary>
            上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.nullableContextMenu">
            <summary>
            旧时上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.oldContextMenuStrip">
            <summary>
            用于记录已经绑定的上下文菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.oldContextMenu">
            <summary>
            用于记录已经绑定的旧时上下文菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.ShowPWDToolTip(System.Windows.Forms.KeyEventArgs)">
            <summary>
            显示作为密码控件的时候显示passwordToolTip
            </summary>
            <param name="opType">操作类型：复制，剪切，黏贴</param>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.ClosePWDToolTip">
            <summary>
            显示作为密码控件的时候移除passwordToolTip
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.CtrlV">
            <summary>
            处理 Ctrl+V
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsTextBoxBak.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBoxBak.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.BackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.ForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.DisabledBackColor">
            <summary>
            TextBox不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.DisabledForeColor">
            <summary>
            TextBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.BottomBorderUseWaveLine">
            <summary>
            底边框使用波浪线
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBoxBak.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBoxBak.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DecimalPlacesConverter">
            <summary>
            小数位数转换器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ControlTheme">
            <summary>
            控件样式默认方案（背景色，前景色，字体大小，行高，等等，细分到每个控件）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_BackColor">
            <summary>
            系统默认的背景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ForeColor">
            <summary>
            系统默认的前景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_BorderColor">
            <summary>
            系统默认的前景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DisabledBackColor">
            <summary>
            系统默认的组件/控件不可用情况下的背景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DisabledForeColor">
            <summary>
            系统默认的组件/控件不可用情况下的前景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DomainUpDown_DisabledBackColor">
            <summary>
            DomainUpDown不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DomainUpDown_DisabledForeColor">
            <summary>
            DomainUpDown不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_NumericUpDown_DisabledBackColor">
            <summary>
            NumericUpDown不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_NumericUpDown_DisabledForeColor">
            <summary>
            NumericUpDown不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripButton_BackColor">
            <summary>
            ToolStripButton默认背景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripButton_ForeColor">
            <summary>
            ToolStripButton默认前景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripDropDownButton_BackColor">
            <summary>
            ToolStripDropDownButton默认背景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripDropDownButton_ForeColor">
            <summary>
            ToolStripDropDownButton默认前景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_CheckBox_DisabledBackColor">
            <summary>
            CheckBox不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_CheckBox_DisabledForeColor">
            <summary>
            CheckBox不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TrackBar_DisabledBackColor">
            <summary>
            TrackBar不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TextBox_DisabledBackColor">
            <summary>
            TextBox不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TextBox_DisabledForeColor">
            <summary>
            TextBox不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_MaskedTextBox_DisabledBackColor">
            <summary>
            MaskedTextBox不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_MaskedTextBox_DisabledForeColor">
            <summary>
            MaskedTextBox不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_NumericEditor_DisabledBackColor">
            <summary>
            NumericEditor不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_NumericEditor_DisabledForeColor">
            <summary>
            NumericEditor不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_RichTextBox_DisabledBackColor">
            <summary>
            RichTextBox不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_RichTextBox_DisabledForeColor">
            <summary>
            RichTextBox不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DateTimePicker_DisabledBackColor">
            <summary>
            DateTimePicker不可用默认背景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_DateTimePicker_DisabledForeColor">
            <summary>
            DateTimePicker不可用默认前景色字符串
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TreeView_BackColor">
            <summary>
            TreeView默认背景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TreeView_ForeColor">
            <summary>
            TreeView默认前景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_TreeView_LineColor">
            <summary>
            TreeView默认线颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripMenuItem_BackColor">
            <summary>
            ToolStripMenuItem默认背景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_ToolStripMenuItem_ForeColor">
            <summary>
            ToolStripMenuItem默认前景色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_Transparent">
            <summary>
            透明色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Const_InputBackColor">
            <summary>
            系统默认的编辑类型控件的输入区域的背景色的颜色常量
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Defalut_BackColor">
            <summary>
            系统默认的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Defalut_ForeColor">
            <summary>
            系统默认的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Defalut_DisabledBackColor">
            <summary>
            系统默认的组件/控件不可用情况下的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Defalut_DisabledForeColor">
            <summary>
            系统默认的组件/控件不可用情况下的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_BackColor">
            <summary>
            系统默认的背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ForeColor">
            <summary>
            系统默认的前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DisabledBackColor">
            <summary>
            系统默认的组件/控件不可用情况下的背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DisabledForeColor">
            <summary>
            系统默认的组件/控件不可用情况下的前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetDefault(System.Xml.XmlNode)">
            <summary>
            从配置信息中读取Default节点的的样式信息
            </summary>
            <param name="ct"></param>
            <param name="ToolStripButton"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBoxTextBox_ForeColor">
            <summary>
            CheckBoxTextBox的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBoxTextBox_BackColor">
            <summary>
            CheckBoxTextBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DomainUpDown_BackColor">
            <summary>
            DomainUpDown的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DomainUpDown_ForeColor">
            <summary>
            DomainUpDown的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DomainUpDown_DisabledBackColor">
            <summary>
             DomainUpDown不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DomainUpDown_DisabledForeColor">
            <summary>
             DomainUpDown不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DomainUpDown_DisabledBackColor">
            <summary>
            DomainUpDown不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DomainUpDown_DisabledForeColor">
            <summary>
            DomainUpDown不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LinkLabel_ForeColor">
            <summary>
            LinkLabel的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LinkLabel_BackColor">
            <summary>
            LinkLabel的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericUpDown_BackColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericUpDown_ForeColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_NumericUpDown_DisabledBackColor">
            <summary>
             NumericUpDown不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_NumericUpDown_DisabledForeColor">
            <summary>
             NumericUpDown不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericUpDown_DisabledBackColor">
            <summary>
            NumericUpDown不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericUpDown_DisabledForeColor">
            <summary>
            NumericUpDown不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.SplitContainer_ForeColor">
            <summary>
            SplitContainer的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.SplitContainer_BackColor">
            <summary>
            SplitContainer的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripButton_BackColor">
            <summary>
            ToolStripButton背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripButton_ForeColor">
            <summary>
            ToolStripButton前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripButton_ForeColor">
            <summary>
            ToolStripButton的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripButton_BackColor">
            <summary>
            ToolStripButton的背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetToolStripButton(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            从配置信息中读取ToolStripButton的样式信息
            </summary>
            <param name="ct"></param>
            <param name="ToolStripButton"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripDropDownButton_BackColor">
            <summary>
            ToolStripDropDownButton背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripDropDownButton_ForeColor">
            <summary>
            ToolStripDropDownButton前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripDropDownButton_ForeColor">
            <summary>
            ToolStripDropDownButton的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripDropDownButton_BackColor">
            <summary>
            ToolStripDropDownButton的背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetToolStripDropDownButton(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            从配置信息中读取ToolStripDropDownButton的样式信息
            </summary>
            <param name="ct"></param>
            <param name="ToolStripDropDownButton"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Button_ForeColor">
            <summary>
            Button的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Button_BackColor">
            <summary>
            Button的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.SplitButton_ForeColor">
            <summary>
            SplitButton的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.SplitButton_BackColor">
            <summary>
            SplitButton的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBox_ForeColor">
            <summary>
            CheckBox的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBox_BackColor">
            <summary>
            CheckBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_CheckBox_DisabledBackColor">
            <summary>
             CheckBox不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_CheckBox_DisabledForeColor">
            <summary>
             CheckBox不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBox_DisabledBackColor">
            <summary>
            CheckBox不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckBox_DisabledForeColor">
            <summary>
            CheckBox不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Label_ForeColor">
            <summary>
            Label的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Label_BackColor">
            <summary>
            Label的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Label_BorderColor">
            <summary>
            Label的边框色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckedListBox_BackColor">
            <summary>
            CheckedListBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.CheckedListBox_ForeColor">
            <summary>
            CheckedListBox的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ListBox_BackColor">
            <summary>
            ListBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ListBox_ForeColor">
            <summary>
            ListBox的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ListView_BackColor">
            <summary>
            ListView的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ListView_ForeColor">
            <summary>
            ListView的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.PictureBox_BackColor">
            <summary>
            PictureBox的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ProgressBar_BackColor">
            <summary>
            ProgressBar的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ProgressBar_ForeColor">
            <summary>
            ProgressBar的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TrackBar_BackColor">
            <summary>
            TrackBar的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TrackBar_DisabledBackColor">
            <summary>
             TrackBar不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TrackBar_DisabledBackColor">
            <summary>
            TrackBar不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Separator_BackColor">
            <summary>
            Separator背景颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Separator_ForeColor">
            <summary>
            Separator前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Separator_SeparatorColor">
            <summary>
            分隔线颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Pager_BackColor">
            <summary>
            Pager的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Pager_ForeColor">
            <summary>
            Pager的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.FlowLayoutPanel_ForeColor">
            <summary>
            FlowLayoutPanel的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.FlowLayoutPanel_BackColor">
            <summary>
            FlowLayoutPanel的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RadioButton_ForeColor">
            <summary>
            RadioButton的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RadioButton_BackColor">
            <summary>
            RadioButton的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RadioButtonList_BackColor">
            <summary>
            RadioButtonList的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RadioButtonList_ForeColor">
            <summary>
            RadioButtonList的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ContextMenuStrip_BackColor">
            <summary>
            ContextMenuStrip的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.HSMenuStrip_BackColor">
            <summary>
            MenuStrip的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.HSToolStrip_BackColor">
            <summary>
            ToolStrip的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TabControlEx_BackColor">
            <summary>
            TabControlEx的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TextBox_BackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TextBox_ForeColor">
            <summary>
            TextBox的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TextBox_DisabledBackColor">
            <summary>
             TextBox不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TextBox_DisabledForeColor">
            <summary>
             TextBox不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TextBox_DisabledBackColor">
            <summary>
            TextBox不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TextBox_DisabledForeColor">
            <summary>
            TextBox不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.MaskedTextBox_BackColor">
            <summary>
            MaskedTextBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.MaskedTextBox_ForeColor">
            <summary>
            MaskedTextBox的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_MaskedTextBox_DisabledBackColor">
            <summary>
             MaskedTextBox不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_MaskedTextBox_DisabledForeColor">
            <summary>
             MaskedTextBox不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.MaskedTextBox_DisabledBackColor">
            <summary>
            MaskedTextBox不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.MaskedTextBox_DisabledForeColor">
            <summary>
            MaskedTextBox不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericEditor_BackColor">
            <summary>
            NumericEditor的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericEditor_ForeColor">
            <summary>
            NumericEditor的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_NumericEditor_DisabledBackColor">
            <summary>
             NumericEditor不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_NumericEditor_DisabledForeColor">
            <summary>
             NumericEditor不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericEditor_DisabledBackColor">
            <summary>
            NumericEditor不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.NumericEditor_DisabledForeColor">
            <summary>
            NumericEditor不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RichTextBox_BackColor">
            <summary>
            RichTextBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RichTextBox_ForeColor">
            <summary>
            RichTextBox的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_RichTextBox_DisabledBackColor">
            <summary>
             RichTextBox不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_RichTextBox_DisabledForeColor">
            <summary>
             RichTextBox不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RichTextBox_DisabledBackColor">
            <summary>
            RichTextBox不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.RichTextBox_DisabledForeColor">
            <summary>
            RichTextBox不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ScrollingText_BackColor">
            <summary>
            ScrollingText的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ScrollingText_ForeColor">
            <summary>
            ScrollingText的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DateTimePicker_ForeColor">
            <summary>
            DateTimePicker的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DateTimePicker_BackColor">
            <summary>
            DateTimePicker的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DateTimePicker_DisabledBackColor">
            <summary>
             DateTimePicker不可用默认背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_DateTimePicker_DisabledForeColor">
            <summary>
             DateTimePicker不可用默认前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DateTimePicker_DisabledBackColor">
            <summary>
            DateTimePicker不可用背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DateTimePicker_DisabledForeColor">
            <summary>
            DateTimePicker不可用前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TreeView_BackColor">
            <summary>
            TreeView背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TreeView_ForeColor">
            <summary>
            TreeView前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_TreeView_LineColor">
            <summary>
            TreeView线颜色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TreeView_BackColor">
            <summary>
            TreeView的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TreeView_ForeColor">
            <summary>
            TreeView的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TreeView_LineColor">
            <summary>
            TreeView的线条颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetTreeView(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            从配置信息中读取TreeView的样式信息
            </summary>
            <param name="ct"></param>
            <param name="TreeView"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelDateTimePicker_BackColor">
            <summary>
            LabelDateTimePicker控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelDateTimePicker_ForeColor">
            <summary>
            LabelDateTimePicker控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelDateTimePicker_ForeColor">
            <summary>
            LabelDateTimePicker控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelDateTimePicker_BackColor">
            <summary>
            LabelDateTimePicker控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelDateTimePicker(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelDateTimePicker控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelComboBox_BackColor">
            <summary>
            LabelComboBox控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelComboBox_ForeColor">
            <summary>
            LabelComboBox控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelComboBox_ForeColor">
            <summary>
            LabelComboBox控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelComboBox_BackColor">
            <summary>
            LabelComboBox控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelComboBox(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelComboBox控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripMenuItem_BackColor">
            <summary>
            ToolStripMenuItem背景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_ToolStripMenuItem_ForeColor">
            <summary>
            ToolStripMenuItem前景色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripMenuItem_ForeColor">
            <summary>
            ToolStripMenuItem的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ToolStripMenuItem_BackColor">
            <summary>
            ToolStripMenuItem的背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetToolStripMenuItem(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            从配置信息中读取ToolStripMenuItem的样式信息
            </summary>
            <param name="ct"></param>
            <param name="ToolStripMenuItem"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.AddPart_ToolStrip_Bg_StartColor">
            <summary>
            工具条顶部起始颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.AddPart_ToolStrip_Bg_EndColor">
            <summary>
            工具条底部结束颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.AddPart_ToolStrip_Bg_Width">
            <summary>
            工具条背景图片宽度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.AddPart_ToolStrip_Bg_Height">
            <summary>
            工具条背景图片高度
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.AddPart_Bg_Color">
            <summary>
            插件背景颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetAddPart(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置插件样式
            </summary>
            <param name="ct"></param>
            <param name="AddPart"></param>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetMainToolStrip(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置主工具条样式
            </summary>
            <param name="ct"></param>
            <param name="ToolStrip"></param>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetMainMenuStrip(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置主菜单样式
            </summary>
            <param name="ct"></param>
            <param name="MenuStrip"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.WaitingTip_ForeColor">
            <summary>
            等待窗体的提示字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.UnitBackColor">
            <summary>
            单元Label的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.UnitForeColor">
            <summary>
            单元Label的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_Transparent">
            <summary>
            透明色常量对应Color静态实例
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ContainerPanel_BackColor">
            <summary>
            容器类控件的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ContainerPanel_ForeColor">
            <summary>
            容器类控件的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Sys_Text_Sml_Size">
            <summary>
            系统字体大小(插件和窗体里面的控件都使用同一个字体大小)
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Sys_Text_Big_Size">
            <summary>
            系统字体大小(插件和窗体里面的控件都使用同一个字体大小)
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Sys_Bg_Color">
            <summary>
            系统背景颜色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.GetColor(System.Xml.XmlNode,System.String,System.Drawing.Color)">
            <summary>
            读取节点颜色
            </summary>
            <param name="node">节点对象</param>
            <param name="attrName">属性名称</param>
            <param name="defaultColor">默认颜色</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.Init(System.Xml.XmlNode)">
            <summary> 
            从配置文件中初始化皮肤样式（ControlTheme）
            </summary>
            <param name="node">样式节点</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.Adapter(HSUCF.Controls.HSControl_THEME)">
            <summary>
            根据皮肤枚举得到皮肤名称
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.Adapter(System.String)">
            <summary>
            根据皮肤名称得到皮肤枚举
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.GetDefaultTheme(HSUCF.Controls.HSControl_THEME)">
            <summary>
            获取当前皮肤主题
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetTheme(HSUCF.Controls.HSControl_THEME)">
            <summary>
            设置当前主题
            </summary>
            <param name="theme"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.GroupBox_ForeColor">
            <summary>
            GroupBox的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.GroupBox_BackColor">
            <summary>
            GroupBox的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Panel_ForeColor">
            <summary>
            Panel的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Panel_BackColor">
            <summary>
            Panel的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TableLayoutPanel_ForeColor">
            <summary>
            TableLayoutPanel的字体颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.TableLayoutPanel_BackColor">
            <summary>
            TableLayoutPanel的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.HSStatusStrip_BackColor">
            <summary>
            StatusStrip的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DropDownTreeView_BackColor">
            <summary>
            DropDownTreeView的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DropDownTreeView_ForeColor">
            <summary>
            DropDownTreeView的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.DropDownTreeView_LineColor">
            <summary>
            DropDownTreeView的线条颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ThreeStateTreeView_BackColor">
            <summary>
            ThreeStateTreeView的背景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ThreeStateTreeView_ForeColor">
            <summary>
            ThreeStateTreeView的前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.ThreeStateTreeView_LineColor">
            <summary>
            ThreeStateTreeView的线条颜色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelDomainUpDown_BackColor">
            <summary>
            LabelDomainUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelDomainUpDown_ForeColor">
            <summary>
            LabelDomainUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelDomainUpDown_ForeColor">
            <summary>
            LabelDomainUpDown控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelDomainUpDown_BackColor">
            <summary>
            LabelDomainUpDown控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelDomainUpDown(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelDomainUpDown控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelNumericEditor_BackColor">
            <summary>
            LabelNumericUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelNumericEditor_ForeColor">
            <summary>
            LabelNumericUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelNumericEditor_ForeColor">
            <summary>
            LabelNumericUpDown控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelNumericEditor_BackColor">
            <summary>
            LabelNumericUpDown控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelNumericEditor(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelNumericUpDown控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelNumericUpDown_BackColor">
            <summary>
            LabelNumericUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelNumericUpDown_ForeColor">
            <summary>
            LabelNumericUpDown控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelNumericUpDown_ForeColor">
            <summary>
            LabelNumericUpDown控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelNumericUpDown_BackColor">
            <summary>
            LabelNumericUpDown控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelNumericUpDown(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelNumericUpDown控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelRangeDateTimePicker_BackColor">
            <summary>
            LabelRangeDateTimePicker控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelRangeDateTimePicker_ForeColor">
            <summary>
            LabelRangeDateTimePicker控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelRangeDateTimePicker_ForeColor">
            <summary>
            LabelRangeDateTimePicker控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelRangeDateTimePicker_BackColor">
            <summary>
            LabelRangeDateTimePicker控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelRangeDateTimePicker(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelRangeDateTimePicker控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelTextBox_BackColor">
            <summary>
            LabelTextBox控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelTextBox_ForeColor">
            <summary>
            LabelTextBox控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelTextBox_ForeColor">
            <summary>
            LabelTextBox控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelTextBox_BackColor">
            <summary>
            LabelTextBox控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelTextBox(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelTextBox控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelTrackerBar_BackColor">
            <summary>
            LabelTrackerBar控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.Static_LabelTrackerBar_ForeColor">
            <summary>
            LabelTrackerBar控件前景色-静态
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelTrackerBar_ForeColor">
            <summary>
            LabelTrackerBar控件前景色
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ControlTheme.LabelTrackerBar_BackColor">
            <summary>
            LabelTrackerBar控件背景色
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ControlTheme.SetLabelTrackerBar(HSUCF.Controls.ControlTheme,System.Xml.XmlNode)">
            <summary>
            设置LabelTrackerBar控件的样式
            </summary>
            <param name="ct"></param>
            <param name="ComposeControl"></param>
        </member>
        <member name="F:HSUCF.Controls.hsDateEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsDateEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatDateEditCalendar._leftArrowState">
            <summary>
            左箭头状态,Normal-0, Hover-1, Clicked-2
            </summary>
        </member>
        <member name="F:HSUCF.Controls.FlatDateEditCalendar._rightArrowState">
            <summary>
            右箭头状态,Normal-0, Hover-1, Clicked-2
            </summary>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            重写OnMouseDown方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            重写OnMouseUp方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            重写OnMouseClick方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            重写OnMouseMove方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.CalcBestSize(System.Drawing.Graphics)">
            <summary>
            重写CalcBestSize方法
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.ProcessClick(DevExpress.XtraEditors.Calendar.CalendarHitInfo)">
            <summary>
            重写ProcessClick方法,处理点击事件
            </summary>
            <param name="hit"></param>
        </member>
        <member name="M:HSUCF.Controls.FlatDateEditCalendar.Dispose(System.Boolean)">
            <summary>
            重写Dispose方法,释放非托管资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:HSUCF.Controls.hsTimeEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTimeEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HSUCF.Controls.hsTimeEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.StringExpand">
            <summary>
            String的扩展方法
            </summary>
        </member>
        <member name="M:HSUCF.Controls.StringExpand.Add(System.String[],System.String)">
            <summary>
            string[]的扩展方法strArray.Add(strValue)
            </summary>
            <param name="strArray">string数组</param>
            <param name="strValue">值</param>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.AutoValidateCustomEventArgs">
            <summary>
            自动校验的自定义校验参数
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateCustomEventArgs.AddCustomValidator(HSUCF.Controls.ExecuteValidate)">
            <summary>
            添加自定义校验器
            </summary>
            <param name="customValidate"></param>
        </member>
        <member name="T:HSUCF.Controls.AutoValidateEnabledProvider">
            <summary>
            自动校验帮助器(而且控件在不可用的时候不收集该控件的校验信息，即该控件不参与校验了)
            </summary>
        </member>
        <member name="T:HSUCF.Controls.AutoValidateProvider">
            <summary>
            自动校验服务提供器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IAutoValidateProvider">
            <summary>
            自动校验服务提供器接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IAutoValidateProvider.ClearExpiredValidators">
            <summary>
            移除过期的校验器(即自动校验分组内的校验器）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IAutoValidateProvider.RaiseAutoValidate">
            <summary>
            引发自动校验并获取校验结果
            </summary>
            <returns>校验是否成功</returns>
        </member>
        <member name="P:HSUCF.Controls.IAutoValidateProvider.CustomEventArgs">
            <summary>
            区域自定义校验
            </summary>
        </member>
        <member name="F:HSUCF.Controls.AutoValidateProvider.raisedAutoValidateCtrl">
            <summary>
            引发界面的自动校验的控件，一般都是<see cref="T:HSUCF.Controls.hsButtonbak"/>按钮
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.#ctor(HSUCF.Controls.IAutoValidateRaiser)">
            <summary>
            
            </summary>
            <param name="raisedAutoValidateCtrl">引发界面的自动校验的控件，一般都是<see cref="T:HSUCF.Controls.hsButtonbak"/>按钮</param>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.GetParentValidate">
            <summary>
            得到当前的统一校验接口
            </summary>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.AutoValidateProvider.Readonly_GroupName">
            <summary>
            只读的组名，每个验证帮助器一个唯一号，该值为Guid值与时间戳的组合来模仿唯一组名，该值在构造函数中赋值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.RaiseAutoValidate">
            <summary>
            引发校验获取校验结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.GetValidateParticipants">
            <summary>
            收集需要循环校验的参与者控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.GetSubValidateParticipants(System.Windows.Forms.Control,System.Collections.Generic.List{HSUCF.Controls.IHSCyclicValidateParticipant}@)">
            <summary>
            递归获取所有需要循环校验的控件
            </summary>
            <param name="curCtrl"></param>
            <param name="validateCtrls"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.GetControlValidates">
            <summary>
            收集需要单一控件即时校验的控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.GetSubControlValidates(System.Windows.Forms.Control,System.Collections.Generic.List{HSUCF.Controls.IHSControlValidate}@)">
            <summary>
            递归获取所有需要单一控件校验的控件
            </summary>
            <param name="curCtrl"></param>
            <param name="validateCtrls"></param>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.RaiseHSCyclicValidate">
            <summary>
            引发循环校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.RaiseHSControlValidate">
            <summary>
            引发即时校验
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateProvider.RaiseCommonValidate">
            <summary>
            引发通用校验
            </summary>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.AutoValidateProvider.CustomEventArgs">
            <summary>
            区域自定义校验
            </summary>
        </member>
        <member name="M:HSUCF.Controls.AutoValidateEnabledProvider.#ctor(HSUCF.Controls.IAutoValidateRaiser)">
            <summary>
            
            </summary>
            <param name="raisedAutoValidateCtrl">引发界面的自动校验的控件，一般都是<see cref="T:HSUCF.Controls.hsButtonbak"/>按钮</param>
        </member>
        <member name="T:HSUCF.Controls.AutoValidateResultEventArgs">
            <summary>
            自动校验结果事件参数
            </summary>
        </member>
        <member name="P:HSUCF.Controls.AutoValidateResultEventArgs.Result">
            <summary>
            自动校验结果是否通过
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateNestedEnabledServiceFactory">
            <summary>
            恒生校验框架支持控件嵌套模式而且控件不可用情况下不校验的服务工厂
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSValidateServiceFactory">
            <summary>
            恒生校验框架相关服务工厂接口（抽象工厂)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSValidateServiceFactory.GetAutoValidateProvider(HSUCF.Controls.IAutoValidateRaiser)">
            <summary>
            获取自动校验服务提供器
            </summary>
            <param name="raisedAutoValidateCtrl">引起自动校验的控件</param>
            <returns>自动校验提供器</returns>
        </member>
        <member name="M:HSUCF.Controls.IHSValidateServiceFactory.GetCyclicValidatorBehavior">
            <summary>
            获取循环校验行为服务（IHSCyclicValidatorBehavior）
            </summary>
            <returns>循环校验行为服务</returns>
        </member>
        <member name="M:HSUCF.Controls.HSValidateNestedEnabledServiceFactory.GetAutoValidateProvider(HSUCF.Controls.IAutoValidateRaiser)">
            <summary>
            获取自动校验服务提供器（AutoValidateEnabledProvider）
            </summary>
            <param name="raisedAutoValidateCtrl">引起自动校验的控件</param>
            <returns>自动校验提供器</returns>
        </member>
        <member name="M:HSUCF.Controls.HSValidateNestedEnabledServiceFactory.GetCyclicValidatorBehavior">
            <summary>
            获取循环校验行为服务（HSCyclicValidatorNestedEnabledBehavior）
            </summary>
            <returns>循环校验行为服务</returns>
        </member>
        <member name="T:HSUCF.Controls.HSValidateNestedServiceFactory">
            <summary>
            恒生校验框架支持控件嵌套模式而且控件不可用情况下校验的服务工厂
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSValidateNestedServiceFactory.GetAutoValidateProvider(HSUCF.Controls.IAutoValidateRaiser)">
            <summary>
            获取自动校验服务提供器
            </summary>
            <param name="raisedAutoValidateCtrl">引起自动校验的控件</param>
            <returns>自动校验提供器</returns>
        </member>
        <member name="M:HSUCF.Controls.HSValidateNestedServiceFactory.GetCyclicValidatorBehavior">
            <summary>
            获取循环校验行为服务（HSCyclicValidatorNestedBehavior）
            </summary>
            <returns>循环校验行为服务</returns>
        </member>
        <member name="T:HSUCF.Controls.HSValidateServiceLocator">
            <summary>
            恒生校验框架相关服务的定位器（超级工厂）
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateServiceLocator.serviceFactory">
            <summary>
            恒生校验框架相关服务工厂
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateServiceLocator.instance">
            <summary>
            统一的服务定位器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSValidateServiceLocator.GetServiceFactory">
            <summary>
            得到恒生校验框架相关服务工厂实例
            </summary>
            <remarks>
            该类替换了以前的HSCyclicValidatorBehaviorLoader静态类的GetCyclicValidatorBehavior方法
            </remarks>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.HSValidateServiceLocator.IsNotAllowDisabledServiceMode">
            <summary>
            是否不允许不可用的控件参与校验服务模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidateServiceLocator.IsDefaultServiceMode">
            <summary>
            是否只是不可见的控件不参与校验服务模式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidateServiceLocator.Instance">
            <summary>
            得到服务定位器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateServiceMode">
            <summary>
            校验服务模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateServiceMode.Default">
            <summary>
            JustNotAllowInvisible
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateServiceMode.NotAllowDisabled">
            <summary>
            不允许不可用的控件参与校验
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidatingEventArgs">
            <summary>
            正在校验事件的结果参数，如果校验错误，请设置校验的错误信息
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidatingEventArgs.Result">
            <summary>
            校验的结果
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidatingEventArgs.ErrorMessage">
            <summary>
            校验的错误信息，如果未赋值，则是默认值"请设置错误信息。"
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSCyclicValidatorBehavior">
            <summary>
            默认循环校验行为类
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IHSCyclicValidatorBehavior">
            <summary>
            循环校验行为接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IHSCyclicValidatorBehavior.GetNeedValidateParticipants(System.Windows.Forms.Control)">
            <summary>
            得到需要校验的参与者控件集合
            </summary>
            <param name="sponsorCtrl">发起者控件，它必须实现接口IHSCyclicValidateSponsor</param>
            <returns>返回参与者列表控件，这些控件需要都实现接口IHSCyclicValidateParticipant</returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorBehavior.GetNeedValidateParticipants(System.Windows.Forms.Control)">
            <summary>
            获取需要校验的参与者控件集合
            </summary>
            <param name="sponsorCtrl">发起者控件，它必须实现接口IHSCyclicValidateSponsor</param>
            <returns>返回参与者列表控件，这些控件需要都实现接口IHSCyclicValidateParticipant</returns>
        </member>
        <member name="T:HSUCF.Controls.HSCyclicValidatorNestedEnabledBehavior">
            <summary>
            循环校验嵌套行为类(主要指的是嵌套而且控件不可用情况下不校验的情况下的校验)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedEnabledBehavior.GetParentValidateControl(System.Windows.Forms.Control)">
            <summary>
            得到当前的统一校验接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedEnabledBehavior.GetNeedValidateParticipants(System.Windows.Forms.Control)">
            <summary>
            获取需要校验的参与者控件集合
            </summary>
            <param name="sponsorCtrl">发起者控件，它必须实现接口IHSCyclicValidateSponsor</param>
            <returns>返回参与者列表控件，这些控件需要都实现接口IHSCyclicValidateParticipant</returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedEnabledBehavior.GetValidateParticipants(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            收集需要循环校验的参与者控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedEnabledBehavior.GetSubValidateParticipants(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            递归获取所有需要循环校验的控件
            </summary>
            <param name="curCtrl"></param>
            <param name="validateCtrls"></param>
        </member>
        <member name="F:HSUCF.Controls.WaitWindow.task">
            <summary>
            任务对象
            </summary>
        </member>
        <member name="E:HSUCF.Controls.WaitWindow.CancelEvent">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.WaitWindowEventArgs">
            <summary>
            WaitWindow事件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.WaitWindowGUI">
            <summary>
            进度条对像实例
            </summary>    
        </member>
        <member name="M:HSUCF.Controls.WaitWindowGUI.#ctor(HSUCF.Controls.WaitWindow,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:HSUCF.Controls.WaitWindowGUI.lblPrompt_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            双击关闭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.WaitWindowGUI.GetHeight(System.String,System.Int32,System.Windows.Forms.Control,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Single}@)">
            <summary>
            自动计算字符高度
            </summary>
            <param name="text">字符串</param>
            <param name="width">最大宽度或者字节数</param>
            <param name="ctrl">显示控件</param>
            <returns>实际高度</returns>
        </member>
        <member name="F:HSUCF.Controls.WaitWindowGUI.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.WaitWindowGUI.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.WaitWindowGUI.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Skin.ImageDrawRect.DrawRect(System.Drawing.Graphics,System.Drawing.Bitmap,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘图对像
            </summary>
            <param name="g">绘图对像</param>
            <param name="img">图片</param>
            <param name="r">绘置的图片大小、坐标</param>
            <param name="lr">绘置的图片边界</param>
            <param name="index">当前状态</param> 
            <param name="Totalindex">状态总数</param>
        </member>
        <member name="M:HSUCF.Controls.Skin.ImageDrawRect.DrawRect(System.Drawing.Graphics,System.Drawing.Bitmap,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘图对像
            </summary>
            <param name="g"> 绘图对像</param>
            <param name="obj">图片对像</param>
            <param name="r">绘置的图片大小、坐标</param>
            <param name="index">当前状态</param>
            <param name="Totalindex">状态总数</param>
        </member>
        <member name="M:HSUCF.Controls.Skin.GraphicsPathHelper.CreatePath(System.Drawing.Rectangle,System.Int32,HSUCF.Controls.Skin.RoundStyle,System.Boolean)">
            <summary>
            建立带有圆角样式的路径。
            </summary>
            <param name="rect">用来建立路径的矩形。</param>
            <param name="_radius">圆角的大小。</param>
            <param name="style">圆角的样式。</param>
            <param name="correction">是否把矩形长宽减 1,以便画出边框。</param>
            <returns>建立的路径。</returns>
        </member>
        <member name="T:HSUCF.Controls.Skin.NativeMethods.NCHITTEST">
            <summary>
            Location of cursor hot spot returnet in WM_NCHITTEST.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows 
            (same as HTNOWHERE, except that the DefWindowProc function produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTTRANSPARENT">
            <summary>
            In a window currently covered by another window in the same thread 
            (the message will be sent to underlying windows in the same thread until one of them returns a code that is not HTTRANSPARENT).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTNOWHERE">
            <summary>
            On the screen background or on a dividing line between windows.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTCLIENT">
            <summary>In a client area.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTCAPTION">
            <summary>In a title bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTGROWBOX">
            <summary>In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTMENU">
            <summary>In a menu.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTHSCROLL">
            <summary>In a horizontal scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTVSCROLL">
            <summary>In the vertical scroll bar.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTMINBUTTON">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTMAXBUTTON">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTLEFT">
            <summary>In the left border of a resizable window 
            (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTRIGHT">
            <summary>
            In the right border of a resizable window 
            (the user can click the mouse to resize the window horizontally).
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTTOP">
            <summary>In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTTOPLEFT">
            <summary>In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTBOTTOM">
            <summary>	In the lower-horizontal border of a resizable window 
            (the user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTBOTTOMLEFT">
            <summary>In the lower-left corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTBOTTOMRIGHT">
            <summary>	In the lower-right corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTBORDER">
            <summary>In the border of a window that does not have a sizing border.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTCLOSE">
            <summary>In a Close button.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCHITTEST.HTHELP">
            <summary>In a Help button.</summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCCALCSIZE_PARAMS.rectProposed">
            <summary>
            Contains the new coordinates of a window that has been moved or resized, that is, it is the proposed new window coordinates.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCCALCSIZE_PARAMS.rectBeforeMove">
            <summary>
            Contains the coordinates of the window before it was moved or resized.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCCALCSIZE_PARAMS.rectClientBeforeMove">
            <summary>
            Contains the coordinates of the window's client area before the window was moved or resized.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.NCCALCSIZE_PARAMS.lpPos">
            <summary>
            Pointer to a WINDOWPOS structure that contains the size and position values specified in the operation that moved or resized the window.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.MINMAXINFO.reserved">
            <summary>
            不用
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.MINMAXINFO.maxSize">
            <summary>
            最大范围
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.MINMAXINFO.maxPosition">
            <summary>
            最大的放置点
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.MINMAXINFO.minTrackSize">
            <summary>
            最大拖动范围
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.NativeMethods.MINMAXINFO.maxTrackSize">
            <summary>
            最小拖动范围，可用于限定的最小区域
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Skin.RoundStyle">
            <summary>
            建立圆角路径的样式。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.None">
            <summary>
            四个角都不是圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.All">
            <summary>
            四个角都为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.Left">
            <summary>
            左边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.Right">
            <summary>
            右边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.Top">
            <summary>
            上边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.Bottom">
            <summary>
            下边两个角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.BottomLeft">
            <summary>
            左下角为圆角。
            </summary>
        </member>
        <member name="F:HSUCF.Controls.Skin.RoundStyle.BottomRight">
            <summary>
            右下角为圆角。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTabControl">
            <summary>
            选项卡控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTabControl.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTabControl.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsMaskedTextBox">
            <summary>
            掩码文本控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsMaskedTextBox.ctrlValidator">
            <summary>
            即时校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsMaskedTextBox.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsMaskedTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsMaskedTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.BackColor">
            <summary>
            MaskedTextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.ForeColor">
            <summary>
            MaskedTextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.DisabledBackColor">
            <summary>
            MaskedTextBox不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.DisabledForeColor">
            <summary>
            MaskedTextBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMaskedTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.RegularValidationMode">
            <summary>
            正则校验模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.Custom">
            <summary>
            自定义正则
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.URL">
            <summary>
            url
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.IPv4">
            <summary>
            IPv4 地址
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.IPv6">
            <summary>
            IPv6 地址
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.ZipCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.Phone">
            <summary>
            手机
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.Tel">
            <summary>
            座机电话
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.IdCard">
            <summary>
            身份标示号码
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.ChineseChars">
            <summary>
            中文
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.EnglishChars">
            <summary>
            英文字符
            </summary>
        </member>
        <member name="F:HSUCF.Controls.RegularValidationMode.ChineseOrEnglishChars">
            <summary>
            中英文字符
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ScrollingTextClickEventHandler">
            <summary>
            滚动文本单击委托
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:HSUCF.Controls.ScrollDirection">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="T:HSUCF.Controls.VerticleTextPosition">
            <summary>
            垂直文本位置
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsTextBox">
            <summary>
            标准文本控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.SkinRefresh">
            <summary>
            换肤
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.OnMouseEnter(System.EventArgs)">
            <summary>
            鼠标进入
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.OnMouseLeave(System.EventArgs)">
            <summary>
            鼠标离开
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HSUCF.Controls.hsTextBox.hsCtrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.RefreshStyle">
            <summary>
            刷新控件皮肤样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBox.nullableContextMenuStrip">
            <summary>
            上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBox.nullableContextMenu">
            <summary>
            旧时上下文菜单，用于不显示上下文菜单的情况
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBox.oldContextMenuStrip">
            <summary>
            用于记录已经绑定的上下文菜单
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsTextBox.oldContextMenu">
            <summary>
            用于记录已经绑定的旧时上下文菜单
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.ShowPWDToolTip(System.Windows.Forms.KeyEventArgs)">
            <summary>
            显示作为密码控件的时候显示passwordToolTip
            </summary>
            <param name="opType">操作类型：复制，剪切，黏贴</param>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.ClosePWDToolTip">
            <summary>
            显示作为密码控件的时候移除passwordToolTip
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.CtrlV">
            <summary>
            处理 Ctrl+V
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.GetWindowDC(System.IntPtr)">
            <summary>
            获取设备接口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsTextBox.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary> 
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.BackColor">
            <summary>
            TextBox的背景色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.ForeColor">
            <summary>
            TextBox的字体颜色
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.DisabledBackColor">
            <summary>
            TextBox不可使用时的背景颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.DisabledForeColor">
            <summary>
            TextBox不可使用时的字体颜色。
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.BottomBorderUseWaveLine">
            <summary>
            底边框使用波浪线
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBox.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBox.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsTextBox.TextBoxPaintEvent">
            <summary>
            文本框绘制事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsTextBox.BorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.StringUtility">
            <summary>
            数值文本工具类
            </summary>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetValueString(System.String,System.String,System.Boolean)">
            <summary>
            获取文本中数值部分文本值
            </summary>
            <param name="text">文本</param>
            <param name="separator">小数分隔符</param>
            <param name="hasSeparator">是否有小数分隔符</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetSelectionInValue(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            返回光标在数值部分的索引位置（数值部分只包含数值和小数点）
            </summary>
            <param name="selectionPosition">光标位置</param>
            <param name="text">文本</param>
            <param name="separator">小数分隔符</param>
            <param name="hasSeparator">是否有小数分隔符</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetSelectionLengthInValue(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            返回数值部分被选中的长度（数值部分只包含数值和小数点）
            </summary>
            <param name="selectionPosition"></param>
            <param name="selectionLength"></param>
            <param name="text">文本</param>
            <param name="separator">小数点</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetSeparatorPositionInText(System.String,System.String)">
            <summary>
            返回分隔符的位置
            </summary>
            <param name="separator"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetDigitsToSeparator(System.Int32,System.String)">
            <summary>
            得到数值长度（到分隔符（小数点）位置）
            </summary>
            <param name="digitsToSeparator">到分隔符（小数点）位置的默认值</param>
            <param name="valueString">数值文本</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetInsertTypeByPositionInValue(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            得到插入的类型
            </summary>
            <param name="positionInValue"></param>
            <param name="separator"></param>
            <param name="text"></param>
            <param name="hasSeparator"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.StringUtility.GetSelectionPositionFromValuePosition(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            返回光标的位置根据光标在值的索引位置
            </summary>
            <param name="valuePosition">光标在数值部分的索引位置（数值部分只包含数值和小数点）</param>
            <param name="text">文本</param>
            <param name="separator"></param>
            <param name="hasSeparator"></param>
            <returns>位置</returns>
        </member>
        <member name="T:HSUCF.Controls.InsertType">
            <summary>
            插入类型
            </summary>
        </member>
        <member name="F:HSUCF.Controls.InsertType.BeforeSeparator">
            <summary>
            小数分隔符前
            </summary>
        </member>
        <member name="F:HSUCF.Controls.InsertType.AfterSeparator">
            <summary>
            小数分隔符后
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDateTimePicker">
            <summary>
            日期时间控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDateTimePicker.hsCtrlValidator">
            <summary>
            循环校验器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.InitDefault">
            <summary>
            初始化样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDateTimePicker.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsDateTimePicker.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidate(System.String@)">
            <summary>
            单一控件的内部校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">错误消息</param>
            <returns>True 表示校验成功；否则校验失败</returns>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#DoValidated">
            <summary>
            如果所有校验成功后引发HSValidated
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidate(System.String@)">
            <summary>
            循环校验的每一控件的校验动作（方法内部包含校验逻辑）
            </summary>
            <param name="errorMsg">每一控件的校验错误消息</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#DoValidated">
            <summary>
            循环校验的每一控件的校验成功后动作
            </summary> 
        </member>
        <member name="F:HSUCF.Controls.hsDateTimePicker.validatedValuePair">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#SetValid(System.Boolean)">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.Reset">
            <summary>
            重置有效性校验通过值对，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDateTimePicker.Clear">
            <summary>
            清空控件值并且重置有效性校验通过值对
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSControlValidate#EnableInstantValidation">
            <summary>
            是否校验通过
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#IsFocusErrorControl">
            <summary>
            是否聚焦错误控件在校验错误的时候
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidating">
            <summary>
            当控件在循环校验列队中时候，触发的校验事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateParticipant#HSValidated">
            <summary>
            当控件在循环校验列队中时候，触发的校验成功后事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#GotFocus">
            <summary>
            得到焦点事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSCyclicValidateSponsor#Validating">
            <summary>
            WinForm框架控件支持的Validating事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.IsValid">
            <summary>
            获取一个值，该值指示控件校验（无论是即时校验还是循环校验）是否成功
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSValidated">
            <summary>
            校验成功后事件
            </summary>
        </member>
        <member name="E:HSUCF.Controls.hsDateTimePicker.HSValidating">
            <summary>
            校验事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.EnableInstantValidation">
            <summary>
            是否启用控件即时校验,默认启用校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.EnableSkipCyclicValidate">
            <summary>
            当控件在循环校验列队中时候，是否跳过循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.EnableFireCyclicValidate">
            <summary>
            当当前控件作为循环校验发起者时，通过该属性决定是否发起循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            是否控制回车键
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDateTimePicker.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsMonthCalendar">
            <summary>
            日历控件
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsMonthCalendar.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsMonthCalendar.hsTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMonthCalendar.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMonthCalendar.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsMonthCalendar.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DropDownForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DropDownForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.DropDownForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HSUCF.Controls.DropDownPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.DropDownPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HSUCF.Controls.DropDownPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxTree.SelectedByValue(System.Object,System.Object)">
            <summary>
            根据值来查找
            </summary>
            <param name="value">值</param>
            <param name="text">Text可以随便写,当然，最好是什么就写什么</param>
        </member>
        <member name="M:HSUCF.Controls.hsComboBoxTree.Fill(System.Data.DataTable,System.Object)">
            <summary>
            填充Tree
            </summary>
            <param name="ParentID">父级编号</param>
            <param name="dt">格式，三列，Id,Name,ParentId,只要顺序一样就可以了</param>
        </member>
        <member name="P:HSUCF.Controls.hsComboBoxTree.FullPath">
            <summary>
            返回结点全路径
            </summary>
        </member>
        <member name="T:HSUCF.Controls.DropDownTreeNode">
            <summary>
            可下拉树节点
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsDropDownTreeView">
            <summary>
            DropDown树控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDropDownTreeView.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsDropDownTreeView.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDropDownTreeView.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDropDownTreeView.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDropDownTreeView.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDropDownTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsDropDownTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsThreeStateTreeView">
             <summary>
            三态树控件
             </summary>
             <remarks>
             使用图像列表来实现Check的三种状态(选中，不选中，中间状态)
             </remarks>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.SendMessage(System.IntPtr,HSUCF.Controls.hsThreeStateTreeView.TreeViewMessages,System.Int32,HSUCF.Controls.hsThreeStateTreeView.TV_HITTESTINFO@)">
            <summary></summary>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HSUCF.Controls.hsThreeStateTreeView"/> class.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged 
            resources; <c>false</c> to release only unmanaged resources. 
            </param>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.OnClick(System.EventArgs)">
            <summary>
            Called when the user clicks on an item
            </summary>
            <param name="e"></param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Toggle item if user presses space bar
            </summary>
            <param name="e"></param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.CheckNode(System.Windows.Forms.TreeNode,HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState)">
            <summary>
            Checks or unchecks all children
            </summary>
            <param name="node"></param>
            <param name="state"></param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.ChangeParent(System.Windows.Forms.TreeNode)">
            <summary>
            Called after a node changed its state. Has to go through all direct children and
            set state based on children's state.
            </summary>
            <param name="node">Parent node</param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.ChangeNodeState(System.Windows.Forms.TreeNode)">
            <summary>
            Handles changing the state of a node
            </summary>
            <param name="node"></param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.InternalSetChecked(System.Windows.Forms.TreeNode,HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState)">
            <summary>
            Sets the checked state of a node, but doesn't deal with children or parents
            </summary>
            <param name="node">Node</param>
            <param name="state">The new checked state</param>		
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetThreeCheckState(System.Windows.Forms.TreeNode)">
            <summary>
            Gets the checked state of a node
            </summary>
            <param name="node">Node</param>
            <returns>The checked state</returns> 
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.SetThreeCheckState(System.Windows.Forms.TreeNode,HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState)">
            <summary>
            Sets the checked state of a node
            </summary>
            <param name="node">Node</param>
            <param name="state">The new checked state</param>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetChecked(System.Windows.Forms.TreeNode)">
            <summary>
            得到Check状态
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.SetChecked(System.Windows.Forms.TreeNode,System.Windows.Forms.CheckState)">
            <summary>
            设置Check状态
            </summary>
            <param name="node"></param>
            <param name="state"></param>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetCheckedTreeNodes">
            <summary>
            获取选中的节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetUncheckedTreeNodes">
            <summary>
            获取未选中的节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetIndeterminateTreeNodes">
            <summary>
            获取中间状态的节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetTreeNodes(System.Windows.Forms.CheckState)">
            <summary>
            获取指定节点状态的节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.GetTreeNodesOfRecur(System.Windows.Forms.TreeNode,System.Windows.Forms.CheckState)">
            <summary>
            递归获取指定状态的的节点
            </summary>
            <param name="parentNode"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.InitDefault">
            <summary>
            初始化默认的样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsThreeStateTreeView.SetControlTheme">
            <summary>
            设置样式值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsThreeStateTreeView.CustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsThreeStateTreeView.HSTheme">
            <summary>
            获取或设置系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsThreeStateTreeView.TagEx">
            <summary>
            Tag扩展值
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsThreeStateTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsThreeStateTreeView.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="T:HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState">
            <summary>
            三态枚举
            </summary>
            <remarks>The states corresponds to image index</remarks>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState.Indeterminate">
            <summary>Indeterminate</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState.Unchecked">
            <summary>Unchecked</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.ThreeCheckState.Checked">
            <summary>Checked</summary>
        </member>
        <member name="T:HSUCF.Controls.hsThreeStateTreeView.TV_HITTESTINFO">
            <summary></summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TV_HITTESTINFO.pt">
            <summary>Client coordinates of the point to test.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TV_HITTESTINFO.flags">
            <summary>Variable that receives information about the results of a hit test.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TV_HITTESTINFO.hItem">
            <summary>Handle to the item that occupies the point.</summary>
        </member>
        <member name="T:HSUCF.Controls.hsThreeStateTreeView.TVHit">
            <summary>Hit tests for tree view</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.NoWhere">
            <summary>In the client area, but below the last item.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemIcon">
            <summary>On the bitmap associated with an item.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemLabel">
            <summary>On the label (string) associated with an item.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemIndent">
            <summary>In the indentation associated with an item.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemButton">
            <summary>On the button associated with an item.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemRight">
            <summary>In the area to the right of an item. </summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItemStateIcon">
            <summary>On the state icon for a tree-view item that is in a user-defined state.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.OnItem">
            <summary>On the bitmap or label associated with an item. </summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.Above">
            <summary>Above the client area. </summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.Below">
            <summary>Below the client area.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.ToRight">
            <summary>To the right of the client area.</summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TVHit.ToLeft">
            <summary>To the left of the client area.</summary>
        </member>
        <member name="T:HSUCF.Controls.hsThreeStateTreeView.TreeViewMessages">
            <summary></summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TreeViewMessages.TV_FIRST">
            <summary></summary>
        </member>
        <member name="F:HSUCF.Controls.hsThreeStateTreeView.TreeViewMessages.TVM_HITTEST">
            <summary></summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidatedEventArgs">
            <summary>
            校验成功事件参数，定义该参数，只是为了以后扩展
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateConfiguration">
            <summary>
            校验配置器
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateConfiguration.validateModeInApp">
            <summary>
            目前启用的框架启用的校验模式，该值可以作为注入的入口
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidateConfiguration.IsHSCyclicValidate">
            <summary>
            是否启用循环校验
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidateConfiguration.IsHSControlValidate">
            <summary>
            是否启用即时校验
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateShowStyleConfig">
            <summary>
            校验显示方式配置
            </summary>
        </member>
        <member name="P:HSUCF.Controls.HSValidateShowStyleConfig.IsBalloonToolTip">
            <summary>
            是否是气泡提示的显示样式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateShowStyleConfig.HSValidateShowStyle">
            <summary>
            校验显示方式
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSValidateMode">
            <summary>
            即时校验模式
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateMode.HSCyclicValidate">
            <summary>
            循环即时校验
            </summary>
        </member>
        <member name="F:HSUCF.Controls.HSValidateMode.HSControlValidate">
            <summary>
            单一即时校验
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSControlValidator">
            <summary>
            HS控件校验的校验器，内部会注册输入性控件的Validating事件。
            其中，显示错误提示的方式是对目标控件的输入区的下边框画一条波浪线和弹出气泡消息。
            其中显示波浪线通过IsPassed属性控制，各个控件获取该属性值来判断是否绘制波浪线，
            而提示错误消息在HSControlValidater统一处理
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSControlValidator.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            HS控件校验的校验器，内部会注册输入性控件的Validating事件。
            其中，显示错误提示的方式是对目标控件的输入区的下边框画一条波浪线和弹出气泡消息。
            其中显示波浪线通过IsPassed属性控制，各个控件获取该属性值来判断是否绘制波浪线，
            而提示错误消息在HSControlValidater统一处理
            </summary>
            <param name="implementIHSControlValidateCtrl">实现IHSControlValidateCtrl的控件，一般都是当前控件</param>
            <param name="eventBindCtrl">用于绑定校验Validating事件的控件</param>
        </member>
        <member name="M:HSUCF.Controls.HSControlValidator.eventBindCtrl_Disposed(System.Object,System.EventArgs)">
            <summary>
            控件销毁后，移除校验事件绑定
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.HSControlValidator.eventBindCtrl_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            事件校验
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.HSControlValidator.ManualFireValidating">
            <summary>
            直接手动再次引发校验,该方法一般不需要调用，除非需要手动去除错误的显示消息等情况下。
            </summary>
        </member>
        <member name="T:HSUCF.Controls.CustomValidater">
            <summary>
            自定义规则的校验器，通过委托方法自定义校验规则
            </summary>
        </member>
        <member name="T:HSUCF.Controls.UIValidater">
            <summary>
            表示UI校验器
            </summary>
        </member>
        <member name="P:HSUCF.Controls.UIValidater.GroupName">
            <summary>
            分组验证标记
            </summary>
        </member>
        <member name="P:HSUCF.Controls.UIValidater.IsEnable">
            <summary>
            验证是否可用
            默认是可用的
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ExecuteValidate">
            <summary>
            自定义委托方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:HSUCF.Controls.ValidatingResult">
            <summary>
            自定义校验结果
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatingResult.Success">
            <summary>
            校验是否通过
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatingResult.ErrorMessage">
            <summary>
            不通过是的错误信息
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatingResult.ErrorControls">
            <summary>
            错误控件
            </summary>
        </member>
        <member name="T:HSUCF.Controls.HSCyclicValidatorNestedBehavior">
            <summary>
            循环校验嵌套行为类(主要指的是嵌套情况下的校验)
            </summary>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedBehavior.GetParentValidateControl(System.Windows.Forms.Control)">
            <summary>
            得到当前的统一校验接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedBehavior.GetNeedValidateParticipants(System.Windows.Forms.Control)">
            <summary>
            获取需要校验的参与者控件集合
            </summary>
            <param name="sponsorCtrl">发起者控件，它必须实现接口IHSCyclicValidateSponsor</param>
            <returns>返回参与者列表控件，这些控件需要都实现接口IHSCyclicValidateParticipant</returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedBehavior.GetValidateParticipants(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            收集需要循环校验的参与者控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.HSCyclicValidatorNestedBehavior.GetSubValidateParticipants(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            递归获取所有需要循环校验的控件
            </summary>
            <param name="curCtrl"></param>
            <param name="validateCtrls"></param>
        </member>
        <member name="T:HSUCF.Controls.ValidatedValuePair`1">
            <summary>
            校验通过值对（一个是上一次校验通过值，一个是当前校验通过值）
            该类用于对这两个值的操作和比较。
            通过该类，校验控件可以获悉校验通过值是否发生了变化，从而可以根据是否发生变化来决定是否调用校验成功后事件
            </summary>
            <typeparam name="TTarget"></typeparam>
        </member>
        <member name="F:HSUCF.Controls.ValidatedValuePair`1.lastValidatedValue">
            <summary>
            上一次校验通过值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatedValuePair`1.currentValidatedValue">
            <summary>
            当前校验通过值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatedValuePair`1.isFirstSetLastValidatedValue">
            <summary>
            是否是第一次设置 上一次校验通过值
            </summary>
        </member>
        <member name="F:HSUCF.Controls.ValidatedValuePair`1.isFirstSetCurrentValidatedValue">
            <summary>
            是否是第一次设置 当前校验通过值
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ValidatedValuePair`1.SetValidatedValue(`0)">
            <summary>
            设置校验值
            </summary>
            <param name="validatedValue"></param>
        </member>
        <member name="M:HSUCF.Controls.ValidatedValuePair`1.ResetValidatedValue">
            <summary>
            重置有效性校验通过值，使有效校验时候能重新引发HSValidated事件
            </summary>
        </member>
        <member name="P:HSUCF.Controls.ValidatedValuePair`1.ValidatedValueChanged">
            <summary>
            是否校验值变化
            </summary>
        </member>
        <member name="T:HSUCF.Controls.ErrorManager">
            <summary>
            错误提示管理器，波浪线提示方式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ErrorManager.SetError(System.Windows.Forms.Control)">
            <summary>
            设置错误提示
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:HSUCF.Controls.ErrorManager.SetErrors(System.Windows.Forms.Control[])">
            <summary>
            设置错误提示
            </summary>
            <param name="control">控件数组</param>
        </member>
        <member name="M:HSUCF.Controls.ErrorManager.RemoveOldError">
            <summary>
            可能部分验证错误，用户已经修正，但是提示还是有波浪线，所有清理下不需要显示错误提示的控件
            </summary>
        </member>
        <member name="M:HSUCF.Controls.ErrorManager.ClearError">
            <summary>
            清楚控件错误提示
            </summary>
        </member>
        <member name="T:HSUCF.Controls.IValidate">
            <summary>
            统一校验接口
            </summary>
        </member>
        <member name="M:HSUCF.Controls.IValidate.DoValidate">
            <summary>
            校验已经添加的校验器的校验是否通过
            </summary>
            <returns>true表示通过，false表示不通过</returns>
        </member>
        <member name="M:HSUCF.Controls.IValidate.DoValidate(System.String)">
            <summary>
            校验已经添加的校验器的校验是否通过
            </summary>
            <param name="GroupName">校验器所在的分组名</param>
            <returns>true表示通过，false表示不通过</returns>
        </member>
        <member name="M:HSUCF.Controls.IValidate.RemoveAllValidaters">
            <summary>
            删除所有校验器
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.IValidate.RemoveValidaters(System.String)">
            <summary>
            删除指定分组的校验器
            </summary>
            <param name="groupName">指定分组</param>
        </member>
        <member name="M:HSUCF.Controls.IValidate.RemoveValidater(HSUCF.Controls.UIValidater)">
            <summary>
            移除UI校验器
            </summary>
            <param name="uiValidater"></param>
        </member>
        <member name="M:HSUCF.Controls.IValidate.AddCustomValidator(HSUCF.Controls.ExecuteValidate)">
            <summary>
            添加自定义规则的UI校验器
            </summary>
            <param name="validateExecuter">指定校验规则，该规则通过<see cref="T:HSUCF.Controls.ExecuteValidate"/>委托来实现</param>
        </member>
        <member name="P:HSUCF.Controls.IValidate.ParentContainer">
            <summary>
            获取和设置当前组件容器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.TextValidater">
            <summary>
            文本类型的UI校验器
            </summary>
        </member>
        <member name="T:HSUCF.Controls.Validater">
            <summary>
            用于表示UIValidater校验器的容器
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Validater.RemoveAllValidaters">
            <summary>
            删除所有校验器
            </summary> 
        </member>
        <member name="M:HSUCF.Controls.Validater.RemoveValidaters(System.String)">
            <summary>
            删除指定分组的校验器
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.RemoveValidater(HSUCF.Controls.UIValidater)">
            <summary>
            移除验证规则
            </summary>
            <param name="uiValidater"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.AddRequiredTextItem(System.Windows.Forms.Control,System.String)">
            <summary>
            对指定控件添加验证错误信息
            </summary>
            <param name="control"></param>
            <param name="requiredErrorMessage"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.AddRequiredTextItem(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            对指定控件添加正则验证错误信息
            </summary>
            <param name="control"></param>
            <param name="requiredErrorMessage"></param>
            <param name="regex"></param>
            <param name="regxErrorMessage"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.AddUnRequiredTextItem(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            对指定控件添加正则验证错误信息
            </summary>
            <param name="control"></param>
            <param name="regex"></param>
            <param name="regxErrorMessage"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.AddCustomValidater(HSUCF.Controls.ExecuteValidate)">
            <summary>
            添加验证
            </summary>
            <param name="validateExecuter"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.Validate(System.String@)">
            <summary>
            验证
            </summary>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.Validater.AddButton(System.Windows.Forms.Button)">
            <summary>
            添加按钮
            </summary>
            <param name="btn"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.btn_Click(System.Object,System.EventArgs)">
            <summary>
            验证事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HSUCF.Controls.Validater.GetGroup(System.String)">
            <summary>
            返回所有分组验证对象
            </summary>
            <param name="GroupName"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.Validater.Validate(System.String@,System.Windows.Forms.Control@)">
            <summary>
            全部验证
            </summary>
            <param name="errorMessage"></param>
            <param name="errorControl"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.Validater.Validate(System.String@,System.Windows.Forms.Control@,System.String)">
            <summary>
            分组验证
            </summary>
            <param name="errorMessage"></param>
            <param name="errorControl"></param>
            <param name="GroupName">组名</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.Validater.ClearError">
            <summary>
            情况错误
            </summary>
        </member>
        <member name="M:HSUCF.Controls.Validater.Show(System.Windows.Forms.Control,System.Windows.Forms.ToolTip@,System.String,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="control"></param>
            <param name="toolTip"></param>
            <param name="messageTitle"></param>
            <param name="err"></param>
        </member>
        <member name="T:HSUCF.Controls.ValidateUtility">
            <summary>
            提供：
            验证一个控件中的数值在一定范围的一些验证方法
            验证两个控件数值大小关系的一些验证方法
            验证一个控件中的字符串长度范围的一些验证方法
            </summary>
            <author>hufh@hundsun.com</author>
            <date>2012.9</date>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.GreaterValue``1(System.Windows.Forms.Control,``0,System.String)">
            <summary>
            控件(ctrl)的值必须大于最小值min，小于等于T类型的MaxValue，否则验证错误提示errorMsg
            如果转换异常，依然提示错误信息errorMsg
            如果ctrl为空，不进行验证。
            注意：保证传入的min值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime类型
            </summary>
            <param name="ctrl"></param>
            <param name="min"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.GreaterOrEqualValue``1(System.Windows.Forms.Control,``0,System.String)">
            <summary>
            控件(ctrl)的值必须大于等于最小值min，小于等于T类型的MaxValue，否则验证错误提示errorMsg
            转换异常的话，依然提示错误信息errorMsg
            ctrl为空的话，不进行验证。
            注意：保证传入的min值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl"></param>
            <param name="min"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.LessValue``1(System.Windows.Forms.Control,``0,System.String)">
            <summary>
            控件(ctrl)的值必须小于最大值max，大于等于T类型的MinValue，否则验证错误提示errorMsg
            转换异常的话，依然提示错误信息errorMsg
            ctrl为空的话，不进行验证。
            注意：保证传入的max值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl"></param>
            <param name="max"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.LessOrEqualValue``1(System.Windows.Forms.Control,``0,System.String)">
            <summary>
            控件(ctrl)的值必须小于等于最大值max，大于等于T类型的MinValue，否则验证错误提示errorMsg
            如果转换异常，依然提示错误信息errorMsg
            如果ctrl为空，不进行验证。
            注意：保证传入的max值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl"></param>
            <param name="max"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.EqualValue``1(System.Windows.Forms.Control,System.String,``0,System.String)">
            <summary>
            控件(ctrl)的某个属性(ctrlProp)的值必须等于value2，否则验证错误提示errorMsg
            如果转换异常，依然提示错误信息errorMsg 
            注意：保证传入的value2值和类型T相符合
            目前支持int,long,float,double,decimal,string类型。
            主要是为了验证字典控件的值是否等于特定值。如果是验证字典控件，ctrlProp=“Data”
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl"></param>
            <param name="ctrlProp"></param>
            <param name="value2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.EqualValue``1(System.Windows.Forms.Control,``0,System.String)">
            <summary>
            控件(ctrl)的值必须等于值equalValue，否则验证错误提示errorMsg
            如果转换异常，依然提示错误信息errorMsg
            注意：保证传入的equalValue值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime,string类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl"></param>
            <param name="equalValue"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.BetweenValue``1(System.Windows.Forms.Control,``0,``0,System.String,System.Boolean,System.Boolean)">
            <summary>
            判断控件的值是否在一个范围之内
            如果转换异常，依然提示错误信息errorMsg
            如果ctrl为空，不进行验证。
            注意：保证传入的min，max值和类型T相符合
            目前支持int,long,float,double,decimal,DateTime类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl">控件对象</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="errorMsg">报错信息</param>
            <param name="isMinInclude">是否包括最小值</param>
            <param name="isMaxInclude">是否包括最大值</param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.LessControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须小于ctrl2，否则提示错误errorMsg。
            如果其中有一个控件为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.LessOrEqualControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须小于等于ctrl2，否则提示错误errorMsg。
            如果其中有一个控件为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.GreaterControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须大于ctrl2，否则提示错误errorMsg。
            如果其中有一个控件为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.GreaterOrEqualControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须大于等于ctrl2，否则提示错误errorMsg。
            如果其中有一个控件为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.EqualControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须等于ctrl2，否则提示错误errorMsg。
            如果其中有一个控件为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime,string
            如果比较int、long型，1.0和1不相等。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.NotEqualControl``1(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String)">
            <summary>
            ctrl1必须不等于ctrl2，否则提示错误errorMsg。
            如果两个控件都为空，则不会进行此比较验证
            两个控件的数据类型必须是同一种类型T
            如果转换出现异常，仍然提示错误errorMsg
            支持int,long,float,double,decimal,DateTime,string
            如果比较int、long型，1.0和1相等。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctrl1"></param>
            <param name="ctrl2"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.LessOrEqualLength(System.Windows.Forms.Control,System.Int32,System.String)">
            <summary>
            判断控件中的字符串长度是否小于等于maxLen,否则提示错误信息errorMsg
            </summary>
            <param name="ctrl"></param>
            <param name="maxLen"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.GreaterOrEqualLength(System.Windows.Forms.Control,System.Int32,System.String)">
            <summary>
            判断控件中的字符串长度是大于等于minLen,否则提示错误信息errorMsg
            </summary>
            <param name="ctrl"></param>
            <param name="minLen"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:HSUCF.Controls.ValidateUtility.BetweenLength(System.Windows.Forms.Control,System.Int32,System.Int32,System.String)">
            <summary>
            判断控件中的字符串长度是否大于等于minLen并且小于等于maxLen,否则提示错误信息errorMsg
            </summary>
            <param name="ctrl"></param>
            <param name="minLen"></param>
            <param name="maxlen"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="F:HSUCF.Controls.ValidateUtility.DoubleEpsilon">
            <summary>
            用于比较两个double类型时候，该值表示double值的0
            </summary>
        </member>
        <member name="T:HSUCF.Controls.XPanderControls.hsCollapsePanel">
            <summary>
            可折叠的容器面板,需要设置Dock属性和ShowExpandIcon才能显示可折叠标示，才能进行折叠/收缩
            </summary>
        </member>
        <member name="M:HSUCF.Controls.XPanderControls.Panel.GetPanelIconBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the background for an panelicon image
            </summary>
            <param name="graphics">The Graphics to draw on.</param>
            <param name="rectanglePanelIcon"></param>
            <param name="backgroundColorBegin"></param>
            <param name="backgroundColorEnd"></param>
            <returns></returns>
        </member>
        <member name="P:HSUCF.Controls.XPanderControls.Panel.ShowCaptionbar">
            <example>
            <code>
            private void btnShowHideCaptionbar_Click(object sender, EventArgs e)
            {
                //displaye or hides the captionbar at the top of the panel
                panel6.ShowCaptionbar = !panel6.ShowCaptionbar;
            }
            </code>
            </example>
        </member>
        <member name="M:HSUCF.Controls.XPanderControls.hsCollapsePanel.#ctor">
            <summary>
            可折叠的容器面板,需要设置Dock属性和ShowExpandIcon才能显示可折叠标示，才能进行折叠/收缩
            </summary>
        </member>
        <member name="M:HSUCF.Controls.XPanderControls.hsCollapsePanel.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.XPanderControls.hsCollapsePanel.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.XPanderControls.hsCollapsePanel.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.XPanderControls.hsCollapsePanel.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.XPanderControls.hsCollapsePanel.HSUCF#Controls#IHSSkipSupport#IsSkipByEnter">
            <summary>
            回车键跳转
            </summary>
        </member>
        <member name="M:HSUCF.Controls.XPanderControls.XPanderPanel.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.XPanderControls.XPanderPanel.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="M:HSUCF.Controls.hsXPanderPanelList.Expand(HSUCF.Controls.XPanderControls.BasePanel)">
            <example>
            <code>
            private void btnExpandXPander_Click(object sender, EventArgs e)
            {
               // xPanderPanel10 is not null
               if (xPanderPanel10 != null)
               {
                   HSUCF.Controls.XPanderControls.XPanderPanelList panelList = xPanderPanel10.Parent as HSUCF.Controls.XPanderControls.XPanderPanelList;
                   // and it's parent panelList is not null
                   if (panelList != null)
                   {
                       // expands xPanderPanel10 in it's panelList.
                       panelList.Expand(xPanderPanel10);
                   }
               }
            }
            </code>
            </example>
        </member>
        <member name="M:HSUCF.Controls.hsXPanderPanelList.SetControlTheme">
            <summary>
            姜亮
            </summary>
        </member>
        <member name="F:HSUCF.Controls.hsXPanderPanelList.useCustomTheme">
            <summary>
            是否启用系统主题样式
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsXPanderPanelList.XPanderPanels">
            <example>The following code example creates a XPanderPanel and adds it to the XPanderPanels collection,
            <code>
            private void btnAddXPanderPanel_Click(object sender, EventArgs e)
            {
                if (xPanderPanelList3 != null)
                {
                    // Create and initialize a XPanderPanel.
                    HSUCF.Controls.XPanderControls.XPanderPanel xpanderPanel = new HSUCF.Controls.XPanderControls.XPanderPanel();
                    xpanderPanel.Text = "new XPanderPanel";
                    // and add it to the XPanderPanels collection
                    xPanderPanelList3.XPanderPanels.Add(xpanderPanel);
                }
            }
            </code>
            </example>
        </member>
        <member name="P:HSUCF.Controls.hsXPanderPanelList.HSUCF#Controls#IHSSkipSupport#IsSkipByUp">
            <summary>
            是否通过向上键跳转
            </summary>
        </member>
        <member name="P:HSUCF.Controls.hsXPanderPanelList.HSUCF#Controls#IHSSkipSupport#IsSkipByDown">
            <summary>
            是否通过向下键跳转
            </summary>
        </member>
    </members>
</doc>
